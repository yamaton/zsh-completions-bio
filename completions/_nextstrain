#compdef nextstrain

# Auto-generated with h2o


function _nextstrain {
    local line state

    function _commands {
        local -a commands
        commands=(
            'build:Run pathogen build'
            'view:View pathogen build'
            'deploy:Deploy pathogen build'
            'remote:Upload, download, and manage remote datasets and narratives.'
            'shell:Start a new shell in the build environment'
            'update:Update your local image copy'
            'check-setup:Test your local setup'
            'login:Log into Nextstrain.org'
            'logout:Log out of Nextstrain.org'
            'whoami:Show information about the logged-in user'
            'version:Show version information'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (build)
            _nextstrain_build
            ;;

        (view)
            _nextstrain_view
            ;;

        (deploy)
            _nextstrain_deploy
            ;;

        (remote)
            _nextstrain_remote
            ;;

        (shell)
            _nextstrain_shell
            ;;

        (update)
            _nextstrain_update
            ;;

        (check-setup)
            _nextstrain_check-setup
            ;;

        (login)
            _nextstrain_login
            ;;

        (logout)
            _nextstrain_logout
            ;;

        (whoami)
            _nextstrain_whoami
            ;;

        (version)
            _nextstrain_version
            ;;

        esac
        ;;
     esac

}

function _nextstrain_build {
    _arguments \
        {--help,-h}'[Show a brief help message of common options and exit]' \
        '--help-all[Show a full help message of all options and exit]' \
        '--detach[Run the build in the background, detached from your terminal. Re-attach later using --attach. Currently only supported when also using --aws-batch. (default: False)]' \
        '--attach[Re-attach to a --detach'\''ed build to view output and download results. Currently only supported when also using --aws-batch. (default: None)]' \
        '--cpus[Number of CPUs/cores/threads/jobs to utilize at once. Limits containerized (Docker, AWS Batch) builds to this amount. Informs Snakemake'\''s resource scheduler when applicable. Informs the AWS Batch instance size selection. (default: None)]' \
        '--memory[Amount of memory to make available to the build. Units of b, kb, mb, gb, kib, mib, gib are supported. Limits containerized (Docker, AWS Batch) builds to this amount. Informs Snakemake'\''s resource scheduler when applicable. Informs the AWS Batch instance size selection. (default: None)]' \
        '--download[Only download new or modified files matching <pattern> from the remote build. Basic shell-style globbing is supported, but be sure to escape wildcards or quote the whole pattern so your shell doesn'\''t expand them. May be passed more than once. Currently only supported when also using --aws-batch. Default is to download every new or modified file.]' \
        '--no-download[Do not download any files from the remote build when it completes. Currently only supported when also using --aws-batch.]' \
        '--docker[Run commands inside a container image using Docker. (default)]' \
        '--native[Run commands on the native host, outside of any container image.]' \
        '--aws-batch[Run commands remotely on AWS Batch inside the Nextstrain container image.]' \
        '--image[Container image name to use for the Nextstrain computing environment (default: nextstrain/base)]' \
        '--exec[Program to run inside the build environment (default: snakemake)]' \
        '--augur[Replace the image'\''s copy of augur with a local copy (default: None)]':file:_files \
        '--auspice[Replace the image'\''s copy of auspice with a local copy (default: None)]':file:_files \
        '--fauna[Replace the image'\''s copy of fauna with a local copy (default: None)]':file:_files \
        '--sacra[Replace the image'\''s copy of sacra with a local copy (default: None)]':file:_files \
        '--docker-arg[Additional arguments to pass to `docker run` (default: \[\])]' \
        '--aws-batch-job[Name of the AWS Batch job definition to use (default: nextstrain-job)]' \
        '--aws-batch-queue[Name of the AWS Batch job queue to use (default: nextstrain-job-queue)]' \
        '--aws-batch-s3-bucket[Name of the AWS S3 bucket to use as shared storage (default: nextstrain-jobs)]' \
        '--aws-batch-cpus[Number of vCPUs to request for job (default: None)]' \
        '--aws-batch-memory[Amount of memory in MiB to request for job (default: None)]' \
        "*: :_files"

}

function _nextstrain_view {
    _arguments \
        {--help,-h}'[Show a brief help message of common options and exit]' \
        '--help-all[Show a full help message of all options and exit]' \
        '--allow-remote-access[Allow other computers on the network to access the website (alias for --host=0.0.0.0)]' \
        '--host[Listen on the given hostname or IP address instead of the default 127.0.0.1]' \
        '--port[Listen on the given port instead of the default port 4000]' \
        '--docker[Run commands inside a container image using Docker. (default)]' \
        '--native[Run commands on the native host, outside of any container image.]' \
        '--image[Container image name to use for the Nextstrain computing environment (default: nextstrain/base)]' \
        '--exec[Program to run inside the build environment (default: auspice)]' \
        '--augur[Replace the image'\''s copy of augur with a local copy (default: None)]':file:_files \
        '--auspice[Replace the image'\''s copy of auspice with a local copy (default: None)]':file:_files \
        '--fauna[Replace the image'\''s copy of fauna with a local copy (default: None)]':file:_files \
        '--sacra[Replace the image'\''s copy of sacra with a local copy (default: None)]':file:_files \
        '--docker-arg[Additional arguments to pass to `docker run` (default: \[\])]' \
        "*: :_files"

}

function _nextstrain_deploy {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}


function _nextstrain_remote {
    local line state

    function _commands {
        local -a commands
        commands=(
            'upload:Upload dataset and narrative files'
            'download:Download dataset and narrative files'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (upload)
            _nextstrain_remote_upload
            ;;

        (download)
            _nextstrain_remote_download
            ;;

        esac
        ;;
     esac

}

function _nextstrain_remote_upload {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _nextstrain_remote_download {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {--recursively,-r}'[Download everything under the given remote URL path prefix (default: False)]' \
        "*: :_files"

}

function _nextstrain_shell {
    _arguments \
        {--help,-h}'[Show a brief help message of common options and exit]' \
        '--help-all[Show a full help message of all options and exit]' \
        '--docker[Run commands inside a container image using Docker. (default)]' \
        '--image[Container image name to use for the Nextstrain computing environment (default: nextstrain/base)]' \
        '--exec[Program to run inside the build environment (default: bash)]' \
        '--augur[Replace the image'\''s copy of augur with a local copy (default: None)]':file:_files \
        '--auspice[Replace the image'\''s copy of auspice with a local copy (default: None)]':file:_files \
        '--fauna[Replace the image'\''s copy of fauna with a local copy (default: None)]':file:_files \
        '--sacra[Replace the image'\''s copy of sacra with a local copy (default: None)]':file:_files \
        '--docker-arg[Additional arguments to pass to `docker run` (default: \[\])]' \
        "*: :_files"

}

function _nextstrain_update {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _nextstrain_check-setup {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        '--set-default[Set the default environment to the first which passes check-setup. Checks run in the order: docker, native, aws-batch. (default: False)]' \
        "*: :_files"

}

function _nextstrain_login {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {--username,-u}'[The username to log in as. If not provided, the NEXTSTRAIN_USERNAME environment variable will be used if available, otherwise you'\''ll be prompted to enter your username. (default: None)]' \
        '--no-prompt[Never prompt for a username/password; succeed only if there are login credentials in the environment or existing valid/renewable tokens saved locally, otherwise error. Useful for scripting. (default: False)]' \
        '--renew[Renew existing tokens, if possible. Useful to refresh group membership information (for example) sooner than the tokens would normally be renewed. (default: False)]' \
        "*: :_files"

}

function _nextstrain_logout {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _nextstrain_whoami {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _nextstrain_version {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        '--verbose[Show versions of individual Nextstrain components in the image (default: False)]' \
        "*: :_files"

}

_nextstrain "$@"


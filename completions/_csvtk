#compdef csvtk

# Auto-generated with h2o


function _csvtk {
    local line state

    function _commands {
        local -a commands
        commands=(
            'add-header:add column names'
            'cat:stream file to stdout and report progress on stderr'
            'comb:compute combinations of items at every row'
            'concat:concatenate CSV/TSV files by rows'
            'corr:calculate Pearson correlation between two columns'
            'csv2json:convert CSV to JSON format'
            'csv2md:convert CSV to markdown format'
            'csv2rst:convert CSV to reStructuredText format'
            'csv2tab:convert CSV to tabular format'
            'csv2xlsx:convert CSV/TSV files to XLSX file'
            'cut:select and arrange fields'
            'del-header:delete column names'
            'dim:dimensions of CSV file'
            'filter:filter rows by values of selected fields with arithmetic expression'
            'filter2:filter rows by awk-like arithmetic/string expressions'
            'fmtdate:format date of selected fields'
            'fold:fold multiple values of a field into cells of groups'
            'freq:frequencies of selected fields'
            'gather:gather columns into key-value pairs'
            'genautocomplete:generate shell autocompletion script (bash|zsh|fish|powershell)'
            'grep:grep data by selected fields with patterns/regular expressions'
            'head:print first N records'
            'headers:print headers'
            'inter:intersection of multiple files'
            'join:join files by selected fields (inner, left and outer join)'
            'mutate:create new column from selected fields by regular expression'
            'mutate2:create new column from selected fields by awk-like arithmetic/string expressions'
            'ncol:print number of columns'
            'nrow:print number of records'
            'plot:plot common figures'
            'pretty:convert CSV to readable aligned table'
            'rename:rename column names with new names'
            'rename2:rename column names by regular expression'
            'replace:replace data of selected fields by regular expression'
            'round:round float to n decimal places'
            'sample:sampling by proportion'
            'sep:separate column into multiple columns'
            'sort:sort by selected fields'
            'space2tab:convert space delimited format to CSV'
            'split:split CSV/TSV into multiple files according to column values'
            'splitxlsx:split XLSX sheet into multiple sheets according to column values'
            'summary:summary statistics of selected numeric or text fields (groupby group fields)'
            'tab2csv:convert tabular format to CSV'
            'transpose:transpose CSV data'
            'unfold:unfold multiple values in cells of a field'
            'uniq:unique data without sorting'
            'version:print version information and check for update'
            'watch:monitor the specified fields'
            'xlsx2csv:convert XLSX to CSV format'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-h,--help}'[help for csvtk]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (add-header)
            _csvtk_add-header
            ;;

        (cat)
            _csvtk_cat
            ;;

        (comb)
            _csvtk_comb
            ;;

        (concat)
            _csvtk_concat
            ;;

        (corr)
            _csvtk_corr
            ;;

        (csv2json)
            _csvtk_csv2json
            ;;

        (csv2md)
            _csvtk_csv2md
            ;;

        (csv2rst)
            _csvtk_csv2rst
            ;;

        (csv2tab)
            _csvtk_csv2tab
            ;;

        (csv2xlsx)
            _csvtk_csv2xlsx
            ;;

        (cut)
            _csvtk_cut
            ;;

        (del-header)
            _csvtk_del-header
            ;;

        (dim)
            _csvtk_dim
            ;;

        (filter)
            _csvtk_filter
            ;;

        (filter2)
            _csvtk_filter2
            ;;

        (fmtdate)
            _csvtk_fmtdate
            ;;

        (fold)
            _csvtk_fold
            ;;

        (freq)
            _csvtk_freq
            ;;

        (gather)
            _csvtk_gather
            ;;

        (genautocomplete)
            _csvtk_genautocomplete
            ;;

        (grep)
            _csvtk_grep
            ;;

        (head)
            _csvtk_head
            ;;

        (headers)
            _csvtk_headers
            ;;

        (inter)
            _csvtk_inter
            ;;

        (join)
            _csvtk_join
            ;;

        (mutate)
            _csvtk_mutate
            ;;

        (mutate2)
            _csvtk_mutate2
            ;;

        (ncol)
            _csvtk_ncol
            ;;

        (nrow)
            _csvtk_nrow
            ;;

        (plot)
            _csvtk_plot
            ;;

        (pretty)
            _csvtk_pretty
            ;;

        (rename)
            _csvtk_rename
            ;;

        (rename2)
            _csvtk_rename2
            ;;

        (replace)
            _csvtk_replace
            ;;

        (round)
            _csvtk_round
            ;;

        (sample)
            _csvtk_sample
            ;;

        (sep)
            _csvtk_sep
            ;;

        (sort)
            _csvtk_sort
            ;;

        (space2tab)
            _csvtk_space2tab
            ;;

        (split)
            _csvtk_split
            ;;

        (splitxlsx)
            _csvtk_splitxlsx
            ;;

        (summary)
            _csvtk_summary
            ;;

        (tab2csv)
            _csvtk_tab2csv
            ;;

        (transpose)
            _csvtk_transpose
            ;;

        (unfold)
            _csvtk_unfold
            ;;

        (uniq)
            _csvtk_uniq
            ;;

        (version)
            _csvtk_version
            ;;

        (watch)
            _csvtk_watch
            ;;

        (xlsx2csv)
            _csvtk_xlsx2csv
            ;;

        esac
        ;;
     esac

}

function _csvtk_add-header {
    _arguments \
        {-h,--help}'[help for add-header]' \
        {-n,--names}'[column names to add, in CSV format]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_cat {
    _arguments \
        {-b,--buffsize}'[buffer size (default 8192)]' \
        {-h,--help}'[help for cat]' \
        {-L,--lines}'[count lines instead of bytes]' \
        {-p,--print-freq}'[print frequency (-1 for print after parsing) (default 1)]' \
        {-s,--total}'[expected total bytes/lines (default -1)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_comb {
    _arguments \
        {-h,--help}'[help for comb]' \
        {-i,--ignore-case,-S,--nat-sort}'[sort items in natural order]' \
        {-n,--number}'[number of items in a combination, 0 for no limit, i.e., return all combinations (default 2)]' \
        {-s,--sort}'[sort items in a combination]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_concat {
    _arguments \
        {-h,--help}'[help for concat]' \
        {-i,--ignore-case}'[ignore case (column name)]' \
        {-k,--keep-unmatched}'[keep blanks even if no any data of a file matches]' \
        {-u,--unmatched-repl}'[replacement for unmatched data]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_corr {
    _arguments \
        {-f,--fields}'[comma separated fields]' \
        {-h,--help}'[help for corr]' \
        {-i,--ignore_nan}'[Ignore non-numeric fields to avoid returning NaN]' \
        {-L,--log}'[Calcute correlations on Log10 transformed data]' \
        {-x,--pass}'[passthrough mode (forward input to output)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_csv2json {
    _arguments \
        {-b,--blanks}'[do not convert "", "na", "n/a", "none", "null", "." to null]' \
        {-h,--help}'[help for csv2json]' \
        {-i,--indent}'[indent. if given blank, output json in one line. (default " ")]' \
        {-k,--key}'[output json as an array of objects keyed by a given filed rather than as a list. e.g -k 1 or -k columnA]' \
        {-n,--parse-num}'[parse numeric values for nth column, multiple values are supported and "a"/"all" for all columns]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_csv2md {
    _arguments \
        {-a,--alignments}'[comma separated alignments. e.g. -a l,c,c,c or -a c (default "l")]' \
        {-h,--help}'[help for csv2md]' \
        {-w,--min-width}'[min width (at least 3) (default 3)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_csv2rst {
    _arguments \
        {-k,--cross}'[charactor of cross (default "+")]' \
        {-s,--header}'[charactor of separator between header row and data rowws (default "=")]' \
        {-h,--help}'[help for csv2rst]' \
        {-b,--horizontal-border}'[charactor of horizontal border (default "-")]' \
        {-p,--padding}'[charactor of padding (default " ")]' \
        {-B,--vertical-border}'[charactor of vertical border (default "|")]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_csv2tab {
    _arguments \
        {-h,--help}'[help for csv2tab]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_csv2xlsx {
    _arguments \
        {-h,--help}'[help for csv2xlsx]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_cut {
    _arguments \
        {-m,--allow-missing-col}'[allow missing column]' \
        {-b,--blank-missing-col}'[blank missing column]' \
        {-f,--fields}'[select only these fields. type "csvtk cut -h" for examples]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for cut]' \
        {-i,--ignore-case}'[ignore case (column name)]' \
        {-u,--uniq-column}'[deduplicate columns matched by multiple fuzzy column names]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_del-header {
    _arguments \
        {-h,--help}'[help for del-header]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_dim {
    _arguments \
        '--cols[only print number of columns (or using "csvtk ncol"]' \
        {-h,--help}'[help for dim]' \
        {-n,--no-files}'[do not print file names (only affect --cols and --rows)]' \
        '--rows[only print number of rows (or using "csvtk nrow")]' \
        '--tabular[output in machine-friendly tabular format]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_filter {
    _arguments \
        '--any[print record if any of the field satisfy the condition]' \
        {-f,--filter}'[filter condition. e.g. -f "age>12" or -f "1,3<=2" or -F -f "c*!=0"]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for filter]' \
        {-n,--line-number}'[print line number as the first column ("n")]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_filter2 {
    _arguments \
        {-f,--filter}'[awk-like filter condition. e.g. '\''$age>12'\'' or '\''$1 > $3'\'' or '\''$name=="abc"'\'' or '\''$1 % 2 == 0'\'']' \
        {-h,--help}'[help for filter2]' \
        {-n,--line-number}'[print line number as the first column ("n")]' \
        {-s,--numeric-as-string}'[treat even numeric fields as strings to avoid converting big numbers into scientific notation]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_fmtdate {
    _arguments \
        {-f,--fields}'[select only these fields. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        '--format[output date format in MS Excel (TM) syntax, type "csvtk fmtdate -h" for details (default "YYYY-MM-DD hh:mm:ss")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for fmtdate]' \
        {-k,--keep-unparsed}'[keep the key as value when no value found for the key]' \
        {-z,--time-zone}'[timezone aka "Asia/Shanghai" or "America/Los_Angeles" formatted time-zone, type "csvtk fmtdate -h" for details]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_fold {
    _arguments \
        {-f,--fields}'[key fields for grouping. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields (only for key fields), e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for fold]' \
        {-i,--ignore-case}'[ignore case]' \
        {-s,--separater}'[separater for folded values (default "; ")]' \
        {-v,--vfield}'[value field for folding]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_freq {
    _arguments \
        {-f,--fields}'[select these fields as the key. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for freq]' \
        {-i,--ignore-case}'[ignore case]' \
        {-r,--reverse}'[reverse order while sorting]' \
        {-n,--sort-by-freq}'[sort by frequency]' \
        {-k,--sort-by-key}'[sort by key]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_gather {
    _arguments \
        {-f,--fields}'[fields for gathering. e.g -f 1,2 or -f columnA,columnB, or -f -columnA for unselect columnA]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for gather]' \
        {-k,--key}'[name of key column to create in output]' \
        {-v,--value}'[name of value column to create in output]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_genautocomplete {
    _arguments \
        '--file[autocompletion file (default "~/.bash_completion.d/csvtk.sh")]' \
        {-h,--help}'[help for genautocomplete]' \
        '--shell[autocompletion type (bash|zsh|fish|powershell) (default "bash")]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_grep {
    _arguments \
        '--delete-matched[delete a pattern right after being matched, this keeps the firstly matched data and speedups when using regular expressions]' \
        {-f,--fields}'[comma separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F -f "group*" (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for grep]' \
        {-i,--ignore-case}'[ignore case]' \
        '--immediate-output[print output immediately, do not use write buffer]' \
        {-v,--invert}'[invert match]' \
        {-n,--line-number}'[print line number as the first column ("n")]' \
        {-N,--no-highlight}'[no highlight]' \
        {-p,--pattern}'[query pattern (multiple values supported). Attention: use double quotation marks for patterns containing comma, e.g., -p '\''"A{2,}"'\'']' \
        {-P,--pattern-file}'[pattern files (one pattern per line)]' \
        {-r,--use-regexp}'[patterns are regular expression]' \
        '--verbose[verbose output]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_head {
    _arguments \
        {-h,--help}'[help for head]' \
        {-n,--number}'[print first N records (default 10)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_headers {
    _arguments \
        {-h,--help}'[help for headers]' \
        {-v,--verbose}'[print verbose information]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_inter {
    _arguments \
        {-f,--fields}'[select these fields as the key. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for inter]' \
        {-i,--ignore-case}'[ignore case]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_join {
    _arguments \
        {-f,--fields}'[Semicolon separated key fields of all files, if given one, we think all the files have the same key columns. Fields of different files should be separated by ";", e.g -f "1;2" or -f "A,B;C,D" or -f id (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for join]' \
        {-i,--ignore-case}'[ignore case]' \
        {-n,--ignore-null}'[do not match NULL values]' \
        {-k,--keep-unmatched}'[keep unmatched data of the first file (left join)]' \
        {-L,--left-join}'[left join, equals to -k/--keep-unmatched, exclusive with --outer-join]' \
        '--na[content for filling NA data]' \
        {-O,--outer-join}'[outer join, exclusive with --left-join]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_mutate {
    _arguments \
        {-f,--fields}'[select only these fields. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-h,--help}'[help for mutate]' \
        {-i,--ignore-case}'[ignore case]' \
        '--na[for unmatched data, use blank instead of original data]' \
        {-n,--name}'[new column name]' \
        {-p,--pattern}'[search regular expression with capture bracket. e.g. (default "^(.+)$")]' \
        {-R,--remove}'[remove input column]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_mutate2 {
    _arguments \
        {-w,--decimal-width}'[limit floats to N decimal points (default 2)]' \
        {-e,--expression}'[arithmetic/string expressions. e.g. "'\''string'\''", '\''"abc"'\'', '\'' $a + "-" + $b '\'', '\''$1 + $2'\'', '\''$a / $b'\'', '\'' $1 > 100 ? "big" : "small" '\'']' \
        {-h,--help}'[help for mutate2]' \
        {-n,--name}'[new column name]' \
        {-s,--numeric-as-string}'[treat even numeric fields as strings to avoid converting big numbers into scientific notation]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_ncol {
    _arguments \
        {-n,--file-name}'[print file names]' \
        {-h,--help}'[help for ncol]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_nrow {
    _arguments \
        {-n,--file-name}'[print file names]' \
        {-h,--help}'[help for nrow]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}


function _csvtk_plot {
    local line state

    function _commands {
        local -a commands
        commands=(
            'box:plot boxplot'
            'hist:plot histogram'
            'line:line plot and scatter plot'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--axis-width[axis width (default 1.5)]' \
        {-f,--data-field}'[column index or column name of data (default "1")]' \
        '--format[image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")]' \
        {-g,--group-field}'[column index or column name of group]' \
        '--height[Figure height (default 4.5)]' \
        {-h,--help}'[help for plot]' \
        '--label-size[label font size (default 14)]' \
        '--na-values[NA values, case ignored (default \[,NA,N/A\])]' \
        '--skip-na[skip NA values in --na-values]' \
        '--tick-width[axis tick width (default 1.5)]' \
        '--title[Figure title]' \
        '--title-size[title font size (default 16)]' \
        '--width[Figure width (default 6)]' \
        '--x-max[maximum value of X axis]' \
        '--x-min[minimum value of X axis]' \
        '--xlab[x label text]' \
        '--y-max[maximum value of Y axis]' \
        '--y-min[minimum value of Y axis]' \
        '--ylab[y label text]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (box)
            _csvtk_plot_box
            ;;

        (hist)
            _csvtk_plot_hist
            ;;

        (line)
            _csvtk_plot_line
            ;;

        esac
        ;;
     esac

}

function _csvtk_plot_box {
    _arguments \
        '--box-width[box width]' \
        {-h,--help}'[help for box]' \
        '--horiz[horize box plot]' \
        '--axis-width[axis width (default 1.5)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-f,--data-field}'[column index or column name of data (default "1")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        '--format[image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")]' \
        {-g,--group-field}'[column index or column name of group]' \
        '--height[Figure height (default 4.5)]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        '--label-size[label font size (default 14)]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        '--na-values[NA values, case ignored (default \[,NA,N/A\])]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        '--skip-na[skip NA values in --na-values]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        '--tick-width[axis tick width (default 1.5)]' \
        '--title[Figure title]' \
        '--title-size[title font size (default 16)]' \
        '--width[Figure width (default 6)]' \
        '--x-max[maximum value of X axis]' \
        '--x-min[minimum value of X axis]' \
        '--xlab[x label text]' \
        '--y-max[maximum value of Y axis]' \
        '--y-min[minimum value of Y axis]' \
        '--ylab[y label text]' \
        "*: :_files"

}

function _csvtk_plot_hist {
    _arguments \
        '--bins[number of bins (default 50)]' \
        '--color-index[color index, 1-7 (default 1)]' \
        {-h,--help}'[help for hist]' \
        '--percentiles[calculate percentiles]' \
        '--axis-width[axis width (default 1.5)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-f,--data-field}'[column index or column name of data (default "1")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        '--format[image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")]' \
        {-g,--group-field}'[column index or column name of group]' \
        '--height[Figure height (default 4.5)]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        '--label-size[label font size (default 14)]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        '--na-values[NA values, case ignored (default \[,NA,N/A\])]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        '--skip-na[skip NA values in --na-values]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        '--tick-width[axis tick width (default 1.5)]' \
        '--title[Figure title]' \
        '--title-size[title font size (default 16)]' \
        '--width[Figure width (default 6)]' \
        '--x-max[maximum value of X axis]' \
        '--x-min[minimum value of X axis]' \
        '--xlab[x label text]' \
        '--y-max[maximum value of Y axis]' \
        '--y-min[minimum value of Y axis]' \
        '--ylab[y label text]' \
        "*: :_files"

}

function _csvtk_plot_line {
    _arguments \
        '--color-index[color index, 1-7 (default 1)]' \
        {-x,--data-field-x}'[column index or column name of X for command line]' \
        {-y,--data-field-y}'[column index or column name of Y for command line]' \
        {-h,--help}'[help for line]' \
        '--legend-left[locate legend along the left edge of the plot]' \
        '--legend-top[locate legend along the top edge of the plot]' \
        '--line-width[line width (default 1.5)]' \
        '--point-size[point size (default 3)]' \
        '--scatter[only plot points]' \
        '--axis-width[axis width (default 1.5)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-f,--data-field}'[column index or column name of data (default "1")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        '--format[image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default "png")]' \
        {-g,--group-field}'[column index or column name of group]' \
        '--height[Figure height (default 4.5)]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        '--label-size[label font size (default 14)]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        '--na-values[NA values, case ignored (default \[,NA,N/A\])]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        '--skip-na[skip NA values in --na-values]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        '--tick-width[axis tick width (default 1.5)]' \
        '--title[Figure title]' \
        '--title-size[title font size (default 16)]' \
        '--width[Figure width (default 6)]' \
        '--x-max[maximum value of X axis]' \
        '--x-min[minimum value of X axis]' \
        '--xlab[x label text]' \
        '--y-max[maximum value of Y axis]' \
        '--y-min[minimum value of Y axis]' \
        '--ylab[y label text]' \
        "*: :_files"

}

function _csvtk_pretty {
    _arguments \
        {-r,--align-right}'[align right]' \
        {-h,--help}'[help for pretty]' \
        {-W,--max-width}'[max width]' \
        {-w,--min-width}'[min width]' \
        {-s,--separator}'[fields/columns separator (default " ")]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_rename {
    _arguments \
        {-f,--fields}'[select only these fields. e.g -f 1,2 or -f columnA,columnB]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for rename]' \
        {-n,--names}'[comma separated new names]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_rename2 {
    _arguments \
        {-f,--fields}'[select only these fields. e.g -f 1,2 or -f columnA,columnB]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for rename2]' \
        {-i,--ignore-case}'[ignore case]' \
        {-K,--keep-key}'[keep the key as value when no value found for the key]' \
        '--key-capt-idx[capture variable index of key (1-based) (default 1)]' \
        '--key-miss-repl[replacement for key with no corresponding value]' \
        {-k,--kv-file}'[tab-delimited key-value file for replacing key with value when using "{kv}" in -r (--replacement)]' \
        {-A,--kv-file-all-left-columns-as-value}'[treat all columns except 1th one as value for kv-file with more than 2 columns]' \
        {-p,--pattern}'[search regular expression]' \
        {-r,--replacement}'[renamement. supporting capture variables. e.g. $1 represents the text of the first submatch. ATTENTION: use SINGLE quote NOT double quotes in *nix OS or use the \ escape character. Ascending number is also supported by "{nr}".use ${1} instead of $1 when {kv} given!]' \
        {-n,--start-num}'[starting number when using {nr} in replacement (default 1)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_replace {
    _arguments \
        {-f,--fields}'[select only these fields. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for replace]' \
        {-i,--ignore-case}'[ignore case]' \
        {-K,--keep-key}'[keep the key as value when no value found for the key]' \
        '--key-capt-idx[capture variable index of key (1-based) (default 1)]' \
        '--key-miss-repl[replacement for key with no corresponding value]' \
        {-k,--kv-file}'[tab-delimited key-value file for replacing key with value when using "{kv}" in -r (--replacement)]' \
        {-A,--kv-file-all-left-columns-as-value}'[treat all columns except 1th one as value for kv-file with more than 2 columns]' \
        '--nr-width[minimum width for {nr} in flag -r/--replacement. e.g., formating "1" to "001" by --nr-width 3 (default 1)]' \
        {-p,--pattern}'[search regular expression]' \
        {-r,--replacement}'[replacement. supporting capture variables. e.g. $1 represents the text of the first submatch. ATTENTION: for *nix OS, use SINGLE quote NOT double quotes or use the \ escape character. Record number is also supported by "{nr}".use ${1} instead of $1 when {kv} given!]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_round {
    _arguments \
        {-a,--all-fields}'[all fields, overides -f/--fields]' \
        {-n,--decimal-width}'[limit floats to N decimal points (default 2)]' \
        {-f,--fields}'[select only these fields. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for round]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_sample {
    _arguments \
        {-h,--help}'[help for sample]' \
        {-n,--line-number}'[print line number as the first column ("n")]' \
        {-p,--proportion}'[sample by proportion]' \
        {-s,--rand-seed}'[rand seed (default 11)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_sep {
    _arguments \
        '--drop[drop extra data, exclusive with --merge]' \
        {-f,--fields}'[select only these fields. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-h,--help}'[help for sep]' \
        {-i,--ignore-case}'[ignore case]' \
        '--merge[only splits at most N times, exclusive with --drop]' \
        '--na[content for filling NA data]' \
        {-n,--names}'[new column names]' \
        {-N,--num-cols}'[preset number of new created columns]' \
        {-R,--remove}'[remove input column]' \
        {-s,--sep,-r,--use-regexp}'[separator is a regular expression]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_sort {
    _arguments \
        {-h,--help}'[help for sort]' \
        {-i,--ignore-case,-k,--keys}'[keys (multiple values supported). sort type supported, "N" for natural order, "n" for number, "u" for user-defined order and "r" for reverse. e.g., "-k 1" or "-k A:r" or ""-k 1:nr -k 2" (default \[1\])]' \
        {-L,--levels}'[user-defined level file (one level per line, multiple values supported). format: <field>:<level-file>. e.g., "-k name:u -L name:level.txt"]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_space2tab {
    _arguments \
        {-h,--help}'[help for space2tab]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_split {
    _arguments \
        {-g,--buf-groups}'[buffering N groups before writing to file (default 100)]' \
        {-b,--buf-rows}'[buffering N rows for every group before writing to file (default 100000)]' \
        {-f,--fields}'[comma separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F -f "group*" (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for split]' \
        {-i,--ignore-case}'[ignore case]' \
        {-G,--out-gzip}'[force output gzipped file]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_splitxlsx {
    _arguments \
        {-f,--fields}'[comma separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F -f "group*" (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for splitxlsx]' \
        {-i,--ignore-case}'[ignore case (cell value)]' \
        {-a,--list-sheets}'[list all sheets]' \
        {-N,--sheet-index}'[Nth sheet to retrieve (default 1)]' \
        {-n,--sheet-name}'[sheet to retrieve]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_summary {
    _arguments \
        {-w,--decimal-width}'[limit floats to N decimal points (default 2)]' \
        {-f,--fields}'[operations on these fields. e.g -f 1:count,1:sum or -f colA:mean. available operations: argmax, argmin, collapse, count, countn, countuniq, countunique, entropy, first, last, max, mean, median, min, prod, q1, q2, q3, rand, stdev, sum, uniq, unique, variance]' \
        {-g,--groups}'[group via fields. e.g -f 1,2 or -f columnA,columnB]' \
        {-h,--help}'[help for summary]' \
        {-i,--ignore-non-numbers}'[ignore non-numeric values like "NA" or "N/A"]' \
        {-S,--rand-seed}'[rand seed for operation "rand" (default 11)]' \
        {-s,--separater}'[separater for collapsed data (default "; ")]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_tab2csv {
    _arguments \
        {-h,--help}'[help for tab2csv]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_transpose {
    _arguments \
        {-h,--help}'[help for transpose]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_unfold {
    _arguments \
        {-f,--fields}'[field to expand, only one field is allowed. type "csvtk unfold -h" for examples]' \
        {-h,--help}'[help for unfold]' \
        {-s,--separater}'[separater for folded values (default "; ")]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_uniq {
    _arguments \
        {-f,--fields}'[select these fields as keys. e.g -f 1,2 or -f columnA,columnB (default "1")]' \
        {-F,--fuzzy-fields}'[using fuzzy fields, e.g., -F -f "*name" or -F -f "id123*"]' \
        {-h,--help}'[help for uniq]' \
        {-i,--ignore-case}'[ignore case]' \
        {-n,--keep-n}'[keep at most N records for a key (default 1)]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_version {
    _arguments \
        {-u,--check-update}'[check update]' \
        {-h,--help}'[help for version]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_watch {
    _arguments \
        {-B,--bins}'[number of histogram bins (default -1)]' \
        {-W,--delay}'[sleep this many seconds after plotting (default 1)]' \
        {-y,--dump}'[print histogram data to stderr instead of plotting]' \
        {-f,--field}'[field to watch]' \
        {-h,--help}'[help for watch]' \
        {-O,--image}'[save histogram to this PDF/image file]' \
        {-L,--log}'[log10(x+1) transform numeric values]' \
        {-x,--pass}'[passthrough mode (forward input to output)]' \
        {-p,--print-freq}'[print/report after this many records (-1 for print after EOF) (default -1)]' \
        {-Q,--quiet}'[supress all plotting to stderr]' \
        {-R,--reset}'[reset histogram after every report]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

function _csvtk_xlsx2csv {
    _arguments \
        {-h,--help}'[help for xlsx2csv]' \
        {-a,--list-sheets}'[list all sheets]' \
        {-i,--sheet-index}'[Nth sheet to retrieve (default 1)]' \
        {-n,--sheet-name}'[sheet to retrieve]' \
        {-c,--chunk-size}'[chunk size of CSV reader (default 50)]' \
        {-C,--comment-char}'[lines starting with commment-character will be ignored. if your header row starts with '\''#'\'', please assign "-C" another rare symbol, e.g. '\''$'\'' (default "#")]' \
        {-d,--delimiter}'[delimiting character of the input CSV file (default ",")]' \
        {-E,--ignore-empty-row}'[ignore empty rows]' \
        {-I,--ignore-illegal-row}'[ignore illegal rows]' \
        '--infile-list[file of input files list (one file per line), if given, they are appended to files from cli arguments]' \
        {-l,--lazy-quotes}'[if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field]' \
        {-H,--no-header-row}'[specifies that the input CSV file does not have header row]' \
        {-j,--num-cpus}'[number of CPUs to use (default value depends on your computer) (default 12)]' \
        {-D,--out-delimiter}'[delimiting character of the output CSV file, e.g., -D $'\''\t'\'' for tab (default ",")]' \
        {-o,--out-file}'[out file ("-" for stdout, suffix .gz for gzipped out) (default "-")]' \
        {-T,--out-tabs}'[specifies that the output is delimited with tabs. Overrides "-D"]' \
        {-t,--tabs}'[specifies that the input CSV file is delimited with tabs. Overrides "-d"]' \
        "*: :_files"

}

_csvtk "$@"


#compdef GraphAligner

# Auto-generated with h2o

function _GraphAligner {
    _arguments \
        {-g,--graph}'[input graph (.gfa / .vg)]' \
        {-f,--reads}'[input reads (fasta or fastq, uncompressed or gzipped)]' \
        {-a,--alignments-out}'[output alignment file (.gaf/.gam/.json)]' \
        '--corrected-out[output corrected reads file (.fa/.fa.gz)]' \
        '--corrected-clipped-out[output corrected clipped reads file (.fa/.fa.gz)]' \
        {-h,--help}'[help message]' \
        '--version[print version]' \
        {-t,--threads}'[number of threads (int) (default 1)]' \
        '--verbose[print progress messages]' \
        '--E-cutoff[discard alignments with E-value > arg (double)]' \
        '--min-alignment-score[discard alignments with alignment score < arg (double) (default 0)]' \
        '--multimap-score-fraction[discard alignments whose alignment score is less than this fraction of the best overlapping alignment (double) (default 0.9)]' \
        '--max-cluster-extend[extend up to arg seed clusters (int) (-1 for all) (default 10)]' \
        '--seeds-clustersize[discard seed clusters with fewer than arg seeds (int)]' \
        '--seeds-minimizer-length[k-mer length for minimizer seeding (int)]' \
        '--seeds-minimizer-windowsize[window size for minimizer seeding (int)]' \
        '--seeds-minimizer-density[keep approximately (arg * sequence length) least frequent minimizers (double) (-1 for all)]' \
        '--seeds-minimizer-ignore-frequent[ignore arg most frequent fraction of minimizers (double)]' \
        '--seeds-mum-count[arg longest maximal unique matches (int) (-1 for all)]' \
        '--seeds-mem-count[arg longest maximal exact matches (int) (-1 for all)]' \
        '--seeds-mxm-length[minimum length for maximal unique / exact matches (int)]' \
        '--seeds-mxm-cache-prefix[store the mum/mem seeding index to the disk for reuse, or reuse it if it exists (filename prefix)]' \
        '--seeds-mxm-windowsize[window size for mem/mum seeding (int) (0 for no windowing)]' \
        {-b,--bandwidth}'[alignment bandwidth (int)]' \
        {-C,--tangle-effort}'[tangle effort limit (int) (-1 for unlimited)]' \
        '--X-drop[X-drop alignment ending score cutoff (int)]' \
        '--precise-clipping[clip the alignment ends with arg as the identity cutoff between correct / wrong alignments (double) (default 0.66)]' \
        '--max-trace-count[backtrace from up to arg highest scoring local maxima per cluster (int) (-1 for all)]' \
        {-x,--preset}'[Preset parameters dbg - Parameters optimized for de Bruijn graphs vg - Parameters optimized for variation graphs]' \
        "*: :_files"

}

_GraphAligner "$@"


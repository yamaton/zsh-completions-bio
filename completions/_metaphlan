#compdef metaphlan

# Auto-generated with h2o

function _metaphlan {
    _arguments \
        '--input_type[set whether the input is the FASTA file of metagenomic reads or the SAM file of the mapping of the reads against the MetaPhlAn db.]' \
        '--force[Force profiling of the input file by removing the bowtie2out file]' \
        '--bowtie2db[Folder containing the MetaPhlAn database. You can specify the location by exporting the DEFAULT_DB_FOLDER variable in the shell.]' \
        {-x,--index}'[Specify the id of the database version to use. If "latest", MetaPhlAn will get the latest version. If an index name is provided, MetaPhlAn will try to use it, if available, and skip the online check. If the database files are not found on the local MetaPhlAn installation they will be automatically downloaded \[default latest\]]' \
        '--bt2_ps[Presets options for BowTie2 (applied only when a FASTA file is provided) The choices enabled in MetaPhlAn are:]' \
        '--bowtie2_exe[Full path and name of the BowTie2 executable. This option allowsMetaPhlAn to reach the executable even when it is not in the system PATH or the system PATH is unreachable]' \
        '--bowtie2_build[Full path to the bowtie2-build command to use, deafult assumes that '\''bowtie2-build is present in the system path]' \
        '--bowtie2out[The file for saving the output of BowTie2]':file:_files \
        '--min_mapq_val[Minimum mapping quality value (MAPQ) \[default 5\]]' \
        '--no_map[Avoid storing the --bowtie2out map file]' \
        '--tmp_dir[The folder used to store temporary files \[default is the OS dependent tmp dir\]]' \
        '--tax_lev[The taxonomic level for the relative abundance output: '\''a'\'' : all taxonomic levels '\''k'\'' : kingdoms '\''p'\'' : phyla only '\''c'\'' : classes only '\''o'\'' : orders only '\''f'\'' : families only '\''g'\'' : genera only '\''s'\'' : species only '\''t'\'' : SGBs only \[default '\''a'\''\]]' \
        '--min_cu_len[minimum total nucleotide length for the markers in a clade for estimating the abundance without considering sub-clade abundances \[default 2000\]]' \
        '--min_alignment_len[The sam records for aligned reads with the longest subalignment length smaller than this threshold will be discarded. \[default None\]]' \
        '--add_viruses[Together with --mpa3, allow the profiling of viral organisms]' \
        '--ignore_eukaryotes[Do not profile eukaryotic organisms]' \
        '--ignore_bacteria[Do not profile bacterial organisms]' \
        '--ignore_archaea[Do not profile archeal organisms]' \
        '--ignore_ksgbs[Do not profile known SGBs (together with --sgb option)]' \
        '--ignore_usgbs[Do not profile unknown SGBs (together with --sgb option)]' \
        '--stat_q[Quantile value for the robust average \[default 0.2\]]' \
        '--perc_nonzero[Percentage of markers with a non zero relative abundance for misidentify a species \[default 0.33\]]' \
        '--ignore_markers[File containing a list of markers to ignore.]' \
        '--avoid_disqm[Deactivate the procedure of disambiguating the quasi-markers based on the marker abundance pattern found in the sample. It is generally recommended to keep the disambiguation procedure in order to minimize false positives]' \
        '--stat[Statistical approach for converting marker abundances into clade abundances '\''avg_g'\'' : clade global (i.e. normalizing all markers together) average '\''avg_l'\'' : average of length-normalized marker counts '\''tavg_g'\'' : truncated clade global average at --stat_q quantile '\''tavg_l'\'' : truncated average of length-normalized marker counts (at --stat_q) '\''wavg_g'\'' : winsorized clade global average (at --stat_q) '\''wavg_l'\'' : winsorized average of length-normalized marker counts (at --stat_q) '\''med'\'' : median of length-normalized marker counts \[default tavg_g\]]' \
        '-t[Type of analysis to perform   * rel_ab: profiling a metagenomes in terms of relative abundances * rel_ab_w_read_stats: profiling a metagenomes in terms of relative abundances and estimate the number of reads coming from each clade. * reads_map: mapping from reads to clades (only reads hitting a marker) * clade_profiles: normalized marker counts for clades with at least a non-null marker * marker_ab_table: normalized marker counts (only when > 0.0 and normalized by metagenome size if --nreads is specified) * marker_counts: non-normalized marker counts \[use with extreme caution\] * marker_pres_table: list of markers present in the sample (threshold at 1.0 if not differently specified with --pres_th * clade_specific_strain_tracker: list of markers present for a specific clade, specified with --clade, and all its subclades]' \
        '--clade[The clade for clade_specific_strain_tracker analysis]' \
        '--nreads[The total number of reads in the original metagenome. It is mandatory when the --input_type is a SAM file.]' \
        '--pres_th[Threshold for calling a marker present by the -t marker_pres_table option]' \
        '--min_ab[The minimum percentage abundance for the clade in the clade_specific_strain_tracker analysis]' \
        {-o,--output_file}'[The output file (if not specified as positional argument)]':file:_files \
        '--sample_id_key[Specify the sample ID key for this analysis. Defaults to '\''SampleID'\''.]' \
        '--use_group_representative[Use a species as representative for species groups.]' \
        '--sample_id[Specify the sample ID for this analysis. Defaults to '\''Metaphlan_Analysis'\''.]' \
        {-s,--samout}'[The sam output file]':file:_files \
        '--legacy-output[Old MetaPhlAn2 two columns output]' \
        '--CAMI_format_output[Report the profiling using the CAMI output format]' \
        '--unclassified_estimation[Scale relative abundances to the number of reads mapping to identified clades in order to estimate unclassified taxa]' \
        '--mpa3[Perform the analysis using the MetaPhlAn 3 algorithm]' \
        {--biom,--biom_output_file}'[If requesting biom file output: The name of the output file in biom format]' \
        {--mdelim,--metadata_delimiter_char}'[Delimiter for bug metadata: - defaults to pipe. e.g. the pipe in k__Bacteria|p__Proteobacteria]' \
        '--nproc[The number of CPUs to use for parallelizing the mapping \[default 4\]]' \
        '--subsampling[Specify the number of reads to be considered from the input metagenomes \[default None\]]' \
        '--subsampling_seed[Random seed to use in the selection of the subsampled reads. Choose "random]' \
        '--install[Only checks if the MetaPhlAn DB is installed and installs it if not. All other parameters are ignored.]' \
        '--offline[If used, MetaPhlAn will not check for new database updates.]' \
        '--force_download[Force the re-download of the latest MetaPhlAn database.]' \
        '--read_min_len[Specify the minimum length of the reads to be considered when parsing the input file with '\''read_fastx.py'\'' script, default value is 70]' \
        {-v,--version}'[Prints the current MetaPhlAn version and exit]' \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

_metaphlan "$@"


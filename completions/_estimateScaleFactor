#compdef _estimateScaleFactor estimateScaleFactor

# Auto-generated with h2o


function _estimateScaleFactor {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        {-b,--bamfiles}'[List of indexed BAM files, space delineated (default: None)]':file:_files \
        {--ignoreForNormalization,-ignore}'[A comma-separated list of chromosome names, limited by quotes, containing those chromosomes that should be excluded during normalization computations. For example, --ignoreForNormalization "chrX, chrM" (default: None)]' \
        {--sampleWindowLength,-l}'[Length in bases for a window used to sample the genome and compute the size or scaling factors (default: 1000)]' \
        {--numberOfSamples,-n}'[Number of samplings taken from the genome to compute the scaling factors (default: 100000)]' \
        {--normalizationLength,-nl}'[By default, data is normalized to 1 fragment per 100 bases. The expected value is an integer. For example, if normalizationLength is 1000, then the resulting scaling factor will cause the average coverage of the BAM file to have on average 1 fragment per kilobase (default: 10)]' \
        '--skipZeros[If set, then zero counts that happen for *all* BAM files given are ignored. This will result in a reduced number of read counts than that specified in --numberOfSamples (default: False)]' \
        {--numberOfProcessors,-p}'[Number of processors to use. The default is to use half the maximum number of processors. (default: max/2)]' \
        {--verbose,-v}'[Set to see processing messages. (default: False)]' \
        '--version[show program'\''s version number and exit]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}


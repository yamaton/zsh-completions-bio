#compdef samtools

# Auto-generated with h2o


function _samtools {
    local line state

    function _commands {
        local -a commands
        commands=(
            'dict:create a sequence dictionary file'
            'faidx:index/extract FASTA'
            'fqidx:index/extract FASTQ'
            'index:index alignment'
            'calmd:recalculate MD/NM tags and '\''='\'' bases'
            'fixmate:fix mate information'
            'reheader:replace BAM header'
            'targetcut:cut fosmid regions (for fosmid pool only)'
            'addreplacerg:adds or replaces RG tags'
            'markdup:mark duplicates'
            'ampliconclip:clip oligos from the end of reads'
            'collate:shuffle and group alignments by name'
            'cat:concatenate BAMs'
            'consensus:produce a consensus Pileup/FASTA/FASTQ'
            'merge:merge sorted alignments'
            'mpileup:multi-way pileup'
            'sort:sort alignment file'
            'split:splits a file by read group'
            'quickcheck:quickly check if SAM/BAM/CRAM file appears intact'
            'fastq:converts a BAM to a FASTQ'
            'fasta:converts a BAM to a FASTA'
            'import:Converts FASTA or FASTQ files to SAM/BAM/CRAM'
            'reference:Generates a reference from aligned data'
            'reset:Reverts aligner changes in reads'
            'bedcov:read depth per BED region'
            'coverage:alignment depth and percent coverage'
            'depth:compute the depth'
            'flagstat:simple stats'
            'idxstats:BAM index stats'
            'cram-size:list CRAM Content-ID and Data-Series sizes'
            'phase:phase heterozygotes'
            'stats:generate stats (former bamcheck)'
            'ampliconstats:generate amplicon specific stats'
            'flags:explain BAM flags'
            'head:header viewer'
            'tview:text alignment viewer'
            'view:SAM<->BAM<->CRAM conversion'
            'depad:convert padded BAM to unpadded BAM'
            'samples:list the samples in a set of SAM/BAM/CRAM files'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (dict)
            _samtools_dict
            ;;

        (faidx)
            _samtools_faidx
            ;;

        (fqidx)
            _samtools_fqidx
            ;;

        (index)
            _samtools_index
            ;;

        (calmd)
            _samtools_calmd
            ;;

        (fixmate)
            _samtools_fixmate
            ;;

        (reheader)
            _samtools_reheader
            ;;

        (targetcut)
            _samtools_targetcut
            ;;

        (addreplacerg)
            _samtools_addreplacerg
            ;;

        (markdup)
            _samtools_markdup
            ;;

        (ampliconclip)
            _samtools_ampliconclip
            ;;

        (collate)
            _samtools_collate
            ;;

        (cat)
            _samtools_cat
            ;;

        (consensus)
            _samtools_consensus
            ;;

        (merge)
            _samtools_merge
            ;;

        (mpileup)
            _samtools_mpileup
            ;;

        (sort)
            _samtools_sort
            ;;

        (split)
            _samtools_split
            ;;

        (quickcheck)
            _samtools_quickcheck
            ;;

        (fastq)
            _samtools_fastq
            ;;

        (fasta)
            _samtools_fasta
            ;;

        (import)
            _samtools_import
            ;;

        (reference)
            _samtools_reference
            ;;

        (reset)
            _samtools_reset
            ;;

        (bedcov)
            _samtools_bedcov
            ;;

        (coverage)
            _samtools_coverage
            ;;

        (depth)
            _samtools_depth
            ;;

        (flagstat)
            _samtools_flagstat
            ;;

        (idxstats)
            _samtools_idxstats
            ;;

        (cram-size)
            _samtools_cram-size
            ;;

        (phase)
            _samtools_phase
            ;;

        (stats)
            _samtools_stats
            ;;

        (ampliconstats)
            _samtools_ampliconstats
            ;;

        (flags)
            _samtools_flags
            ;;

        (head)
            _samtools_head
            ;;

        (tview)
            _samtools_tview
            ;;

        (view)
            _samtools_view
            ;;

        (depad)
            _samtools_depad
            ;;

        (samples)
            _samtools_samples
            ;;

        esac
        ;;
     esac

}

function _samtools_dict {
    _arguments \
        {-a,--assembly}'[Specify the assembly for the AS tag.]' \
        {-A,--alias,--alternative-name}'[Add an AN tag with the same value as the SN tag, except that a “chr” prefix is removed if SN has one or added if it does not. For mitochondria (i.e., when SN is “M” or “MT”, with or without a “chr” prefix), also adds the remaining combinations of “chr/M/MT” to the AN tag.]' \
        {-H,--no-header}'[Do not print the @HD header line.]' \
        {-l,--alt}'[Add an AH tag to each sequence listed in the specified bwa(1)-style .alt file. These files use SAM records to represent alternate locus sequences (as named in the QNAME field) and their mappings to the primary assembly.]':file:_files \
        {-o,--output}'[Output to FILE \[stdout\].]':file:_files \
        {-s,--species}'[Specify the species for the SP tag.]' \
        {-u,--uri}'[Specify the URI for the UR tag. Defaults to the absolute path of ref.fasta unless reading from stdin.]' \
        "*: :_files"

}

function _samtools_faidx {
    _arguments \
        {-o,--output}'[Write FASTA to file rather than to stdout.]':file:_files \
        {-n,--length}'[Length for FASTA sequence line wrapping. If zero, this means do not line wrap. Defaults to the line length in the input file.]' \
        {-c,--continue}'[Continue working if a non-existent region is requested.]' \
        {-r,--region-file}'[Read regions from a file. Format is chr:from-to, one per line.]':file:_files \
        {-f,--fastq}'[Read FASTQ files and output extracted sequences in FASTQ format. Same as using samtools fqidx.]' \
        {-i,--reverse-complement}'[Output the sequence as the reverse complement. When this option is used, “/rc” will be appended to the sequence names. To turn this off or change the string appended, use the --mark-strand option.]' \
        '--mark-strand[Append strand indicator to sequence name. TYPE can be one of:]' \
        '--fai-idx[Read/Write to specified index file.]':file:_files \
        '--gzi-idx[Read/Write to specified compressed file index (used with .gz files).]':file:_files \
        {-h,--help}'[Print help message and exit.]' \
        "*: :_files"

}

function _samtools_fqidx {
    _arguments \
        {-o,--output}'[Write FASTQ to file rather than to stdout.]':file:_files \
        {-n,--length}'[Length for FASTQ sequence line wrapping. If zero, this means do not line wrap. Defaults to the line length in the input file.]' \
        {-c,--continue}'[Continue working if a non-existent region is requested.]' \
        {-r,--region-file}'[Read regions from a file. Format is chr:from-to, one per line.]':file:_files \
        {-i,--reverse-complement}'[Output the sequence as the reverse complement. When this option is used, “/rc” will be appended to the sequence names. To turn this off or change the string appended, use the --mark-strand option.]' \
        '--mark-strand[Append strand indicator to sequence name. TYPE can be one of:]' \
        '--fai-idx[Read/Write to specified index file.]':file:_files \
        '--gzi-idx[Read/Write to specified compressed file index (used with .gz files).]':file:_files \
        {-h,--help}'[Print help message and exit.]' \
        "*: :_files"

}

function _samtools_index {
    _arguments \
        '-b[Create a BAI index. This is currently the default when no format options are used.]' \
        '-c[Create a CSI index. By default, the minimum interval size for the index is 2^14, which is the same as the fixed value used by the BAI format.]' \
        '-m[Create a CSI index, with a minimum interval size of 2^INT.]' \
        '-M[Interpret all filename arguments as alignment files to be indexed individually. (Without -M, filename arguments are interpreted solely as per the second synopsis.)]' \
        '-o[Write the output index to FILE. (Currently may only be used when exactly one alignment file is being indexed.)]':file:_files \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_calmd {
    _arguments \
        '-A[When used jointly with -r this option overwrites the original base quality.]' \
        '-e[Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.]' \
        '-u[Output uncompressed BAM]' \
        '-b[Output compressed BAM]' \
        '-C[Coefficient to cap mapping quality of poorly mapped reads. See the mpileup command for details. \[0\]]' \
        '-r[Compute the BQ tag (without -A) or cap base quality by BAQ (with -A).]' \
        '-E[Extended BAQ calculation. This option trades specificity for sensitivity, though the effect is minor.]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_fixmate {
    _arguments \
        '-r[Remove secondary and unmapped reads.]' \
        '-p[Disable FR proper pair check.]' \
        '-c[Add template cigar ct tag.]' \
        '-m[Add ms (mate score) tags. These are used by markdup to select the best reads to keep.]' \
        '-u[Output uncompressed BAM or CRAM.]' \
        '-O[Write the final output as sam, bam, or cram.]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        {-z,--sanitize}'[Perform basic sanitizing of records. FLAGs is a comma-separated list of keywords, defined in the samtools-view(1) man page. By default all FLAGs are enabled. Use -z off to disable this.]' \
        "*: :_files"

}

function _samtools_reheader {
    _arguments \
        {-P,--no-PG}'[Do not add a @PG line to the header of the output file.]' \
        {-i,--in-place}'[Perform the header edit in-place, if possible. This only works on CRAM files and only if there is sufficient room to store the new header. The amount of space available will differ for each CRAM file.]' \
        {-c,--command}'[Allow the header from in.bam to be processed by external CMD and read back the result. When used in this manner, the external header file in.header.sam has to be omitted.]' \
        "*: :_files"

}

function _samtools_targetcut {
    _arguments \
        '-Q[Ignore bases with quality less than minBaseQ.]' \
        '-i[Penalty for in state transition.]' \
        '-0[Emission score 0.]' \
        '-1[Emission score 1.]' \
        '-2[Emission score 2.]' \
        '-f[Reference FASTA file.]' \
        "*: :_files"

}

function _samtools_addreplacerg {
    _arguments \
        '-r[Allows you to specify a read group line to append to the header and applies it to the reads specified by the -m option. If repeated it automatically adds in tabs between invocations.]' \
        '-R[Allows you to specify the read group ID of an existing @RG line and applies it to the reads specified.]' \
        '-m[If you choose orphan_only then existing RG tags are not overwritten, if you choose overwrite_all, existing RG tags are overwritten. The default is overwrite_all.]' \
        '-o[Write the final output to STRING. The default is to write to stdout.]' \
        '-u[Output uncompressed SAM, BAM or CRAM.]' \
        '-w[Overwrite an existing @RG line, if a new one with the same ID value is provided.]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_markdup {
    _arguments \
        '-l[Expected maximum read length of INT bases. \[300\]]' \
        '-r[Remove duplicate reads.]' \
        '-T[Write temporary files to PREFIX.samtools.nnnn.mmmm.tmp]' \
        '-S[Mark supplementary reads of duplicates as duplicates.]' \
        '-s[Print some basic stats. See STATISTICS.]' \
        '-f[Write stats to named file.]':file:_files \
        '--json[Output stats in JSON format.]' \
        '-d[The optical duplicate distance. Suggested settings of 100 for HiSeq style platforms or about 2500 for NovaSeq ones. Default is 0 to not look for optical duplicates. When set, duplicate reads are tagged with dt:Z:SQ for optical duplicates and dt:Z:LB otherwise. Calculation of distance depends on coordinate data embedded in the read names produced by the Illumina sequencing machines. Optical duplicate detection will not work on non standard names without the use of --read-coords.]' \
        '-c[Clear previous duplicate settings and tags.]' \
        '-t[Mark duplicates with the name of the original in a do tag.]' \
        '--duplicate-count[Record the original primary read duplication count(include itself) in a dc tag.]' \
        {-m,--mode}'[Duplicate decision method for paired reads. Values are t or s. Mode t measures positions based on template start/end (default). Mode s measures positions based on sequence start. While the two methods identify mostly the same reads as duplicates, mode s tends to return more results. Unpaired reads are treated identically by both modes.]' \
        '-u[Output uncompressed SAM, BAM or CRAM.]' \
        '--include-fails[Include quality checked failed reads.]' \
        '--no-multi-dup[Stop checking duplicates of duplicates for correctness. While still marking reads as duplicates further checks to make sure all optical duplicates are found are not carried out. Also operates on -t tagging where reads may tagged with a better quality read but not necessarily the best one. Using this option can speed up duplicate marking when there are a great many duplicates for each original read.]' \
        '--read-coords[This takes a POSIX regular expression for at least x and y to be used in optical duplicate marking It can also include another part of the read name to test for equality, eg lane:tile elements. Elements wanted are captured with parentheses. Examples below.]' \
        '--coords-order[The order of the elements captured in the regular expression. Default is txy where t is a part of the read name selected for string comparison and x/y the coordinates used for optical duplicate detection. Valid orders are: txy, tyx, xyt, yxt, xty, ytx, xy and yx.]' \
        '--barcode-tag[Duplicates must now also match the barcode tag.]' \
        '--barcode-name[Use the UMI/barcode embedded in the read name (eigth colon delimited part).]' \
        '--barcode-rgx[Regex for barcode in the readname (alternative to --barcode-name).]' \
        '--use-read-groups[The @RG tags must now also match to be a duplicate.]' \
        '--no-PG[Do not add a PG line to the output file.]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        '--coords-order[To match only the coordinates of x:y:randomstuff use:]' \
        '--coords-order[To use a barcode from the read name matching the Illumina example of NDX550136:7:H2MTNBDXX:1:13302:3141:10799:AAGGATG+TCGGAGA use:]' \
        "*: :_files"

}

function _samtools_ampliconclip {
    _arguments \
        '-b[BED file of regions (e.g. amplicon primers) to be removed.]':file:_files \
        '-o[Output file name (defaults to stdout).]':file:_files \
        '-f[File to write stats to (defaults to stderr).]':file:_files \
        '-u[Output uncompressed SAM, BAM or CRAM.]' \
        '--soft-clip[Soft clip reads (default).]' \
        '--hard-clip[Hard clip reads.]' \
        '--both-ends[Clip at both the 5'\'' and the 3'\'' ends where regions match.]' \
        '--strand[Use strand entry from the BED file to clip on the matching forward or reverse alignment.]' \
        '--clipped[Only output clipped reads. Filter all others.]' \
        '--fail[Mark unclipped reads as QC fail.]' \
        '--filter-len[Filter out reads of INT size or shorter. In this case soft clips are not counted toward read length. An INT of 0 will filter out reads with no matching bases.]' \
        '--fail-len[As --filter-len but mark as QC fail rather then filter out.]' \
        '--no-excluded[Filter out any reads that are marked as QCFAIL or are unmapped. This works on the state of the reads before clipping takes place.]' \
        '--rejects-file[Write any filtered reads out to a file.]':file:_files \
        '--original[Add an OA tag with the original data for clipped files.]' \
        '--keep-tag[In clipped reads, keep the possibly invalid NM and MD tags. By default these tags are deleted.]' \
        '--tolerance[The amount of latitude given in matching regions to alignments. Default 5 bases.]' \
        '--no-PG[Do not at a PG line to the header.]' \
        "*: :_files"

}

function _samtools_collate {
    _arguments \
        '-O[Output to stdout. This option cannot be used with -o.]' \
        '-o[Write output to FILE. This option cannot be used with -O. If unspecified and -O is not set, the temporary file <prefix> is used, appended by the the appropriate file-format suffix.]':file:_files \
        '-T[Use PREFIX for temporary files. This is the same as specifying PREFIX as the last argument on the command line. This option is included for consistency with samtools sort.]' \
        '-u[Write uncompressed BAM output]' \
        '-l[Compression level. \[1\]]' \
        '-n[Number of temporary files to use. \[64\]]' \
        '-f[Fast mode (primary alignments only).]' \
        '-r[Number of reads to store in memory (for use with -f). \[10000\]]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_cat {
    _arguments \
        '-b[Read the list of input BAM or CRAM files from FOFN. These are concatenated prior to any files specified on the command line. Multiple -b FOFN options may be specified to concatenate multiple lists of BAM/CRAM files.]' \
        '-h[Uses the SAM header from FILE. By default the header is taken from the first file to be concatenated.]':file:_files \
        '-o[Write the concatenated output to FILE. By default this is sent to stdout.]':file:_files \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_consensus {
    _arguments \
        {-r,--region}'[Limit the query to region REG. This requires an index.]' \
        {-f,--format}'[Produce format FMT, with "fastq", "fasta" and "pileup" as permitted options.]' \
        {-l,--line-len}'[Sets the maximum line length of line-wrapped fasta and fastq formats to N.]' \
        {-o,--output}'[Output consensus to FILE instead of stdout.]':file:_files \
        {-m,--mode}'[Select the consensus algorithm. Valid modes are "simple" frequency counting and the "bayesian" (Gap5) methods, with Bayesian being the default. (Note case does not matter, so "Bayesian" is accepted too.) There are a variety of bayesian methods. Straight "bayesian" is the best set suitable for the other parameters selected. The choice of internal parameters may change depending on the "--P-indel" score. This method distinguishes between substitution and indel error rates. The old Samtools consensus in version 1.16 did not distinguish types of errors, but for compatibility the "bayesian_116" mode may be selected to replicate this.]' \
        '-a[Outputs all bases, from start to end of reference, even when the aligned data does not extend to the ends. This is most useful for construction of a full length reference sequence.]' \
        {--rf,--incl-flags}'[Only include reads with at least one FLAG bit set. Defaults to zero, which filters no reads.]' \
        {--ff,--excl-flags}'[Exclude reads with any FLAG bit set. Defaults to "UNMAP,SECONDARY,QCFAIL,DUP".]' \
        '--min-MQ[Filters out reads with a mapping quality below INT. This defaults to zero.]' \
        '--min-BQ[Filters out bases with a base quality below INT. This defaults to zero.]' \
        '--show-del[Whether to show deletions as "*" (no) or to omit from the output (yes). Defaults to no.]' \
        '--show-ins[Whether to show insertions in the consensus. Defaults to yes.]' \
        '--mark-ins[Insertions, when shown, are normally recorded in the consensus with plain 7-bit ASCII (ACGT, or acgt if heterozygous). However this makes it impossible to identify the mapping between consensus coordinates and the original reference coordinates. If fasta output is selected then the option adds an underscore before every inserted base, plus a corresponding character in the quality for fastq format. When used in conjunction with -a --show-del yes, this permits an easy derivation of the consensus to reference coordinate mapping.]' \
        {-A,--ambig}'[Enables IUPAC ambiguity codes in the consensus output. Without this the output will be limited to A, C, G, T, N and *.]' \
        {-q,--use-qual}'[For the simple consensus algorithm, this enables use of base quality values. Instead of summing 1 per base called, it sums the base quality instead. These sums are also used in the --call-fract and --het-fract parameters too. Quality values are always used for the "Gap5" consensus method and this option has no affect. Note currently quality values only affect SNPs and not inserted sequences, which still get scores with a fixed +1 per base type occurrence.]' \
        {-d,--min-depth}'[The minimum depth required to make a call. Defaults to 1. Failing this depth check will produce consensus "N", or absent if it is an insertion. Note this check is performed after filtering by flags and mapping/base quality.]' \
        {-H,--het-fract}'[For consensus columns containing multiple base types, if the second most frequent type is at least H fraction of the most common type then a heterozygous base type will be reported in the consensus. Otherwise the most common base is used, provided it meets the --call-fract parameter (otherwise "N"). The fractions computed may be modified by the use of quality values if the -q option is enabled. Note although IUPAC has ambiguity codes for A,C,G,T vs any other A,C,G,T it does not have codes for A,C,G,T vs gap (such as in a heterozygous deletion). Given the lack of any official code, we use lower-case letter to symbolise a half-present base type.]' \
        {-c,--call-fract}'[Only used for the simple consensus algorithm. Require at least C fraction of bases agreeing with the most likely consensus call to emit that base type. This defaults to 0.75. Failing this check will output "N".]' \
        '-5[Enable Bayesian consensus algorithm.]' \
        {-C,--cutoff}'[Only used for the Gap5 consensus mode, which produces a Phred style score for the final consensus quality. If this is below C then the consensus is called as "N".]' \
        {--use-MQ,--no-use-MQ}'[Enable or disable the use of mapping qualities. Defaults to on.]' \
        {--adj-MQ,--no-adj-MQ}'[If mapping qualities are used, this controls whether they are scaled by the local number of mismatches to the reference. The reference is unknown by this tool, so this data is obtained from the MD:Z auxiliary tag (or ignored if not present). Defaults to on.]' \
        '--NM-halo[Specifies the distance either side of the base call being considered for computing the number of local mismatches.]' \
        {--low-MQ,--high-MQ}'[Specifies a minimum and maximum value of the mapping quality. These are not filters and instead simply put upper and lower caps on the values. The defaults are 0 and 60.]' \
        '--scale-MQ[This is a general multiplicative mapping quality scaling factor. The effect is to globally raise or lower the quality values used in the consensus algorithm. Defaults to 1.0, which leaves the values unchanged.]' \
        '--P-het[Controls the likelihood of any position being a heterozygous site. This is used in the priors for the Bayesian calculations, and has little difference on deep data. Defaults to 1e-3. Smaller numbers makes the algorithm more likely to call a pure base type. Note the algorithm will always compute the probability of the base being homozygous vs heterozygous, irrespective of whether the output is reported as ambiguous (it will be "N" if deemed to be heterozygous without --ambig mode enabled).]' \
        '--P-indel[Controls the likelihood of small indels. This is used in the priors for the Bayesian calculations, and has little difference on deep data. Defaults to 2e-4.]' \
        '--het-scale[This is a multiplicative correction applied per base quality before adding to the heterozygous hypotheses. Reducing it means fewer heterozygous calls are made. This oftens leads a significant reduction in false positive het calls, for some increase in false negatives (mislabelling real heterozygous sites as homozygous). It is usually beneficial to reduce this on instruments where a significant proportion of bases may be aligned in the wrong column due to insertions and deletions leading to alignment errors and reference bias. It can be considered as a het sensitivity tuning parameter. Defaults to 1.0 (nop).]' \
        {-p,--homopoly-fix}'[Some technologies that call runs of the same base type together always put the lowest quality calls at one end. This can cause problems when reverse complementing and comparing alignments with indels. This option averages the qualities at both ends to avoid orientation biases. Recommended for old 454 or PacBio HiFi data sets.]' \
        '--homopoly-score[The -p option also reduces confidence values within homopolymers due to an additional likelihood of sequence specific errors. The quality values are multiplied by FLOAT. This defaults to 0.5, but is not used if -p was not specified. Adjusting this score also automatically enables -p.]' \
        {-X,--config}'[Specifies predefined sets of configuration parameters. Acceptable values for STR are defined below, along with the list of parameters they are equivalent to.]' \
        '-[Create a FASTQ file for the contigs with aligned data, including insertions.]' \
        "*: :_files"

}

function _samtools_merge {
    _arguments \
        '-1[Use Deflate compression level 1 to compress the output.]' \
        '-b[List of input BAM files, one file per line.]':file:_files \
        '-f[Force to overwrite the output file if present.]' \
        '-h[Use the lines of FILE as `@'\'' headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)]':file:_files \
        '-n[The input alignments are sorted by read names rather than by chromosomal coordinates]' \
        '-o[Write merged output to FILE, specifying the filename via an option rather than as the first filename argument. When -o is used, all non-option filename arguments specify input files to be merged.]':file:_files \
        '-t[The input alignments have been sorted by the value of TAG, then by either position or name (if -n is given).]' \
        '-R[Merge files in the specified region indicated by STR \[null\]]' \
        '-r[Attach an RG tag to each alignment. The tag value is inferred from file names.]' \
        '-u[Uncompressed BAM output]' \
        '-c[When several input files contain @RG headers with the same ID, emit only one of them (namely, the header line from the first file we find that ID in) to the merged output file. Combining these similar headers is usually the right thing to do when the files being merged originated from the same file.]' \
        '-p[Similarly, for each @PG ID in the set of files to merge, use the @PG line of the first file we find that ID in rather than adding a suffix to differentiate similar IDs.]' \
        '-X[If this option is set, it will allows user to specify customized index file location(s) if the data folder does not contain any index file. See EXAMPLES section for sample of usage.]' \
        '-L[BED file for specifying multiple regions on which the merge will be performed. This option extends the usage of -R option and cannot be used concurrently with it.]':file:_files \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_mpileup {
    _arguments \
        {-6,--illumina1.3+}'[Assume the quality is in the Illumina 1.3+ encoding.]' \
        {-A,--count-orphans}'[Do not skip anomalous read pairs in variant calling. Anomalous read pairs are those marked in the FLAG field as paired in sequencing but without the properly-paired flag set.]' \
        {-b,--bam-list}'[List of input BAM files, one file per line \[null\]]':file:_files \
        {-B,--no-BAQ}'[Disable base alignment quality (BAQ) computation. See BAQ below.]' \
        {-C,--adjust-MQ}'[Coefficient for downgrading mapping quality for reads containing excessive mismatches. Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. \[0\]]' \
        {-d,--max-depth}'[At a position, read maximally INT reads per input file. Setting this limit reduces the amount of memory and time needed to process regions with very high coverage. Passing zero for this option sets it to the highest possible value, effectively removing the depth limit. \[8000\]]' \
        {-E,--redo-BAQ}'[Recalculate BAQ on the fly, ignore existing BQ tags. See BAQ below.]' \
        {-f,--fasta-ref}'[The faidx-indexed reference file in the FASTA format. The file can be optionally compressed by bgzip. \[null\]]':file:_files \
        {-G,--exclude-RG}'[Exclude reads from read groups listed in FILE (one @RG-ID per line)]':file:_files \
        {-l,--positions}'[BED or position list file containing a list of regions or sites where pileup or BCF should be generated. Position list files contain two columns (chromosome and position) and start counting from 1. BED files contain at least 3 columns (chromosome, start and end position) and are 0-based half-open. While it is possible to mix both position-list and BED coordinates in the same file, this is strongly ill advised due to the differing coordinate systems. \[null\]]':file:_files \
        {-q,--min-MQ}'[Minimum mapping quality for an alignment to be used \[0\]]' \
        {-Q,--min-BQ}'[Minimum base quality for a base to be considered. \[13\]]' \
        {-r,--region}'[Only generate pileup in region. Requires the BAM files to be indexed. If used in conjunction with -l then considers the intersection of the two requests. STR \[all sites\]]' \
        {-R,--ignore-RG}'[Ignore RG tags. Treat all reads in one BAM as one sample.]' \
        {--rf,--incl-flags}'[Required flags: only include reads with any of the mask bits set \[null\]. Note this is implemented as a filter-out rule, rejecting reads that have none of the mask bits set. Hence this does not override the --excl-flags option.]' \
        {--ff,--excl-flags}'[Filter flags: skip reads with any of the mask bits set. This defaults to UNMAP,SECONDARY,QCFAIL,DUP. The option is not accumulative, so specifying e.g. --ff UNMAP,QCFAIL will reenable output of secondary and duplicate alignments. Note this does not override the --incl-flags option.]' \
        {-x,--ignore-overlaps-removal,--disable-overlap-removal}'[Overlap detection and removal is enabled by default. This option turns it off.]' \
        '-X[Include customized index file as a part of arguments. See EXAMPLES section for sample of usage.]' \
        {-o,--output}'[Write pileup output to FILE, rather than the default of standard output.]':file:_files \
        {-O,--output-BP}'[Output base positions on reads in orientation listed in the SAM file (left to right).]' \
        '--output-BP-5[Output base positions on reads in their original 5'\'' to 3'\'' orientation.]' \
        {-s,--output-MQ}'[Output mapping qualities encoded as ASCII characters.]' \
        '--output-QNAME[Output an extra column containing comma-separated read names. Equivalent to --output-extra QNAME.]' \
        '--output-extra[Output extra columns containing comma-separated values of read fields or read tags. The names of the selected fields have to be provided as they are described in the SAM Specification (pag. 6) and will be output by the mpileup command in the same order as in the document (i.e. QNAME, FLAG, RNAME,...) The names are case sensitive. Currently, only the following fields are supported:]' \
        '--output-sep[Specify a different separator character for tag value lists, when those values might contain one or more commas (,), which is the default list separator. This option only affects columns for two-letter tags like NM; standard fields like FLAG or QNAME will always be separated by commas.]' \
        '--output-empty[Specify a different '\''no value'\'' character for tag list entries corresponding to reads that don'\''t have a tag requested with the --output-extra option. The default is *.]' \
        {-M,--output-mods}'[Adds base modification markup into the sequence column. This uses the Mm and Ml auxiliary tags (or their uppercase equivalents). Any base in the sequence output may be followed by a series of strand code quality strings enclosed within square brackets where strand is "+" or "-", code is a single character (such as "m" or "h") or a ChEBI numeric in parentheses, and quality is an optional numeric quality value. For example a "C" base with possible 5mC and 5hmC base modification may be reported as "C\[+m179+h40\]".]' \
        '--no-output-ins[Do not output the inserted bases in the sequence column. Usually this is reported as "+length sequence", but with this option it becomes simply "+length". For example an insertion of AGT in a pileup column changes from "CCC+3AGTGCC" to "CCC+3GCC".]' \
        '--no-output-ins-mods[Outputs the inserted bases in the sequence, but excluding any base modifications. This only affects output when --output-mods is also used.]' \
        '--no-output-del[Do not output deleted reference bases in the sequence column. Normally this is reported as "+length sequence", but with this option it becomes simply "+length". For example an deletion of 3 unknown bases (due to no reference being specified) would normally be seen in a column as e.g. "CCC-3NNNGCC", but will be reported as "CCC-3GCC" with this option.]' \
        '--no-output-ends[Removes the “^” (with mapping quality) and “$” markup from the sequence column.]' \
        '--reverse-del[Mark the deletions on the reverse strand with the character #, instead of the usual *.]' \
        '-a[Output all positions, including those with zero depth.]' \
        {-a,-aa}'[Output absolutely all positions, including unused reference sequences. Note that when used in conjunction with a BED file the -a option may sometimes operate as if -aa was specified if the reference sequence has coverage outside of the region specified in the BED file.]' \
        "*: :_files"

}

function _samtools_sort {
    _arguments \
        '-l[Set the desired compression level for the final output file, ranging from 0 (uncompressed) or 1 (fastest but minimal compression) to 9 (best compression but slowest to write), similarly to gzip(1)'\''s compression level setting.]' \
        '-u[Set the compression level to 0, for uncompressed output. This is a synonym for -l 0.]' \
        '-m[Approximately the maximum required memory per thread, specified either in bytes or with a K, M, or G suffix. \[768 MiB\]]' \
        '-n[Sort by read names (i.e., the QNAME field) rather than by chromosomal coordinates.]' \
        '-t[Sort first by the value in the alignment tag TAG, then by position or name (if also using -n).]' \
        '-M[Sort unmapped reads (those in chromosome "*") by their sequence minimiser (Schleimer et al., 2003; Roberts et al., 2004), also reverse complementing as appropriate. This has the effect of collating some similar data together, improving the compressibility of the unmapped sequence. The minimiser kmer size is adjusted using the -K option. Note data compressed in this manner may need to be name collated prior to conversion back to fastq.]' \
        '-R[Do not use reverse strand with minimiser sort (only compatible with -M).]' \
        '-K[Sets the kmer size to be used in the -M option. \[20\]]' \
        '-I[Build a minimiser index over FILE. The per-read minimisers produced by -M are no longer sorted by their numeric value, but by the reference coordinate this minimiser was found to come from (if found in the index). This further improves compression due to improved sequence similarity between sequences, albeit with a small CPU cost of building and querying the index. Specifying -I automatically implies -M.]':file:_files \
        '-w[Specifies the window size for building the minimiser index on the file specified in -I. This defaults to 100. It may be better to set this closer to 50 for short-read data sets (at a higher CPU and memory cost), or for more speed up to 1000 for long-read data sets.]' \
        '-H[Squashes base homopolymers down to a single base pair before constructing the minimiser. This is useful for instruments where the primary source of error is in the length of homopolymer.]' \
        '-o[Write the final sorted output to FILE, rather than to standard output.]':file:_files \
        '-O[Write the final output as sam, bam, or cram.]' \
        '-T[Write temporary files to PREFIX.nnnn.bam, or if the specified PREFIX is an existing directory, to PREFIX/samtools.mmm.mmm.tmp.nnnn.bam, where mmm is unique to this invocation of the sort command.]' \
        '-@[Set number of sorting and compression threads. By default, operation is single-threaded.]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        '--template-coordinate[Sorts by template-coordinate, whereby the sort order (@HD SO) is unsorted, the group order (GO) is query, and the sub-sort (SS) is template-coordinate.]' \
        "*: :_files"

}

function _samtools_split {
    _arguments \
        '-u[Put reads with no RG tag or an unrecognised RG tag into FILE1]':file:_files \
        '-h[Use the header from FILE2 when writing the file given in the -u option. This header completely replaces the one from the input file. It must be compatible with the input file header, which means it must have the same number of references listed in the @SQ lines and the references must be in the same order and have the same lengths.]':file:_files \
        '-f[Output filename format string (see below) \["%*_%#.%."\]]' \
        '-v[Verbose output]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        {-@,--threads}'[INT]' \
        "*: :_files"

}

function _samtools_quickcheck {
    _arguments \
        '-v[Verbose output: will additionally print the names of all input files that don'\''t pass the check to stdout. Multiple -v options will cause additional messages regarding check results to be printed to stderr.]' \
        '-q[Quiet mode: disables warning messages on stderr about files that fail. If both -q and -v options are used then the appropriate level of -v takes precedence.]' \
        '-u[Expect unmapped input data, so do not require targets in the header.]' \
        "*: :_files"

}

function _samtools_fastq {
    _arguments \
        '-n[By default, either '\''/1'\'' or '\''/2'\'' is added to the end of read names where the corresponding READ1 or READ2 FLAG bit is set. Using -n causes read names to be left as they are.]' \
        '-N[Always add either '\''/1'\'' or '\''/2'\'' to the end of read names even when put into different files.]' \
        '-O[Use quality values from OQ tags in preference to standard quality string if available.]' \
        '-s[Write singleton reads to FILE.]':file:_files \
        '-t[Copy RG, BC and QT tags to the FASTQ header line, if they exist.]' \
        '-T[Specify a comma-separated list of tags to copy to the FASTQ header line, if they exist. TAGLIST can be blank or * to indicate all tags should be copied to the output. If using *, be careful to quote it to avoid unwanted shell expansion.]' \
        '-1[Write reads with the READ1 FLAG set (and READ2 not set) to FILE instead of outputting them. If the -s option is used, only paired reads will be written to this file.]':file:_files \
        '-2[Write reads with the READ2 FLAG set (and READ1 not set) to FILE instead of outputting them. If the -s option is used, only paired reads will be written to this file.]':file:_files \
        '-o[Write reads with either READ1 FLAG or READ2 flag set to FILE instead of outputting them to stdout. This is equivalent to -1 FILE -2 FILE.]':file:_files \
        '-0[Write reads where the READ1 and READ2 FLAG bits set are either both set or both unset to FILE instead of outputting them.]':file:_files \
        '-f[Only output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/) or in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/) \[0\].]' \
        {--rf,--incl-flags,--include-flags}'[Only output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names \[0\].]' \
        '-G[Only EXCLUDE reads with all of the bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/) or in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/) \[0\].]' \
        '-i[add Illumina Casava 1.8 format entry to header (eg 1:N:0:ATCACG)]' \
        '-c[set compression level when writing gz or bgzf fastq files.]' \
        '--i1[write first index reads to FILE]':file:_files \
        '--i2[write second index reads to FILE]':file:_files \
        '--barcode-tag[aux tag to find index reads in \[default: BC\]]' \
        '--quality-tag[aux tag to find index quality in \[default: QT\]]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        '--index-format[string to describe how to parse the barcode and quality tags. For example:]' \
        "*: :_files"

}

function _samtools_fasta {
    _arguments \
        '-n[By default, either '\''/1'\'' or '\''/2'\'' is added to the end of read names where the corresponding READ1 or READ2 FLAG bit is set. Using -n causes read names to be left as they are.]' \
        '-N[Always add either '\''/1'\'' or '\''/2'\'' to the end of read names even when put into different files.]' \
        '-O[Use quality values from OQ tags in preference to standard quality string if available.]' \
        '-s[Write singleton reads to FILE.]':file:_files \
        '-t[Copy RG, BC and QT tags to the FASTQ header line, if they exist.]' \
        '-T[Specify a comma-separated list of tags to copy to the FASTQ header line, if they exist. TAGLIST can be blank or * to indicate all tags should be copied to the output. If using *, be careful to quote it to avoid unwanted shell expansion.]' \
        '-1[Write reads with the READ1 FLAG set (and READ2 not set) to FILE instead of outputting them. If the -s option is used, only paired reads will be written to this file.]':file:_files \
        '-2[Write reads with the READ2 FLAG set (and READ1 not set) to FILE instead of outputting them. If the -s option is used, only paired reads will be written to this file.]':file:_files \
        '-o[Write reads with either READ1 FLAG or READ2 flag set to FILE instead of outputting them to stdout. This is equivalent to -1 FILE -2 FILE.]':file:_files \
        '-0[Write reads where the READ1 and READ2 FLAG bits set are either both set or both unset to FILE instead of outputting them.]':file:_files \
        '-f[Only output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/) or in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/) \[0\].]' \
        {--rf,--incl-flags,--include-flags}'[Only output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names \[0\].]' \
        '-G[Only EXCLUDE reads with all of the bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/) or in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/) \[0\].]' \
        '-i[add Illumina Casava 1.8 format entry to header (eg 1:N:0:ATCACG)]' \
        '-c[set compression level when writing gz or bgzf fastq files.]' \
        '--i1[write first index reads to FILE]':file:_files \
        '--i2[write second index reads to FILE]':file:_files \
        '--barcode-tag[aux tag to find index reads in \[default: BC\]]' \
        '--quality-tag[aux tag to find index quality in \[default: QT\]]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        '--index-format[string to describe how to parse the barcode and quality tags. For example:]' \
        "*: :_files"

}

function _samtools_import {
    _arguments \
        '-s[Import paired interleaved data from FILE.]':file:_files \
        '-0[Import single-ended (unpaired) data from FILE.]':file:_files \
        {-1,-2}'[Import paired data from a pair of FILEs. The BAM flag PAIRED will be set, but not PROPER_PAIR as it has not been aligned. READ1 and READ2 will be stored in their original, unmapped, orientation.]':file:_files \
        {--i1,--i2}'[Specifies index barcodes associated with the -1 and -2 files. These will be appended to READ1 and READ2 records in the barcode (BC) and quality (QT) tags.]':file:_files \
        '-i[Specifies that the Illumina CASAVA identifiers should be processed. This may set the READ1, READ2 and QCFAIL flags and add a barcode tag.]' \
        {-N,--name2}'[Assume the read names are encoded in the SRA and ENA formats where the first word is an automatically generated name with the second field being the original name. This option extracts that second field instead.]' \
        '--barcode-tag[Changes the auxiliary tag used for barcode sequence. Defaults to BC.]' \
        '--quality-tag[Changes the auxiliary tag used for barcode quality. Defaults to QT.]' \
        '-oFILE[Output to FILE. By default output will be written to stdout.]' \
        '--order[When outputting a SAM record, also output an integer tag containing the Nth record number. This may be useful if the data is to be sorted or collated in some manner and we wish this to be reversible. In this case the tag may be used with samtools sort -t TAG to regenerate the original input order.]' \
        {-r,--rg-line}'[A complete @RG header line may be specified, with or without the initial "@RG" component. If specified this will also use the ID field from RG_line in each SAM records RG auxiliary tag.]' \
        {-R,--rg}'[This is a shorter form of the option above, equivalent to --rg-line ID:RG_ID. If both are specified then this option is ignored.]' \
        '-u[Output BAM or CRAM as uncompressed data.]' \
        '-T[This looks for any SAM-format auxiliary tags in the comment field of a fastq read name. These must match the <alpha-num><alpha-num>:<type>:<data> pattern as specified in the SAM specification. TAGLIST can be blank or * to indicate all tags should be copied to the output, otherwise it is a comma-separated list of tag types to include with all others being discarded.]' \
        "*: :_files"

}

function _samtools_reference {
    _arguments \
        '-e[Enable CRAM embedded reference mode.]' \
        '-q[Enables quiet mode and will produce no output. By default a line per reference is reporting describing the percentage with non-N bases.]' \
        '-r[Specifies a single region to produce the reference from. If specified, an index file must be present.]' \
        '-o[Write the FASTA records to FILE. By default this is sent to stdout.]':file:_files \
        '-@[The number of BAM/CRAM decompression threads to use in addition to the main thread \[0\].]' \
        "*: :_files"

}

function _samtools_reset {
    _arguments \
        '-o[Output file to which reset data is to be written. If not given, standard output will be used.]':file:_files \
        {-x,--remove-tag}'[Read tag(s) to exclude from output (repeatable) \[null\]. This can be a single tag or a comma separated list. Alternatively the option itself can be repeated multiple times.]' \
        '--keep-tag[This keeps only tags listed in STR and is directly equivalent to --remove-tag ^STR. Specifying an empty list will remove all tags. If both --keep-tag and --remove-tag are specified then --keep-tag has precedence.]' \
        '--reject-PG[The PG line which has the ID matching pgid and all subsequent PG lines will be removed. If the option itself is absent, the default, all PG entries will be in output.]' \
        '--no-RG[RG lines in input will be discarded with this option. By default, RG lines will be present in ouput.]' \
        '--no-PG[Do not add a @PG line to the header of the output file listing the reset command. By default the PG entry for reset will be present in the output.]' \
        {-@,--thread}'[This gives the number of worker threads to be used.]' \
        {-O,--output-fmt}'[Sets the format of the output file and any associated format-specific options. If this option is not present, the format is identified from the output file name extension.]' \
        "*: :_files"

}

function _samtools_bedcov {
    _arguments \
        {-Q,--min-MQ}'[Only count reads with mapping quality greater than or equal to INT]' \
        '-g[By default, reads that have any of the flags UNMAP, SECONDARY, QCFAIL, or DUP set are skipped. To include these reads back in the analysis, use this option together with the desired flag or flag combination. FLAGS can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names. \[0\]]' \
        '-G[Discard any read that has any of the flags specified by FLAGS set. FLAGS are specified as for the -g option. \[UNMAP,SECONDARY,QCFAIL,DUP\]]' \
        '-j[Do not include deletions (D) and ref skips (N) in bedcov computation.]' \
        '-d[Print an additional column, for each file, containing the number of bases having a depth above and including the given threshold. If the option is not used, the extra column is not displayed. The option value must be an integer >= 0.]' \
        '-c[Print an additional column with the read count for this region. This will be +1 for every read covering the region, not just starting within in. The whole read filtering options -Q, -g and -G options will also have an affect on this count, but -d will not.]' \
        '-X[If this option is set, it will allows user to specify customized index file location(s) if the data folder does not contain any index file. Example usage: samtools bedcov \[options\] -X <in.bed> </data_folder/in1.bam> \[...\] </index_folder/index1.bai> \[...\]]' \
        "*: :_files"

}

function _samtools_coverage {
    _arguments \
        {-b,--bam-list}'[List of input BAM files, one file per line \[null\]]':file:_files \
        {-l,--min-read-len}'[Ignore reads shorter than INT base pairs \[0\]]' \
        {-q,--min-MQ}'[Minimum mapping quality for an alignment to be used \[0\]]' \
        {-Q,--min-BQ}'[Minimum base quality for a base to be considered \[0\]]' \
        {--rf,--incl-flags}'[Required flags: skip reads with mask bits unset \[null\]]' \
        {--ff,--excl-flags}'[Filter flags: skip reads with mask bits set \[UNMAP,SECONDARY,QCFAIL,DUP\]]' \
        {-d,--depth}'[Maximum allowed coverage depth \[1000000\]. If 0, depth is set to the maximum integer value effectively removing any depth limit.]' \
        {-m,--histogram}'[Show histogram instead of tabular output.]' \
        {-A,--ascii}'[Show only ASCII characters in histogram using colon and fullstop for full and half height characters.]' \
        {-o,--output}'[Write output to FILE \[stdout\].]':file:_files \
        {-H,--no-header}'[Don'\''t print a header in tabular mode.]' \
        {-w,--n-bins}'[Number of bins in histogram. \[terminal width - 40\]]' \
        {-r,--region}'[Show specified region. Format: chr:start-end.]' \
        {-h,--help}'[Shows command help.]' \
        "*: :_files"

}

function _samtools_depth {
    _arguments \
        '-a[Output all positions (including those with zero depth)]' \
        {-a,-aa}'[Output absolutely all positions, including unused reference sequences. Note that when used in conjunction with a BED file the -a option may sometimes operate as if -aa was specified if the reference sequence has coverage outside of the region specified in the BED file.]' \
        '-b[Compute depth at list of positions or regions in specified BED FILE. \[\]]':file:_files \
        '-f[Use the BAM files specified in the FILE (a file of filenames, one file per line) \[\]]':file:_files \
        '-H[Write a comment line showing column names at the beginning of the output. The names are CHROM, POS, and then the input file name for each depth column. If one of the inputs came from stdin, the name “-” will be used for the corresponding column.]' \
        '-l[Ignore reads shorter than INT. This is the number of bases in the sequence, minus any soft clips.]' \
        {-m,-d}'[(Deprecated since 1.13) This option previously limited the depth to a maximum value. It is still accepted as an option, but ignored.]' \
        '-o[Write output to FILE. Using “-” for FILE will send the output to stdout (also the default if this option is not used).]':file:_files \
        {-q,--min-BQ}'[Only count reads with base quality greater than or equal to INT]' \
        {-Q,--min-MQ}'[Only count reads with mapping quality greater than or equal to INT]' \
        '-r[Only report depth in specified region.]' \
        '-X[If this option is set, it will allow the user to specify customized index file location(s) if the data folder does not contain any index file. Example usage: samtools depth \[options\] -X /data_folder/in1.bam \[/data_folder/in2.bam \[...\]\] /index_folder/index1.bai \[/index_folder/index2.bai \[...\]\]]' \
        '-g[By default, reads that have any of the flags UNMAP, SECONDARY, QCFAIL, or DUP set are skipped. To include these reads back in the analysis, use this option together with the desired flag or flag combination. FLAGS can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names. \[0\]]' \
        {-G,--excl-flags}'[Discard reads that have any of the flags specified by FLAGS set. FLAGS are specified as for the -g option. \[UNMAP,SECONDARY,QCFAIL,DUP\]]' \
        '--incl-flags[Only include reads with at least one bit set in FLAGS present in the FLAG field. FLAGS are specified as for the -g option. \[0\]]' \
        '--require-flags[Only include reads with all bits set in FLAGS present in the FLAG field. FLAGS are specified as for the -g option. \[0\]]' \
        '-J[Include reads with deletions in depth computation.]' \
        '-s[For the overlapping section of a read pair, count only the bases of the first read. Note this algorithm changed in 1.13 so the results may differ slightly to older releases.]' \
        "*: :_files"

}

function _samtools_flagstat {
    _arguments \
        '-@[Set number of additional threads to use when reading the file.]' \
        "*: :_files"

}

function _samtools_idxstats {
    _arguments \
        "*: :_files"

}

function _samtools_cram-size {
    _arguments \
        '-o[Output size information to FILE.]':file:_files \
        '-v[Verbose mode. This shows one line per combination of Content ID and compression method.]' \
        {-e,--encodings}'[CRAM uses an Encoding, which describes how the data is serialised into a data block. This is distinct from the CRAM compression method, which is then applied to the block post-encoding. The encoding methods are stored per CRAM Container.]' \
        '-[List encoding methods per CRAM Data Series. The two letter series are the standard CRAM Data Series and the three letter ones are the optional auxiliary tags with the tag name and type combined.]' \
        "*: :_files"

}

function _samtools_phase {
    _arguments \
        '-A[Drop reads with ambiguous phase.]' \
        '-b[Prefix of BAM output. When this option is in use, phase-0 reads will be saved in file STR.0.bam and phase-1 reads in STR.1.bam. Phase unknown reads will be randomly allocated to one of the two files. Chimeric reads with switch errors will be saved in STR.chimeric.bam. \[null\]]' \
        '-F[Do not attempt to fix chimeric reads.]' \
        '-k[Maximum length for local phasing. \[13\]]' \
        '-q[Minimum Phred-scaled LOD to call a heterozygote. \[40\]]' \
        {-Q,--min-BQ}'[Minimum base quality to be used in het calling. \[13\]]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        "*: :_files"

}

function _samtools_stats {
    _arguments \
        {-c,--coverage}'[Set coverage distribution to the specified range (MIN, MAX, STEP all given as integers) \[1,1000,1\]]' \
        {-d,--remove-dups}'[Exclude from statistics reads marked as duplicates]' \
        {-f,--required-flag}'[Required flag, 0 for unset. See also `samtools flags` \[0\]]' \
        {-F,--filtering-flag}'[Filtering flag, 0 for unset. See also `samtools flags` \[0\]]' \
        '--GC-depth[the size of GC-depth bins (decreasing bin size increases memory requirement) \[2e4\]]' \
        {-h,--help}'[This help message]' \
        {-i,--insert-size}'[Maximum insert size \[8000\]]' \
        {-I,--id}'[Include only listed read group or sample name \[\]]' \
        {-l,--read-length}'[Include in the statistics only reads with the given read length \[-1\]]' \
        {-m,--most-inserts}'[Report only the main part of inserts \[0.99\]]' \
        {-P,--split-prefix}'[A path or string prefix to prepend to filenames output when creating categorised statistics files with -S/--split. \[input filename\]]' \
        {-q,--trim-quality}'[The BWA trimming parameter \[0\]]' \
        {-r,--ref-seq}'[Reference sequence (required for GC-depth and mismatches-per-cycle calculation). \[\]]':file:_files \
        {-S,--split}'[In addition to the complete statistics, also output categorised statistics based on the tagged field TAG (e.g., use --split RG to split into read groups).]' \
        {-t,--target-regions}'[Do stats in these regions only. Tab-delimited file chr,from,to, 1-based, inclusive. \[\]]':file:_files \
        {-x,--sparse}'[Suppress outputting IS rows where there are no insertions.]' \
        {-p,--remove-overlaps}'[Remove overlaps of paired-end reads from coverage and base count computations.]' \
        {-g,--cov-threshold}'[Only bases with coverage above this value will be included in the target percentage computation \[0\]]' \
        '-X[If this option is set, it will allows user to specify customized index file location(s) if the data folder does not contain any index file. Example usage: samtools stats \[options\] -X /data_folder/data.bam /index_folder/data.bai chrM:1-10]' \
        {-@,--threads}'[Number of input/output compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_ampliconstats {
    _arguments \
        {-f,--required-flag}'[Only output alignments with all bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/) or in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/) \[0\], or in string form by specifying a comma-separated list of keywords as listed by the "samtools flags" subcommand.]' \
        {-F,--filter-flag}'[Do not output alignments with any bits set in INT present in the FLAG field. INT can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/) or in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/) \[0\], or in string form by specifying a comma-separated list of keywords as listed by the "samtools flags" subcommand.]' \
        {-a,--max-amplicons}'[Specify the maximum number of amplicons permitted.]' \
        {-b,--tcoord-bin}'[Bin the template start,end positions into multiples of NT prior to counting their frequency and reporting in the FTCOORD / CTCOORD lines. This may be useful for technologies with higher errors rates where the alignment ends will vary slightly. Defaults to 1, which is equivalent to no binning.]' \
        {-c,--tcoord-min-count}'[In the FTCOORD and CTCOORD lines, only record template start,end coordinate combination if they occur at least INT times.]' \
        {-d,--min-depth}'[Specifies the minimum base depth to consider a reference position to be covered, for purposes of the FRPERC and CRPERC sections.]' \
        {-D,--depth-bin}'[Controls the merging of neighbouring similar depths for the FDP_ALL and FDP_VALID plots. The default FRACTION is 0.01, meaning depths within +/- 1% of a mid point will be aggregated together as a run of the same value. This merging is useful to reduce the file size. Use -D 0 to record every depth.]' \
        {-l,--max-amplicon-length}'[Specifies the maximum length of any individual amplicon.]' \
        {-m,--pos-margin}'[Reads are compared against the primer start and end locations specified in the BED file. An aligned sequence should start precisely at these locations, but sequencing errors may cause the primer clipping to be a few bases out or for the alignment to add a few extra bases of soft clip. This option specifies the margin of error permitted when matching a read to an amplicon number.]' \
        '-o[Output stats to FILE. The default is to write to stdout.]':file:_files \
        {-s,--use-sample-name}'[Instead of using the basename component of the input path names, use the SM field from the first @RG header line.]' \
        {-S,--single-ref}'[Force the output format to match the older single-reference style used in Samtools 1.12 and earlier. This removes the reference names from the SS, AMPLICON, DP_ALL and DP_VALID sections. It cannot be enabled if the input BED file has more than one reference present. Note that plot-ampliconstats can process both output styles.]' \
        {-t,--tlen-adjust}'[Adjust the TLEN field by +/- INT to compensate for primer clipping. This defaults to zero, but if the primers have been clipped and the TLEN field has not been updated using samtools fixmate then the template length will be wrong by the sum of the forward and reverse primer lengths.]' \
        '-@[Number of BAM/CRAM (de)compression threads to use in addition to main thread \[0\].]' \
        "*: :_files"

}

function _samtools_flags {
    _arguments \
        "*: :_files"

}

function _samtools_head {
    _arguments \
        {-h,--headers}'[Display only the first INT header lines. By default, all header lines are displayed.]' \
        {-n,--records}'[Also display the first INT alignment records. By default, no alignment records are displayed.]' \
        "*: :_files"

}

function _samtools_tview {
    _arguments \
        '-d[Output as (H)tml, (C)urses or (T)ext.]' \
        '-p[Go directly to this position]' \
        '-s[Display only alignments from this sample or read group. STR must match either an ID or SM field in an @RG header record. For example]' \
        '-w[Specifies the display width when using the HTML or Text output modes.]' \
        '-X[If this option is set, it will allows user to specify customized index file location(s) if the data folder does not contain any index file. Example usage: samtools tview \[options\] -X </data_folder/data.bam> \[/index_folder/index.bai\] \[ref.fasta\]]' \
        "*: :_files"

}

function _samtools_view {
    _arguments \
        {-b,--bam}'[Output in the BAM format.]' \
        {-C,--cram}'[Output in the CRAM format (requires -T).]' \
        {-1,--fast}'[Enable fast compression. This also changes the default output format to BAM, but this can be overridden by the explicit format options or using a filename with a known suffix.]' \
        {-u,--uncompressed}'[Output uncompressed data. This also changes the default output format to BAM, but this can be overridden by the explicit format options or using a filename with a known suffix.]' \
        {-h,--with-header}'[Include the header in the output.]' \
        {-H,--header-only}'[Output the header only.]' \
        '--no-header[When producing SAM format, output alignment records but not headers. This is the default; the option can be used to reset the effect of -h/-H.]' \
        {-c,--count}'[Instead of printing the alignments, only count them and print the total number. All filter options, such as -f, -F, and -q, are taken into account. The -p option is ignored in this mode.]' \
        {-?,--help}'[Output long help and exit immediately.]' \
        {-o,--output}'[Output to FILE \[stdout\].]':file:_files \
        {-U,--unoutput,--output-unselected}'[Write alignments that are not selected by the various filter options to FILE. When this option is used, all alignments (or all alignments intersecting the regions specified) are written to either the output file or this file, but never both.]':file:_files \
        {-p,--unmap}'[Set the UNMAP flag on alignments that are not selected by the filter options. These alignments are then written to the normal output. This is not compatible with -U.]' \
        {-t,--fai-reference}'[A tab-delimited FILE. Each line must contain the reference name in the first column and the length of the reference in the second column, with one line for each distinct reference. Any additional fields beyond the second column are ignored. This file also defines the order of the reference sequences in sorting. If you run: `samtools faidx <ref.fa>'\'', the resulting index file <ref.fa>.fai can be used as this FILE.]':file:_files \
        {-T,--reference}'[A FASTA format reference FILE, optionally compressed by bgzip and ideally indexed by samtools faidx. If an index is not present one will be generated for you, if the reference file is local.]':file:_files \
        {-L,--target-file,--targets-file}'[Only output alignments overlapping the input BED FILE \[null\].]':file:_files \
        {-M,--use-index}'[Use the multi-region iterator on the union of a BED file and command-line region arguments. This avoids re-reading the same regions of files so can sometimes be much faster. Note this also removes duplicate sequences. Without this a sequence that overlaps multiple regions specified on the command line will be reported multiple times. The usage of a BED file is optional and its path has to be preceded by -L option.]' \
        {--region-file,--regions-file}'[Use an index and multi-region iterator to only output alignments overlapping the input BED FILE. Equivalent to -M -L FILE or --use-index --target-file FILE.]':file:_files \
        {-N,--qname-file}'[Output only alignments with read names listed in FILE.]':file:_files \
        {-r,--read-group}'[Output alignments in read group STR \[null\]. Note that records with no RG tag will also be output when using this option. This behaviour may change in a future release.]' \
        {-R,--read-group-file}'[Output alignments in read groups listed in FILE \[null\]. Note that records with no RG tag will also be output when using this option. This behaviour may change in a future release.]':file:_files \
        {-d,--tag}'[Only output alignments with tag STR1 and associated value STR2, which can be a string or an integer \[null\]. The value can be omitted, in which case only the tag is considered.]' \
        {-D,--tag-file}'[Only output alignments with tag STR and associated values listed in FILE \[null\].]':file:_files \
        {-q,--min-MQ}'[Skip alignments with MAPQ smaller than INT \[0\].]' \
        {-l,--library}'[Only output alignments in library STR \[null\].]' \
        {-m,--min-qlen}'[Only output alignments with number of CIGAR bases consuming query sequence ≥ INT \[0\]]' \
        {-e,--expr}'[Only include alignments that match the filter expression STR. The syntax for these expressions is described in the main samtools(1) man page under the FILTER EXPRESSIONS heading.]' \
        {-f,--require-flags}'[Only output alignments with all bits set in FLAG present in the FLAG field. FLAG can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names.]' \
        {-F,--excl-flags,--exclude-flags}'[Do not output alignments with any bits set in FLAG present in the FLAG field. FLAG can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names.]' \
        {--rf,--incl-flags,--include-flags}'[Only output alignments with any bit set in FLAG present in the FLAG field. FLAG can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names.]' \
        '-G[Do not output alignments with all bits set in INT present in the FLAG field. This is the opposite of -f such that -f12 -G12 is the same as no filtering at all. FLAG can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names.]' \
        {-x,--remove-tag}'[Read tag(s) to exclude from output (repeatable) \[null\]. This can be a single tag or a comma separated list. Alternatively the option itself can be repeated multiple times.]' \
        '--keep-tag[This keeps only tags listed in STR and is directly equivalent to --remove-tag ^STR. Specifying an empty list will remove all tags. If both --keep-tag and --remove-tag are specified then --keep-tag has precedence.]' \
        {-B,--remove-B}'[Collapse the backward CIGAR operation.]' \
        '--add-flags[Adds flag(s) to read. FLAG can be specified in hex by beginning with `0x'\'' (i.e. /^0x\[0-9A-F\]+/), in octal by beginning with `0'\'' (i.e. /^0\[0-7\]+/), as a decimal number not beginning with '\''0'\'' or as a comma-separated list of flag names.]' \
        '--remove-flags[Remove flag(s) from read. FLAG is specified in the same way as with the --add-flags option.]' \
        '--subsample[Output only a proportion of the input alignments, as specified by 0.0 ≤ FLOAT ≤ 1.0, which gives the fraction of templates/pairs to be kept. This subsampling acts in the same way on all of the alignment records in the same template or read pair, so it never keeps a read but not its mate.]' \
        '--subsample-seed[Subsampling seed used to influence which subset of reads is kept. When subsampling data that has previously been subsampled, be sure to use a different seed value from those used previously; otherwise more reads will be retained than expected. \[0\]]' \
        '-s[Subsampling shorthand option: -s INT.FRAC is equivalent to --subsample-seed INT --subsample 0.FRAC.]' \
        {-@,--threads}'[Number of BAM compression threads to use in addition to main thread \[0\].]' \
        {-P,--fetch-pairs}'[Retrieve pairs even when the mate is outside of the requested region. Enabling this option also turns on the multi-region iterator (-M). A region to search must be specified, either on the command-line, or using the -L option. The input file must be an indexed regular file.]' \
        '-S[Ignored for compatibility with previous samtools versions. Previously this option was required if input was in SAM format, but now the correct format is automatically detected by examining the first few characters of input.]' \
        {-X,--customized-index}'[Include customized index file as a part of arguments. See EXAMPLES section for sample of usage.]' \
        {-z,--sanitize}'[Perform some sanity checks on the state of SAM record fields, fixing up common mistakes made by aligners. These include soft-clipping alignments when they extend beyond the end of the reference, marking records as unmapped when they have reference * or position 0, and ensuring unmapped alignments have no CIGAR or mapping quality for unmapped alignments and no MD, NM, CG or SM tags.]' \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        "*: :_files"

}

function _samtools_depad {
    _arguments \
        '-S[Ignored for compatibility with previous samtools versions. Previously this option was required if input was in SAM format, but now the correct format is automatically detected by examining the first few characters of input.]' \
        '-s[Output in SAM format. The default is BAM.]' \
        '-C[Output in CRAM format. The default is BAM.]' \
        '-u[Do not compress the output. Applies to either BAM or CRAM output format.]' \
        '-1[Enable fastest compression level. Only works for BAM or CRAM output.]' \
        '-T[Provides the padded reference file. Note that without this the @SQ line lengths will be incorrect, so for most use cases this option will be considered as mandatory.]':file:_files \
        '-o[Specifies the output filename. By default output is sent to stdout.]':file:_files \
        '--no-PG[Do not add a @PG line to the header of the output file.]' \
        "*: :_files"

}

function _samtools_samples {
    _arguments \
        '-?[print help and exit]' \
        '-h[print a header]' \
        '-i[test if the file is indexed. Add an extra column to the output with a single character value (Y/N).]' \
        '-T[provide the sample tag name from the @RG line \[SM\].]' \
        '-o[-f FILE load an indexed fasta file in the collection of references. Can be used multiple times. Add an extra column with the path to the reference file.]':file:_files \
        '-o[-f FILE load an indexed fasta file in the collection of references. Can be used multiple times. Add an extra column with the path to the reference file.]':file:_files \
        "*: :_files"

}

_samtools "$@"


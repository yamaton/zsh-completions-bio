#compdef qiime

# Auto-generated with h2o


function _qiime {
    local line state

    function _commands {
        local -a commands
        commands=(
            'info:Display information about current deployment.'
            'tools:Tools for working with QIIME 2 files.'
            'dev:Utilities for developers and advanced users.'
            'alignment:Plugin for generating and manipulating alignments.'
            'composition:Plugin for compositional data analysis.'
            'cutadapt:Plugin for removing adapter sequences, primers, and other unwanted sequence from sequence data.'
            'dada2:Plugin for sequence quality control with DADA2.'
            'deblur:Plugin for sequence quality control with Deblur.'
            'demux:Plugin for demultiplexing & viewing sequence quality.'
            'diversity:Plugin for exploring community diversity.'
            'diversity-lib:Plugin for computing community diversity.'
            'emperor:Plugin for ordination plotting with Emperor.'
            'feature-classifier:Plugin for taxonomic classification.'
            'feature-table:Plugin for working with sample by feature tables.'
            'fragment-insertion:Plugin for extending phylogenies.'
            'gneiss:Plugin for building compositional models.'
            'longitudinal:Plugin for paired sample and time series analyses.'
            'metadata:Plugin for working with Metadata.'
            'phylogeny:Plugin for generating and manipulating phylogenies.'
            'quality-control:Plugin for quality control of feature and sequence data.'
            'quality-filter:Plugin for PHRED-based filtering and trimming.'
            'sample-classifier:Plugin for machine learning prediction of sample metadata.'
            'taxa:Plugin for working with feature taxonomy annotations.'
            'vsearch:Plugin for clustering and dereplicating with vsearch.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (info)
            _qiime_info
            ;;

        (tools)
            _qiime_tools
            ;;

        (dev)
            _qiime_dev
            ;;

        (alignment)
            _qiime_alignment
            ;;

        (composition)
            _qiime_composition
            ;;

        (cutadapt)
            _qiime_cutadapt
            ;;

        (dada2)
            _qiime_dada2
            ;;

        (deblur)
            _qiime_deblur
            ;;

        (demux)
            _qiime_demux
            ;;

        (diversity)
            _qiime_diversity
            ;;

        (diversity-lib)
            _qiime_diversity-lib
            ;;

        (emperor)
            _qiime_emperor
            ;;

        (feature-classifier)
            _qiime_feature-classifier
            ;;

        (feature-table)
            _qiime_feature-table
            ;;

        (fragment-insertion)
            _qiime_fragment-insertion
            ;;

        (gneiss)
            _qiime_gneiss
            ;;

        (longitudinal)
            _qiime_longitudinal
            ;;

        (metadata)
            _qiime_metadata
            ;;

        (phylogeny)
            _qiime_phylogeny
            ;;

        (quality-control)
            _qiime_quality-control
            ;;

        (quality-filter)
            _qiime_quality-filter
            ;;

        (sample-classifier)
            _qiime_sample-classifier
            ;;

        (taxa)
            _qiime_taxa
            ;;

        (vsearch)
            _qiime_vsearch
            ;;

        esac
        ;;
     esac

}

function _qiime_info {
    _arguments \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_tools {
    local line state

    function _commands {
        local -a commands
        commands=(
            'cache-create:Create an empty cache at the given location.'
            'cache-fetch:Fetches an artifact out of a cache into a .qza.'
            'cache-garbage-collection:Runs garbage collection on the cache at the'
            'cache-remove:Removes a given key from a cache.'
            'cache-status:Checks the status of the cache.'
            'cache-store:Stores a .qza in the cache under a key.'
            'cast-metadata:Designate metadata column types.'
            'citations:Print citations for a QIIME 2 result.'
            'export:Export data from a QIIME 2 Artifact or a Visualization'
            'extract:Extract a QIIME 2 Artifact or Visualization archive.'
            'import:Import data into a new QIIME 2 Artifact.'
            'inspect-metadata:Inspect columns available in metadata.'
            'peek:Take a peek at a QIIME 2 Artifact or Visualization.'
            'validate:Validate data in a QIIME 2 Artifact.'
            'view:View a QIIME 2 Visualization.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (cache-create)
            _qiime_tools_cache-create
            ;;

        (cache-fetch)
            _qiime_tools_cache-fetch
            ;;

        (cache-garbage-collection)
            _qiime_tools_cache-garbage-collection
            ;;

        (cache-remove)
            _qiime_tools_cache-remove
            ;;

        (cache-status)
            _qiime_tools_cache-status
            ;;

        (cache-store)
            _qiime_tools_cache-store
            ;;

        (cast-metadata)
            _qiime_tools_cast-metadata
            ;;

        (citations)
            _qiime_tools_citations
            ;;

        (export)
            _qiime_tools_export
            ;;

        (extract)
            _qiime_tools_extract
            ;;

        (import)
            _qiime_tools_import
            ;;

        (inspect-metadata)
            _qiime_tools_inspect-metadata
            ;;

        (peek)
            _qiime_tools_peek
            ;;

        (validate)
            _qiime_tools_validate
            ;;

        (view)
            _qiime_tools_view
            ;;

        esac
        ;;
     esac

}

function _qiime_tools_cache-create {
    _arguments \
        '--cache[Path to a nonexistent directory to be created as a cache.]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_cache-fetch {
    _arguments \
        '--cache[Path to an existing cache to load from.   \[required\]]':file:_files \
        '--key[The key to the artifact being loaded.   \[required\]]' \
        '--output-path[Path to put the .qza we are loading the artifact into.   \[required\]]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_cache-garbage-collection {
    _arguments \
        '--cache[Path to an existing cache to run garbage collection on.]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_cache-remove {
    _arguments \
        '--cache[Path to an existing cache to remove the key from.   \[required\]]':file:_files \
        '--key[The key to remove from the cache.   \[required\]]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_cache-status {
    _arguments \
        '--cache[Path to an existing cache to check the status of.]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_cache-store {
    _arguments \
        '--cache[Path to an existing cache to save into. \[required\]]':file:_files \
        '--artifact-path[Path to a .qza to save into the cache. \[required\]]':file:_files \
        '--key[The key to save the artifact under (must be a valid]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_cast-metadata {
    _arguments \
        '--cast[Parameter for each metadata column that should be cast as a specified column type (supported types are as follows: categorical, numeric). The required formatting for this parameter is --cast COLUMN:TYPE, repeated for each column and the associated column type it should be cast to in the output. \[required\]]' \
        '--ignore-extra[If this flag is enabled, cast parameters that do not correspond to any of the column names within the provided metadata will be ignored.]' \
        '--error-on-missing[If this flag is enabled, failing to include cast parameters for all columns in the provided metadata will result in an error.]' \
        '--output-file[Path to file where the modified metadata should be written to.]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_citations {
    _arguments \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_export {
    _arguments \
        '--input-path[Path to file that should be exported \[required\]]' \
        '--output-path[Path to file or directory where data should be exported to \[required\]]':file:_files \
        '--output-format[Format which the data should be exported as. This option cannot be used with Visualizations]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_extract {
    _arguments \
        '--input-path[Path to file that should be extracted \[required\]]' \
        '--output-path[Directory where archive should be extracted to]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_import {
    _arguments \
        '--type[The semantic type of the artifact that will be created upon importing. Use --show-importable-types to see what importable semantic types are available in the current deployment. \[required\]]' \
        '--input-path[Path to file or directory that should be imported.]':file:_files \
        '--output-path[Path where output artifact should be written.]' \
        '--input-format[The format of the data to be imported. If not provided, data must be in the format expected by the semantic type provided via --type.]' \
        '--show-importable-types[Show the semantic types that can be supplied to --type to import data into an artifact.]' \
        '--show-importable-formats[Show formats that can be supplied to --input-format to import data into an artifact.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_inspect-metadata {
    _arguments \
        {--tsv,--no-tsv}'[Print as machine-readable TSV instead of text.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_peek {
    _arguments \
        {--tsv,--no-tsv}'[Print as machine-readable tab separated values.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_validate {
    _arguments \
        '--level[Desired level of validation. "min" will perform minimal validation, and "max" will perform maximal validation (at the potential cost of runtime). \[default: max\]]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_tools_view {
    _arguments \
        '--index-extension[The extension of the index file that should be opened. \[default: html\]]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_dev {
    local line state

    function _commands {
        local -a commands
        commands=(
            'assert-result-data:Assert expression in Result.'
            'assert-result-type:Assert Result is a specific type.'
            'export-default-theme:Export the default settings.'
            'import-theme:Install new command line theme.'
            'refresh-cache:Refresh CLI cache.'
            'reset-theme:Reset command line theme to default.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (assert-result-data)
            _qiime_dev_assert-result-data
            ;;

        (assert-result-type)
            _qiime_dev_assert-result-type
            ;;

        (export-default-theme)
            _qiime_dev_export-default-theme
            ;;

        (import-theme)
            _qiime_dev_import-theme
            ;;

        (refresh-cache)
            _qiime_dev_refresh-cache
            ;;

        (reset-theme)
            _qiime_dev_reset-theme
            ;;

        esac
        ;;
     esac

}

function _qiime_dev_assert-result-data {
    _arguments \
        '--zip-data-path[The path within the zipped Result'\''s data/ directory]' \
        '--expression[The Python regular expression to match. \[required\]]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dev_assert-result-type {
    _arguments \
        '--qiime-type[QIIME 2 data type. \[required\]]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dev_export-default-theme {
    _arguments \
        '--output-path[Path to output the config to \[required\]]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dev_import-theme {
    _arguments \
        '--theme[Path to file containing new theme info \[required\]]':file:_files \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dev_refresh-cache {
    _arguments \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dev_reset-theme {
    _arguments \
        '--yes[--help Show this message and exit.]' \
        "*: :_files"

}


function _qiime_alignment {
    local line state

    function _commands {
        local -a commands
        commands=(
            'mafft:De novo multiple sequence alignment with MAFFT'
            'mafft-add:Add sequences to multiple sequence alignment with MAFFT.'
            'mask:Positional conservation and gap filtering.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (mafft)
            _qiime_alignment_mafft
            ;;

        (mafft-add)
            _qiime_alignment_mafft-add
            ;;

        (mask)
            _qiime_alignment_mask
            ;;

        esac
        ;;
     esac

}

function _qiime_alignment_mafft {
    _arguments \
        '--i-sequences[The sequences to be aligned. \[required\]]' \
        {--p-parttree,--p-no-parttree}'[This flag is required if the number of sequences being aligned are larger than 1000000. Disabled by default \[default: False\]]' \
        '--o-alignment[The aligned sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_alignment_mafft-add {
    _arguments \
        '--i-alignment[The alignment to which sequences should be added.]' \
        '--i-sequences[The sequences to be added. \[required\]]' \
        {--p-parttree,--p-no-parttree}'[This flag is required if the number of sequences being aligned are larger than 1000000. Disabled by default \[default: False\]]' \
        {--p-addfragments,--p-no-addfragments}'[Optimize for the addition of short sequence fragments (for example, primer or amplicon sequences). If not set, default sequence addition is used. \[default: False\]]' \
        '--o-expanded-alignment[Alignment containing the provided aligned and unaligned sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_alignment_mask {
    _arguments \
        '--i-alignment[The alignment to be masked. \[required\]]' \
        '--p-max-gap-frequency[The maximum relative frequency of gap characters in a column for the column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive), where 0.0 retains only those columns without gap characters, and 1.0 retains all columns regardless of gap character frequency.]' \
        '--p-min-conservation[The minimum relative frequency of at least one non-gap character in a column for that column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive). For example, if a value of 0.4 is provided, a column will only be retained if it contains at least one character that is present in at least 40% of the sequences.]' \
        '--o-masked-alignment[The masked alignment. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_composition {
    local line state

    function _commands {
        local -a commands
        commands=(
            'add-pseudocount:Add pseudocount to table'
            'ancom:Apply ANCOM to identify features that differ in abundance.'
            'ancombc:Analysis of Composition of Microbiomes with Bias Correction'
            'tabulate:View tabular output from ANCOM-BC.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (add-pseudocount)
            _qiime_composition_add-pseudocount
            ;;

        (ancom)
            _qiime_composition_ancom
            ;;

        (ancombc)
            _qiime_composition_ancombc
            ;;

        (tabulate)
            _qiime_composition_tabulate
            ;;

        esac
        ;;
     esac

}

function _qiime_composition_add-pseudocount {
    _arguments \
        '--i-table[The feature table to which pseudocounts should be added. \[required\]]' \
        '--p-pseudocount[The value to add to all counts in the feature table.]' \
        '--o-composition-table[The resulting feature table. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_composition_ancom {
    _arguments \
        '--i-table[The feature table to be used for ANCOM computation.]' \
        {--m-metadata-file,--m-metadata-column}'[The categorical sample metadata column to test for differential abundance across. \[required\]]' \
        '--p-transform-function[The method applied to transform feature values before generating volcano plots. \[default: '\''clr'\''\]]' \
        '--p-difference-function[The method applied to visualize fold difference in feature abundances across groups for volcano plots.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_composition_ancombc {
    _arguments \
        '--i-table[The feature table to be used for ANCOM computation.]' \
        '--p-formula[How the microbial absolute abundances for each taxon depend on the variables within the `metadata`.]' \
        '--p-prv-cut[A numerical fraction between 0-1. Taxa with prevalences less than this value will be excluded from the analysis. \[default: 0.1\]]' \
        '--p-lib-cut[A numerical threshold for filtering samples based on library sizes. Samples with library sizes less than this value will be excluded from the analysis.]' \
        {--p-neg-lb,--p-no-neg-lb}'[Whether to classify a taxon as a structural zero using its asymptotic lower bound. \[default: False\]]' \
        '--p-tol[The iteration convergence tolerance for the E-M algorithm. \[default: 1e-05\]]' \
        '--p-max-iter[The maximum number of iterations for the E-M algorithm. \[default: 100\]]' \
        {--p-conserve,--p-no-conserve}'[Whether to use a conservative variance estimator for the test statistic. It is recommended if the sample size is small and/or the number of differentially abundant taxa is believed to be large.]' \
        '--p-alpha[Level of significance. \[default: 0.05\]]' \
        '--m-metadata-file[(multiple The sample metadata.]' \
        '--p-reference-levels[List\[Str\] Define the reference level(s) to be used for]' \
        '--o-differentials[The calculated per-feature differentials. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_composition_tabulate {
    _arguments \
        '--i-data[The ANCOM-BC output to be tabulated. \[required\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_cutadapt {
    local line state

    function _commands {
        local -a commands
        commands=(
            'demux-paired:Demultiplex paired-end sequence data with barcodes in-'
            'demux-single:Demultiplex single-end sequence data with barcodes in-'
            'trim-paired:Find and remove adapters in demultiplexed paired-end'
            'trim-single:Find and remove adapters in demultiplexed single-end'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (demux-paired)
            _qiime_cutadapt_demux-paired
            ;;

        (demux-single)
            _qiime_cutadapt_demux-single
            ;;

        (trim-paired)
            _qiime_cutadapt_trim-paired
            ;;

        (trim-single)
            _qiime_cutadapt_trim-single
            ;;

        esac
        ;;
     esac

}

function _qiime_cutadapt_demux-paired {
    _arguments \
        '--i-seqs[The paired-end sequences to be demultiplexed.]' \
        '--m-forward-barcodes-file[METADATA]' \
        '--m-forward-barcodes-column[The sample metadata column listing the per-sample barcodes for the forward reads. \[required\]]' \
        '--m-reverse-barcodes-file[METADATA]' \
        '--m-reverse-barcodes-column[The sample metadata column listing the per-sample barcodes for the reverse reads. \[optional\]]' \
        '--p-error-rate[The level of error tolerance, specified as the maximum allowable error rate. \[default: 0.1\]]' \
        '--p-batch-size[The number of samples cutadapt demultiplexes]' \
        {--p-mixed-orientation,--p-no-mixed-orientation}'[Handle demultiplexing of mixed orientation reads (i.e. when forward and reverse reads coexist in the same file). \[default: False\]]' \
        '--p-cores[Number of CPU cores to use.]' \
        '--p-minimum-length[Range(1, None) Discard reads shorter than specified value. Note,]' \
        '--o-per-sample-sequences[ARTIFACT]' \
        '--o-untrimmed-sequences[ARTIFACT MultiplexedPairedEndBarcodeInSequence The sequences that were unmatched to barcodes.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_cutadapt_demux-single {
    _arguments \
        '--i-seqs[The single-end sequences to be demultiplexed.]' \
        {--m-barcodes-file,--m-barcodes-column}'[The sample metadata column listing the per-sample barcodes. \[required\]]' \
        '--p-error-rate[The level of error tolerance, specified as the maximum allowable error rate. The default value specified by cutadapt is 0.1 (=10%), which is greater than `demux emp-*`, which is 0.0 (=0%).]' \
        '--p-batch-size[The number of samples cutadapt demultiplexes]' \
        '--p-cores[Number of CPU cores to use.]' \
        '--p-minimum-length[Range(1, None) Discard reads shorter than specified value. Note,]' \
        '--o-per-sample-sequences[ARTIFACT SampleData\[SequencesWithQuality\] The resulting demultiplexed sequences. \[required\]]' \
        '--o-untrimmed-sequences[ARTIFACT MultiplexedSingleEndBarcodeInSequence The sequences that were unmatched to barcodes.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_cutadapt_trim-paired {
    _arguments \
        '--i-demultiplexed-sequences[SampleData\[PairedEndSequencesWithQuality\]]' \
        '--p-cores[Number of CPU cores to use.]' \
        '--p-adapter-f[Sequence of an adapter ligated to the 3'\'' end. The]' \
        '--p-front-f[Sequence of an adapter ligated to the 5'\'' end. The]' \
        '--p-anywhere-f[Sequence of an adapter that may be ligated to the]' \
        '--p-adapter-r[Sequence of an adapter ligated to the 3'\'' end. The]' \
        '--p-front-r[Sequence of an adapter ligated to the 5'\'' end. The]' \
        '--p-anywhere-r[Sequence of an adapter that may be ligated to the]' \
        '--p-error-rate[Maximum allowed error rate. \[default: 0.1\]]' \
        {--p-indels,--p-no-indels}'[Allow insertions or deletions of bases when]' \
        '--p-times[Remove multiple occurrences of an adapter if it is]' \
        '--p-overlap[Require at least `overlap` bases of overlap between]' \
        {--p-match-read-wildcards,--p-no-match-read-wildcards}'[Interpret IUPAC wildcards (e.g., N) in reads.]' \
        {--p-match-adapter-wildcards,--p-no-match-adapter-wildcards}'[Interpret IUPAC wildcards (e.g., N) in adapters.]' \
        '--p-minimum-length[Range(1, None) Discard reads shorter than specified value. Note,]' \
        {--p-discard-untrimmed,--p-no-discard-untrimmed}'[Discard reads in which no adapter was found.]' \
        '--p-max-expected-errors[Range(0, None) Discard reads that exceed maximum expected]' \
        '--p-max-n[Discard reads with more than COUNT N bases. If]' \
        '--p-quality-cutoff-5end[Range(0, None) Trim nucleotides with Phred score quality lower]' \
        '--p-quality-cutoff-3end[Range(0, None) Trim nucleotides with Phred score quality lower]' \
        '--p-quality-base[Range(0, None) How the Phred score is encoded (33 or 64).]' \
        '--o-trimmed-sequences[The resulting trimmed sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_cutadapt_trim-single {
    _arguments \
        '--i-demultiplexed-sequences[The single-end sequences to be trimmed. \[required\]]' \
        '--p-cores[Number of CPU cores to use.]' \
        '--p-adapter[Sequence of an adapter ligated to the 3'\'' end. The]' \
        '--p-front[Sequence of an adapter ligated to the 5'\'' end. The]' \
        '--p-anywhere[Sequence of an adapter that may be ligated to the 5'\'']' \
        '--p-error-rate[Maximum allowed error rate. \[default: 0.1\]]' \
        {--p-indels,--p-no-indels}'[Allow insertions or deletions of bases when matching]' \
        '--p-times[Remove multiple occurrences of an adapter if it is]' \
        '--p-overlap[Require at least `overlap` bases of overlap between]' \
        {--p-match-read-wildcards,--p-no-match-read-wildcards}'[Interpret IUPAC wildcards (e.g., N) in reads.]' \
        {--p-match-adapter-wildcards,--p-no-match-adapter-wildcards}'[Interpret IUPAC wildcards (e.g., N) in adapters.]' \
        '--p-minimum-length[Range(1, None) Discard reads shorter than specified value. Note, the]' \
        {--p-discard-untrimmed,--p-no-discard-untrimmed}'[Discard reads in which no adapter was found.]' \
        '--p-max-expected-errors[Range(0, None) Discard reads that exceed maximum expected erroneous]' \
        '--p-max-n[Discard reads with more than COUNT N bases. If]' \
        '--p-quality-cutoff-5end[Range(0, None) Trim nucleotides with Phred score quality lower than]' \
        '--p-quality-cutoff-3end[Range(0, None) Trim nucleotides with Phred score quality lower than]' \
        '--p-quality-base[Range(0, None) How the Phred score is encoded (33 or 64).]' \
        '--o-trimmed-sequences[The resulting trimmed sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_dada2 {
    local line state

    function _commands {
        local -a commands
        commands=(
            'denoise-ccs:Denoise and dereplicate single-end Pacbio CCS'
            'denoise-paired:Denoise and dereplicate paired-end sequences'
            'denoise-pyro:Denoise and dereplicate single-end pyrosequences'
            'denoise-single:Denoise and dereplicate single-end sequences'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (denoise-ccs)
            _qiime_dada2_denoise-ccs
            ;;

        (denoise-paired)
            _qiime_dada2_denoise-paired
            ;;

        (denoise-pyro)
            _qiime_dada2_denoise-pyro
            ;;

        (denoise-single)
            _qiime_dada2_denoise-single
            ;;

        esac
        ;;
     esac

}

function _qiime_dada2_denoise-ccs {
    _arguments \
        '--i-demultiplexed-seqs[The single-end demultiplexed PacBio CCS sequences to be denoised. \[required\]]' \
        '--p-front[Sequence of an adapter ligated to the 5'\'' end. The adapter and any preceding bases are trimmed. Can contain IUPAC ambiguous nucleotide codes. Note, primer direction is 5'\'' to 3'\''. Primers are removed before trim and filter step. Reads that do not contain the primer are discarded. Each read is re-oriented if the reverse complement of the read is a better match to the provided primer sequence. This is recommended for PacBio CCS reads, which come in a random mix of forward and reverse-complement orientations. \[required\]]' \
        '--p-adapter[Sequence of an adapter ligated to the 3'\'' end. The adapter and any preceding bases are trimmed. Can contain IUPAC ambiguous nucleotide codes. Note, primer direction is 5'\'' to 3'\''. Primers are removed before trim and filter step. Reads that do not contain the primer are discarded. \[required\]]' \
        '--p-max-mismatch[The number of mismatches to tolerate when matching reads to primer sequences - see http://benjjneb.github.io/dada2/ for complete details. \[default: 2\]]' \
        {--p-indels,--p-no-indels}'[Allow insertions or deletions of bases when matching adapters. Note that primer matching can be significantly slower, currently about 4x slower]' \
        '--p-trunc-len[Position at which sequences should be truncated due to decrease in quality. This truncates the 3'\'' end of the of the input sequences, which will be the bases that were sequenced in the last cycles. Reads that are shorter than this value will be discarded. If 0 is provided, no truncation or length filtering will be performed. Note: Since Pacbio CCS sequences were normally with very high quality scores, there is no need to truncate the Pacbio CCS sequences.]' \
        '--p-trim-left[Position at which sequences should be trimmed due to low quality. This trims the 5'\'' end of the of the input sequences, which will be the bases that were sequenced in the first cycles. \[default: 0\]]' \
        '--p-max-ee[Reads with number of expected errors higher than this value will be discarded. \[default: 2.0\]]' \
        '--p-trunc-q[Reads are truncated at the first instance of a quality score less than or equal to this value. If the resulting read is then shorter than `trunc-len`, it is discarded. \[default: 2\]]' \
        '--p-min-len[Remove reads with length less than minLen. minLen is enforced after trimming and truncation. For 16S Pacbio CCS, suggest 1000. \[default: 20\]]' \
        '--p-max-len[Remove reads prior to trimming or truncation which are longer than this value. If 0 is provided no reads will be removed based on length. For 16S Pacbio CCS, suggest 1600. \[default: 0\]]' \
        '--p-pooling-method[The method used to pool samples for denoising. "independent": Samples are denoised indpendently. "pseudo": The pseudo-pooling method is used to approximate pooling of samples. In short, samples are denoised independently once, ASVs detected in at least 2 samples are recorded, and samples are denoised independently a second time, but this time with prior knowledge of the recorded ASVs and thus higher sensitivity to those ASVs.]' \
        '--p-chimera-method[The method used to remove chimeras. "none": No chimera removal is performed. "pooled": All reads are pooled prior to chimera detection. "consensus": Chimeras are detected in samples individually, and sequences found chimeric in a sufficient fraction of samples are removed. \[default: '\''consensus'\''\]]' \
        '--p-min-fold-parent-over-abundance[The minimum abundance of potential parents of a sequence being tested as chimeric, expressed as a fold-change versus the abundance of the sequence being tested. Values should be greater than or equal to 1 (i.e. parents should be more abundant than the sequence being tested). Suggest 3.5. This parameter has no effect if chimera-method is "none".]' \
        {--p-allow-one-off,--p-no-allow-one-off}'[Bimeras that are one-off from exact are also identified if the `allow-one-off` argument is True. If True, a sequence will be identified as bimera if it is one mismatch or indel away from an exact bimera. \[default: False\]]' \
        '--p-n-threads[The number of threads to use for multithreaded processing. If 0 is provided, all available cores will be used. \[default: 1\]]' \
        '--p-n-reads-learn[The number of reads to use when training the error model. Smaller numbers will result in a shorter run time but a less reliable error model.]' \
        {--p-hashed-feature-ids,--p-no-hashed-feature-ids}'[If true, the feature ids in the resulting table will be presented as hashes of the sequences defining each feature. The hash will always be the same for the same sequence so this allows feature tables to be merged across runs of this method. You should only merge tables if the exact same parameters are used for each run. \[default: True\]]' \
        '--o-table[The resulting feature table. \[required\]]' \
        '--o-representative-sequences[The resulting feature sequences. Each feature in the feature table will be represented by exactly one sequence. \[required\]]' \
        '--o-denoising-stats[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dada2_denoise-paired {
    _arguments \
        '--i-demultiplexed-seqs[ARTIFACT SampleData\[PairedEndSequencesWithQuality\] The paired-end demultiplexed sequences to be denoised. \[required\]]' \
        '--p-trunc-len-f[Position at which forward read sequences should be truncated due to decrease in quality. This truncates the 3'\'' end of the of the input sequences, which will be the bases that were sequenced in the last cycles. Reads that are shorter than this value will be discarded. After this parameter is applied there must still be at least a 12 nucleotide overlap between the forward and reverse reads. If 0 is provided, no truncation or length filtering will be performed]' \
        '--p-trunc-len-r[Position at which reverse read sequences should be truncated due to decrease in quality. This truncates the 3'\'' end of the of the input sequences, which will be the bases that were sequenced in the last cycles. Reads that are shorter than this value will be discarded. After this parameter is applied there must still be at least a 12 nucleotide overlap between the forward and reverse reads. If 0 is provided, no truncation or length filtering will be performed]' \
        '--p-trim-left-f[Position at which forward read sequences should be trimmed due to low quality. This trims the 5'\'' end of the input sequences, which will be the bases that were sequenced in the first cycles. \[default: 0\]]' \
        '--p-trim-left-r[Position at which reverse read sequences should be trimmed due to low quality. This trims the 5'\'' end of the input sequences, which will be the bases that were sequenced in the first cycles. \[default: 0\]]' \
        '--p-max-ee-f[Forward reads with number of expected errors higher than this value will be discarded. \[default: 2.0\]]' \
        '--p-max-ee-r[Reverse reads with number of expected errors higher than this value will be discarded. \[default: 2.0\]]' \
        '--p-trunc-q[Reads are truncated at the first instance of a quality score less than or equal to this value. If the resulting read is then shorter than `trunc-len-f` or `trunc-len-r` (depending on the direction of the read) it is discarded. \[default: 2\]]' \
        '--p-pooling-method[The method used to pool samples for denoising. "independent": Samples are denoised indpendently. "pseudo": The pseudo-pooling method is used to approximate pooling of samples. In short, samples are denoised independently once, ASVs detected in at least 2 samples are recorded, and samples are denoised independently a second time, but this time with prior knowledge of the recorded ASVs and thus higher sensitivity to those ASVs.]' \
        '--p-chimera-method[The method used to remove chimeras. "none": No chimera removal is performed. "pooled": All reads are pooled prior to chimera detection. "consensus": Chimeras are detected in samples individually, and sequences found chimeric in a sufficient fraction of samples are removed. \[default: '\''consensus'\''\]]' \
        '--p-min-fold-parent-over-abundance[The minimum abundance of potential parents of a sequence being tested as chimeric, expressed as a fold-change versus the abundance of the sequence being tested. Values should be greater than or equal to 1 (i.e. parents should be more abundant than the sequence being tested). This parameter has no effect if chimera-method is "none". \[default: 1.0\]]' \
        {--p-allow-one-off,--p-no-allow-one-off}'[Bimeras that are one-off from exact are also identified if the `allow-one-off` argument is TrueIf True, a sequence will be identified as bimera if it is one mismatch or indel away from an exact bimera.]' \
        '--p-n-threads[The number of threads to use for multithreaded processing. If 0 is provided, all available cores will be used. \[default: 1\]]' \
        '--p-n-reads-learn[The number of reads to use when training the error model. Smaller numbers will result in a shorter run time but a less reliable error model.]' \
        {--p-hashed-feature-ids,--p-no-hashed-feature-ids}'[If true, the feature ids in the resulting table will be presented as hashes of the sequences defining each feature. The hash will always be the same for the same sequence so this allows feature tables to be merged across runs of this method. You should only merge tables if the exact same parameters are used for each run. \[default: True\]]' \
        '--p-min-overlap[Range(4, None) The minimum length of the overlap required for]' \
        '--o-table[The resulting feature table. \[required\]]' \
        '--o-representative-sequences[The resulting feature sequences. Each feature in the feature table will be represented by exactly one sequence, and these sequences will be the joined paired-end sequences. \[required\]]' \
        '--o-denoising-stats[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dada2_denoise-pyro {
    _arguments \
        '--i-demultiplexed-seqs[ARTIFACT SampleData\[SequencesWithQuality\] The single-end demultiplexed pyrosequencing sequences (e.g. 454, IonTorrent) to be denoised.]' \
        '--p-trunc-len[Position at which sequences should be truncated due to decrease in quality. This truncates the 3'\'' end of the of the input sequences, which will be the bases that were sequenced in the last cycles. Reads that are shorter than this value will be discarded. If 0 is provided, no truncation or length filtering will be performed \[required\]]' \
        '--p-trim-left[Position at which sequences should be trimmed due to low quality. This trims the 5'\'' end of the of the input sequences, which will be the bases that were sequenced in the first cycles. \[default: 0\]]' \
        '--p-max-ee[Reads with number of expected errors higher than this value will be discarded. \[default: 2.0\]]' \
        '--p-trunc-q[Reads are truncated at the first instance of a quality score less than or equal to this value. If the resulting read is then shorter than `trunc-len`, it is discarded. \[default: 2\]]' \
        '--p-max-len[Remove reads prior to trimming or truncation which are longer than this value. If 0 is provided no reads will be removed based on length. \[default: 0\]]' \
        '--p-pooling-method[The method used to pool samples for denoising. "independent": Samples are denoised indpendently. "pseudo": The pseudo-pooling method is used to approximate pooling of samples. In short, samples are denoised independently once, ASVs detected in at least 2 samples are recorded, and samples are denoised independently a second time, but this time with prior knowledge of the recorded ASVs and thus higher sensitivity to those ASVs.]' \
        '--p-chimera-method[The method used to remove chimeras. "none": No chimera removal is performed. "pooled": All reads are pooled prior to chimera detection. "consensus": Chimeras are detected in samples individually, and sequences found chimeric in a sufficient fraction of samples are removed. \[default: '\''consensus'\''\]]' \
        '--p-min-fold-parent-over-abundance[The minimum abundance of potential parents of a sequence being tested as chimeric, expressed as a fold-change versus the abundance of the sequence being tested. Values should be greater than or equal to 1 (i.e. parents should be more abundant than the sequence being tested). This parameter has no effect if chimera-method is "none". \[default: 1.0\]]' \
        {--p-allow-one-off,--p-no-allow-one-off}'[Bimeras that are one-off from exact are also identified if the `allow-one-off` argument is True. If True, a sequence will be identified as bimera if it is one mismatch or indel away from an exact bimera. \[default: False\]]' \
        '--p-n-threads[The number of threads to use for multithreaded processing. If 0 is provided, all available cores will be used. \[default: 1\]]' \
        '--p-n-reads-learn[The number of reads to use when training the error model. Smaller numbers will result in a shorter run time but a less reliable error model.]' \
        {--p-hashed-feature-ids,--p-no-hashed-feature-ids}'[If true, the feature ids in the resulting table will be presented as hashes of the sequences defining each feature. The hash will always be the same for the same sequence so this allows feature tables to be merged across runs of this method. You should only merge tables if the exact same parameters are used for each run. \[default: True\]]' \
        '--o-table[The resulting feature table. \[required\]]' \
        '--o-representative-sequences[The resulting feature sequences. Each feature in the feature table will be represented by exactly one sequence. \[required\]]' \
        '--o-denoising-stats[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_dada2_denoise-single {
    _arguments \
        '--p-trunc-len[Position at which sequences should be truncated due to decrease in quality. This truncates the 3'\'' end of the of the input sequences, which will be the bases that were sequenced in the last cycles. Reads that are shorter than this value will be discarded. If 0 is provided, no truncation or length filtering will be performed \[required\]]' \
        '--p-trim-left[Position at which sequences should be trimmed due to low quality. This trims the 5'\'' end of the of the input sequences, which will be the bases that were sequenced in the first cycles. \[default: 0\]]' \
        '--p-max-ee[Reads with number of expected errors higher than this value will be discarded. \[default: 2.0\]]' \
        '--p-trunc-q[Reads are truncated at the first instance of a quality score less than or equal to this value. If the resulting read is then shorter than `trunc-len`, it is discarded. \[default: 2\]]' \
        '--p-pooling-method[The method used to pool samples for denoising. "independent": Samples are denoised independently. "pseudo": The pseudo-pooling method is used to approximate pooling of samples. In short, samples are denoised independently once, ASVs detected in at least 2 samples are recorded, and samples are denoised independently a second time, but this time with prior knowledge of the recorded ASVs and thus higher sensitivity to those ASVs.]' \
        '--p-chimera-method[The method used to remove chimeras. "none": No chimera removal is performed. "pooled": All reads are pooled prior to chimera detection. "consensus": Chimeras are detected in samples individually, and sequences found chimeric in a sufficient fraction of samples are removed. \[default: '\''consensus'\''\]]' \
        '--p-min-fold-parent-over-abundance[The minimum abundance of potential parents of a sequence being tested as chimeric, expressed as a fold-change versus the abundance of the sequence being tested. Values should be greater than or equal to 1 (i.e. parents should be more abundant than the sequence being tested). This parameter has no effect if chimera-method is "none". \[default: 1.0\]]' \
        {--p-allow-one-off,--p-no-allow-one-off}'[Bimeras that are one-off from exact are also identified if the `allow-one-off` argument is True.If True, a sequence will be identified as bimera if it is one mismatch or indel away from an exact bimera.]' \
        '--p-n-threads[The number of threads to use for multithreaded processing. If 0 is provided, all available cores will be used. \[default: 1\]]' \
        '--p-n-reads-learn[The number of reads to use when training the error model. Smaller numbers will result in a shorter run time but a less reliable error model.]' \
        {--p-hashed-feature-ids,--p-no-hashed-feature-ids}'[If true, the feature ids in the resulting table will be presented as hashes of the sequences defining each feature. The hash will always be the same for the same sequence so this allows feature tables to be merged across runs of this method. You should only merge tables if the exact same parameters are used for each run. \[default: True\]]' \
        '--o-table[The resulting feature table. \[required\]]' \
        '--o-representative-sequences[The resulting feature sequences. Each feature in the feature table will be represented by exactly one sequence. \[required\]]' \
        '--o-denoising-stats[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_deblur {
    local line state

    function _commands {
        local -a commands
        commands=(
            'denoise-16S:Deblur sequences using a 16S positive filter.'
            'denoise-other:Deblur sequences using a user-specified positive filter.'
            'visualize-stats:Visualize Deblur stats per sample.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (denoise-16S)
            _qiime_deblur_denoise-16S
            ;;

        (denoise-other)
            _qiime_deblur_denoise-other
            ;;

        (visualize-stats)
            _qiime_deblur_visualize-stats
            ;;

        esac
        ;;
     esac

}

function _qiime_deblur_denoise-16S {
    _arguments \
        '--p-trim-length[Sequence trim length, specify -1 to disable trimming. \[required\]]' \
        {--p-sample-stats,--p-no-sample-stats}'[If true, gather stats per sample. \[default: False\]]' \
        '--p-mean-error[The mean per nucleotide error, used for original sequence estimate. \[default: 0.005\]]' \
        '--p-indel-prob[Insertion/deletion (indel) probability (same for N indels). \[default: 0.01\]]' \
        '--p-indel-max[Maximum number of insertion/deletions. \[default: 3\]]' \
        '--p-min-reads[Retain only features appearing at least min-reads times across all samples in the resulting feature table. \[default: 10\]]' \
        '--p-min-size[In each sample, discard all features with an abundance less than min-size. \[default: 2\]]' \
        '--p-jobs-to-start[Number of jobs to start (if to run in parallel).]' \
        {--p-hashed-feature-ids,--p-no-hashed-feature-ids}'[If true, hash the feature IDs. \[default: True\]]' \
        '--p-left-trim-len[Range(0, None) Sequence trimming from the 5'\'' end. A value of 0 will]' \
        '--o-table[The resulting denoised feature table. \[required\]]' \
        '--o-representative-sequences[The resulting feature sequences. \[required\]]' \
        '--o-stats[Per-sample stats if requested.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_deblur_denoise-other {
    _arguments \
        '--i-demultiplexed-seqs[ARTIFACT SampleData\[SequencesWithQuality |]' \
        '--i-reference-seqs[Positive filtering database. Keep all sequences aligning to these sequences. \[required\]]' \
        '--p-trim-length[Sequence trim length, specify -1 to disable trimming. \[required\]]' \
        {--p-sample-stats,--p-no-sample-stats}'[If true, gather stats per sample. \[default: False\]]' \
        '--p-mean-error[The mean per nucleotide error, used for original sequence estimate. \[default: 0.005\]]' \
        '--p-indel-prob[Insertion/deletion (indel) probability (same for N indels). \[default: 0.01\]]' \
        '--p-indel-max[Maximum number of insertion/deletions. \[default: 3\]]' \
        '--p-min-reads[Retain only features appearing at least min-reads times across all samples in the resulting feature table. \[default: 10\]]' \
        '--p-min-size[In each sample, discard all features with an abundance less than min-size. \[default: 2\]]' \
        '--p-jobs-to-start[Number of jobs to start (if to run in parallel).]' \
        {--p-hashed-feature-ids,--p-no-hashed-feature-ids}'[If true, hash the feature IDs. \[default: True\]]' \
        '--p-left-trim-len[Range(0, None) Sequence trimming from the 5'\'' end. A value of 0 will]' \
        '--o-table[The resulting denoised feature table. \[required\]]' \
        '--o-representative-sequences[The resulting feature sequences. \[required\]]' \
        '--o-stats[Per-sample stats if requested.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_deblur_visualize-stats {
    _arguments \
        '--i-deblur-stats[DeblurStats Summary statistics of the Deblur process. \[required\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_demux {
    local line state

    function _commands {
        local -a commands
        commands=(
            'emp-paired:Demultiplex paired-end sequence data generated with the'
            'emp-single:Demultiplex sequence data generated with the EMP protocol.'
            'filter-samples:Filter samples out of demultiplexed data.'
            'subsample-paired:Subsample paired-end sequences without replacement.'
            'subsample-single:Subsample single-end sequences without replacement.'
            'summarize:Summarize counts per sample.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (emp-paired)
            _qiime_demux_emp-paired
            ;;

        (emp-single)
            _qiime_demux_emp-single
            ;;

        (filter-samples)
            _qiime_demux_filter-samples
            ;;

        (subsample-paired)
            _qiime_demux_subsample-paired
            ;;

        (subsample-single)
            _qiime_demux_subsample-single
            ;;

        (summarize)
            _qiime_demux_summarize
            ;;

        esac
        ;;
     esac

}

function _qiime_demux_emp-paired {
    _arguments \
        '--i-seqs[The paired-end sequences to be demultiplexed.]' \
        {--m-barcodes-file,--m-barcodes-column}'[The sample metadata column containing the per-sample barcodes. \[required\]]' \
        {--p-golay-error-correction,--p-no-golay-error-correction}'[Perform 12nt Golay error correction on the barcode reads. \[default: True\]]' \
        {--p-rev-comp-barcodes,--p-no-rev-comp-barcodes}'[If provided, the barcode sequence reads will be reverse complemented prior to demultiplexing.]' \
        {--p-rev-comp-mapping-barcodes,--p-no-rev-comp-mapping-barcodes}'[If provided, the barcode sequences in the sample metadata will be reverse complemented prior to demultiplexing. \[default: False\]]' \
        {--p-ignore-description-mismatch,--p-no-ignore-description-mismatch}'[If enabled, ignore mismatches in sequence record description fields. \[default: False\]]' \
        '--o-error-correction-details[Detail about the barcode error corrections. \[required\]]' \
        '--o-per-sample-sequences[SampleData\[PairedEndSequencesWithQuality\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_demux_emp-single {
    _arguments \
        {--m-barcodes-file,--m-barcodes-column}'[The sample metadata column containing the per-sample barcodes. \[required\]]' \
        {--p-golay-error-correction,--p-no-golay-error-correction}'[Perform 12nt Golay error correction on the barcode reads. \[default: True\]]' \
        {--p-rev-comp-barcodes,--p-no-rev-comp-barcodes}'[If provided, the barcode sequence reads will be reverse complemented prior to demultiplexing.]' \
        {--p-rev-comp-mapping-barcodes,--p-no-rev-comp-mapping-barcodes}'[If provided, the barcode sequences in the sample metadata will be reverse complemented prior to demultiplexing. \[default: False\]]' \
        {--p-ignore-description-mismatch,--p-no-ignore-description-mismatch}'[If enabled, ignore mismatches in sequence record description fields. \[default: False\]]' \
        '--o-per-sample-sequences[The resulting demultiplexed sequences. \[required\]]' \
        '--o-error-correction-details[Detail about the barcode error corrections. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_demux_filter-samples {
    _arguments \
        '--p-where[Optional SQLite WHERE clause specifying sample metadata criteria that must be met to be included in the filtered data. If not provided, all samples in `metadata` that are also in the demultiplexed data will be retained. \[optional\]]' \
        {--p-exclude-ids,--p-no-exclude-ids}'[Defaults to False. If True, the samples selected by the `metadata` and optional `where` parameter will be excluded from the filtered data. \[default: False\]]' \
        '--m-metadata-file[(multiple Sample metadata indicating which sample ids to filter.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_demux_subsample-paired {
    _arguments \
        '--i-sequences[The demultiplexed sequences to be subsampled.]' \
        '--p-fraction[The fraction of sequences to retain in subsample.]' \
        '--o-subsampled-sequences[SampleData\[PairedEndSequencesWithQuality\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_demux_subsample-single {
    _arguments \
        '--p-fraction[The fraction of sequences to retain in subsample.]' \
        '--o-subsampled-sequences[The subsampled sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_demux_summarize {
    _arguments \
        '--p-n[The number of sequences that should be selected at random for quality score plots. The quality plots will present the average positional qualities across all of the sequences selected. If input sequences are paired end, plots will be generated for both forward and reverse reads for the same `n` sequences.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_diversity {
    local line state

    function _commands {
        local -a commands
        commands=(
            'adonis:adonis PERMANOVA test for beta group significance'
            'alpha:Alpha diversity'
            'alpha-correlation:Alpha diversity correlation'
            'alpha-group-significance:Alpha diversity comparisons'
            'alpha-phylogenetic:Alpha diversity (phylogenetic)'
            'alpha-rarefaction:Alpha rarefaction curves'
            'beta:Beta diversity'
            'beta-correlation:Beta diversity correlation'
            'beta-group-significance:Beta diversity group significance'
            'beta-phylogenetic:Beta diversity (phylogenetic)'
            'beta-rarefaction:Beta diversity rarefaction'
            'bioenv:bioenv'
            'core-metrics:Core diversity metrics (non-phylogenetic)'
            'core-metrics-phylogenetic:Core diversity metrics (phylogenetic and non-'
            'filter-distance-matrix:Filter samples from a distance matrix.'
            'mantel:Apply the Mantel test to two distance matrices'
            'pcoa:Principal Coordinate Analysis'
            'pcoa-biplot:Principal Coordinate Analysis Biplot'
            'procrustes-analysis:Procrustes Analysis'
            'tsne:t-distributed stochastic neighbor embedding'
            'umap:Uniform Manifold Approximation and Projection'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (adonis)
            _qiime_diversity_adonis
            ;;

        (alpha)
            _qiime_diversity_alpha
            ;;

        (alpha-correlation)
            _qiime_diversity_alpha-correlation
            ;;

        (alpha-group-significance)
            _qiime_diversity_alpha-group-significance
            ;;

        (alpha-phylogenetic)
            _qiime_diversity_alpha-phylogenetic
            ;;

        (alpha-rarefaction)
            _qiime_diversity_alpha-rarefaction
            ;;

        (beta)
            _qiime_diversity_beta
            ;;

        (beta-correlation)
            _qiime_diversity_beta-correlation
            ;;

        (beta-group-significance)
            _qiime_diversity_beta-group-significance
            ;;

        (beta-phylogenetic)
            _qiime_diversity_beta-phylogenetic
            ;;

        (beta-rarefaction)
            _qiime_diversity_beta-rarefaction
            ;;

        (bioenv)
            _qiime_diversity_bioenv
            ;;

        (core-metrics)
            _qiime_diversity_core-metrics
            ;;

        (core-metrics-phylogenetic)
            _qiime_diversity_core-metrics-phylogenetic
            ;;

        (filter-distance-matrix)
            _qiime_diversity_filter-distance-matrix
            ;;

        (mantel)
            _qiime_diversity_mantel
            ;;

        (pcoa)
            _qiime_diversity_pcoa
            ;;

        (pcoa-biplot)
            _qiime_diversity_pcoa-biplot
            ;;

        (procrustes-analysis)
            _qiime_diversity_procrustes-analysis
            ;;

        (tsne)
            _qiime_diversity_tsne
            ;;

        (umap)
            _qiime_diversity_umap
            ;;

        esac
        ;;
     esac

}

function _qiime_diversity_adonis {
    _arguments \
        '--i-distance-matrix[DistanceMatrix Matrix of distances between pairs of samples.]' \
        '--p-formula[Model formula containing only independent terms contained in the sample metadata. These can be continuous variables or factors, and they can have interactions as in a typical R formula. E.g., the formula "treatment+block" would test whether the input distance matrix partitions based on "treatment" and "block" sample metadata. The formula "treatment*block" would test both of those effects as well as their interaction. Enclose formulae in quotes to avoid unpleasant surprises. \[required\]]' \
        '--p-n-jobs[Number of parallel processes to run.]' \
        '--m-metadata-file[(multiple Sample metadata containing formula terms.]' \
        '--p-permutations[Range(1, None) The number of permutations to be run when computing]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_alpha {
    _arguments \
        '--i-table[The feature table containing the samples for which]' \
        '--i-table[The feature table containing the samples for which]' \
        '--o-alpha-diversity[Vector containing per-sample alpha diversities.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_alpha-correlation {
    _arguments \
        '--i-alpha-diversity[Vector of alpha diversity values by sample. \[required\]]' \
        '--p-method[The correlation test to be applied.]' \
        {--p-intersect-ids,--p-no-intersect-ids}'[If supplied, IDs that are not found in both the alpha diversity vector and metadata will be discarded before calculating the correlation. Default behavior is to error on any mismatched IDs. \[default: False\]]' \
        '--m-metadata-file[(multiple The sample metadata.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_alpha-group-significance {
    _arguments \
        '--i-alpha-diversity[Vector of alpha diversity values by sample. \[required\]]' \
        '--m-metadata-file[(multiple The sample metadata.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_alpha-phylogenetic {
    _arguments \
        '--i-table[The feature table containing the samples for which]' \
        '--i-table[The feature table containing the samples for which]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that   Phylogeny\[Rooted\] correspond to the feature identifiers in the table.]' \
        '--p-metric[The alpha diversity metric to be computed.]' \
        '--o-alpha-diversity[Vector containing per-sample alpha diversities.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_alpha-rarefaction {
    _arguments \
        '--i-table[Feature table to compute rarefaction curves from.]' \
        '--i-phylogeny[Optional phylogeny for phylogenetic metrics.]' \
        '--p-max-depth[The maximum rarefaction depth. Must be greater than   Range(1, None) min-depth. \[required\]]' \
        '--m-metadata-file[(multiple arguments The sample metadata.]' \
        '--p-min-depth[The minimum rarefaction depth.   Range(1, None) \[default: 1\]]' \
        '--p-steps[The number of rarefaction depths to include between   Range(2, None) min-depth and max-depth. \[default: 10\]]' \
        '--p-iterations[The number of rarefied feature tables to compute at   Range(1, None) each step. \[default: 10\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_beta {
    _arguments \
        '--i-table[The feature table containing the samples over which]' \
        '--i-table[The feature table containing the samples over which]' \
        '--p-pseudocount[Range(1, None) A pseudocount to handle zeros for compositional]' \
        '--o-distance-matrix[DistanceMatrix The resulting distance matrix. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_beta-correlation {
    _arguments \
        '--i-distance-matrix[DistanceMatrix Matrix of distances between pairs of samples.]' \
        {--m-metadata-file,--m-metadata-column}'[Numeric metadata column from which to compute pairwise Euclidean distances \[required\]]' \
        '--p-method[The correlation test to be applied in the Mantel test.]' \
        {--p-intersect-ids,--p-no-intersect-ids}'[If supplied, IDs that are not found in both distance matrices will be discarded before applying the Mantel test. Default behavior is to error on any mismatched IDs. \[default: False\]]' \
        '--p-label1[Label for `distance-matrix` in the output visualization. \[default: '\''Metadata'\''\]]' \
        '--p-label2[Label for `metadata-distance-matrix` in the output visualization. \[default: '\''Distance Matrix'\''\]]' \
        '--p-permutations[Range(0, None) The number of permutations to be run when computing]' \
        '--o-mantel-scatter-visualization[Scatter plot rendering of the manteltest results]' \
        '--o-metadata-distance-matrix[DistanceMatrix The Distance Matrix produced from the metadata column]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_beta-group-significance {
    _arguments \
        '--i-distance-matrix[DistanceMatrix Matrix of distances between pairs of samples.]' \
        {--m-metadata-file,--m-metadata-column}'[Categorical sample metadata column. \[required\]]' \
        '--p-method[The group significance test to be applied.]' \
        {--p-pairwise,--p-no-pairwise}'[Perform pairwise tests between all pairs of groups in addition to the test across all groups. This can be very slow if there are a lot of groups in the metadata column. \[default: False\]]' \
        '--p-permutations[The number of permutations to be run when computing p-values. \[default: 999\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_beta-phylogenetic {
    _arguments \
        '--i-table[The feature table containing the samples over which]' \
        '--i-table[The feature table containing the samples over which]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that   Phylogeny\[Rooted\] correspond to the feature identifiers in the table.]' \
        {--p-variance-adjusted,--p-no-variance-adjusted}'[Perform variance adjustment based on Chang et al. BMC Bioinformatics 2011. Weights distances based on the proportion of the relative abundance represented between the samples at a given node under evaluation. \[default: False\]]' \
        '--p-alpha[This parameter is only used when the choice of metric is generalized_unifrac. The value of alpha controls importance of sample proportions. 1.0 is weighted normalized UniFrac. 0.0 is close to unweighted UniFrac, but only if the sample proportions are dichotomized. \[optional\]]' \
        {--p-bypass-tips,--p-no-bypass-tips}'[In a bifurcating tree, the tips make up about 50% of the nodes in a tree. By ignoring them, specificity can be traded for reduced compute time. This has the effect of collapsing the phylogeny, and is analogous (in concept) to moving from 99% to 97% OTUs \[default: False\]]' \
        '--o-distance-matrix[DistanceMatrix The resulting distance matrix. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_beta-rarefaction {
    _arguments \
        '--i-table[Feature table upon which to perform beta diversity rarefaction analyses. \[required\]]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that]' \
        '--m-metadata-file[(multiple arguments The sample metadata used for the Emperor jackknifed]' \
        '--p-sampling-depth[Range(1, None) The total frequency that each sample should be]' \
        '--p-iterations[Number of times to rarefy the feature table at a   Range(2, None) given sampling depth. \[default: 10\]]' \
        '--p-clustering-method[Samples can be clustered with neighbor joining or UPGMA. An arbitrary rarefaction trial will be used for the tree, and the remaining trials are used to calculate the support of the internal nodes of that tree. \[required\]]' \
        '--p-correlation-method[The Mantel correlation test to be applied when computing correlation between beta diversity distance matrices. \[default: '\''spearman'\''\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_bioenv {
    _arguments \
        '--i-distance-matrix[DistanceMatrix Matrix of distances between pairs of samples.]' \
        '--m-metadata-file[(multiple The sample metadata.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_core-metrics {
    _arguments \
        '--i-table[The feature table containing the samples over which diversity metrics should be computed. \[required\]]' \
        {--p-with-replacement,--p-no-with-replacement}'[Rarefy with replacement by sampling from the multinomial distribution instead of rarefying without replacement. \[default: False\]]' \
        '--p-sampling-depth[Range(1, None) The total frequency that each sample should be]' \
        '--m-metadata-file[(multiple The sample metadata to use in the emperor plots.]' \
        '--o-rarefied-table[The resulting rarefied feature table. \[required\]]' \
        '--o-observed-features-vector[Vector of Observed Features values by sample.]' \
        '--o-shannon-vector[Vector of Shannon diversity values by sample.]' \
        '--o-evenness-vector[Vector of Pielou'\''s evenness values by sample.]' \
        '--o-jaccard-emperor[Emperor plot of the PCoA matrix computed from Jaccard.]' \
        '--o-bray-curtis-emperor[Emperor plot of the PCoA matrix computed from Bray-Curtis. \[required\]]' \
        '--o-jaccard-distance-matrix[DistanceMatrix Matrix of Jaccard distances between pairs of samples.]' \
        '--o-bray-curtis-distance-matrix[DistanceMatrix Matrix of Bray-Curtis distances between pairs of]' \
        '--o-jaccard-pcoa-results[PCoAResults PCoA matrix computed from Jaccard distances between]' \
        '--o-bray-curtis-pcoa-results[PCoAResults PCoA matrix computed from Bray-Curtis distances]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_core-metrics-phylogenetic {
    _arguments \
        '--i-table[The feature table containing the samples over which diversity metrics should be computed. \[required\]]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that]' \
        {--p-with-replacement,--p-no-with-replacement}'[Rarefy with replacement by sampling from the multinomial distribution instead of rarefying without replacement. \[default: False\]]' \
        '--p-sampling-depth[Range(1, None) The total frequency that each sample should be]' \
        '--m-metadata-file[(multiple arguments The sample metadata to use in the emperor plots.]' \
        '--o-rarefied-table[The resulting rarefied feature table. \[required\]]' \
        '--o-faith-pd-vector[Vector of Faith PD values by sample. \[required\]]' \
        '--o-observed-features-vector[Vector of Observed Features values by sample.]' \
        '--o-shannon-vector[Vector of Shannon diversity values by sample.]' \
        '--o-evenness-vector[Vector of Pielou'\''s evenness values by sample.]' \
        '--o-jaccard-pcoa-results[ARTIFACT]' \
        '--o-unweighted-unifrac-emperor[Emperor plot of the PCoA matrix computed from unweighted UniFrac. \[required\]]' \
        '--o-weighted-unifrac-emperor[Emperor plot of the PCoA matrix computed from weighted UniFrac. \[required\]]' \
        '--o-jaccard-emperor[Emperor plot of the PCoA matrix computed from Jaccard. \[required\]]' \
        '--o-bray-curtis-emperor[Emperor plot of the PCoA matrix computed from Bray-Curtis. \[required\]]' \
        '--o-unweighted-unifrac-distance-matrix[DistanceMatrix Matrix of unweighted UniFrac distances between]' \
        '--o-weighted-unifrac-distance-matrix[DistanceMatrix Matrix of weighted UniFrac distances between pairs]' \
        '--o-jaccard-distance-matrix[DistanceMatrix Matrix of Jaccard distances between pairs of]' \
        '--o-bray-curtis-distance-matrix[DistanceMatrix Matrix of Bray-Curtis distances between pairs of]' \
        '--o-unweighted-unifrac-pcoa-results[PCoAResults PCoA matrix computed from unweighted UniFrac]' \
        '--o-weighted-unifrac-pcoa-results[PCoAResults PCoA matrix computed from weighted UniFrac]' \
        '--o-bray-curtis-pcoa-results[PCoAResults PCoA matrix computed from Bray-Curtis distances]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_filter-distance-matrix {
    _arguments \
        '--i-distance-matrix[DistanceMatrix Distance matrix to filter by sample. \[required\]]' \
        '--p-where[SQLite WHERE clause specifying sample metadata criteria that must be met to be included in the filtered distance matrix. If not provided, all samples in `metadata` that are also in the input distance matrix will be retained. \[optional\]]' \
        {--p-exclude-ids,--p-no-exclude-ids}'[If `True`, the samples selected by `metadata` or `where` parameters will be excluded from the filtered distance matrix instead of being retained.]' \
        '--m-metadata-file[(multiple Sample metadata used with `where` parameter when]' \
        '--o-filtered-distance-matrix[DistanceMatrix Distance matrix filtered to include samples matching]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_mantel {
    _arguments \
        '--i-dm1[Matrix of distances between pairs of samples.]' \
        '--i-dm2[Matrix of distances between pairs of samples.]' \
        '--p-method[The correlation test to be applied in the Mantel test.]' \
        {--p-intersect-ids,--p-no-intersect-ids}'[If supplied, IDs that are not found in both distance matrices will be discarded before applying the Mantel test. Default behavior is to error on any mismatched IDs. \[default: False\]]' \
        '--p-label1[Label for `dm1` in the output visualization.]' \
        '--p-label2[Label for `dm2` in the output visualization.]' \
        '--p-permutations[Range(0, None) The number of permutations to be run when computing]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_pcoa {
    _arguments \
        '--i-distance-matrix[DistanceMatrix The distance matrix on which PCoA should be computed.]' \
        '--p-number-of-dimensions[Range(1, None) Dimensions to reduce the distance matrix to. This]' \
        '--o-pcoa[The resulting PCoA matrix.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_pcoa-biplot {
    _arguments \
        '--i-pcoa[The PCoA where the features will be projected onto.]' \
        '--i-features[Variables to project onto the PCoA matrix \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_procrustes-analysis {
    _arguments \
        '--i-reference[The ordination matrix to which data is fitted to.]' \
        '--i-other[The ordination matrix that'\''s fitted to the]' \
        '--p-dimensions[The number of dimensions to use when fitting the]' \
        '--o-transformed-reference[PCoAResults A normalized version of the "reference" ordination]' \
        '--o-transformed-other[PCoAResults A normalized and fitted version of the "other"]' \
        '--o-disparity-results[ProcrustesStatistics The sum of the squares of the pointwise differences]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_tsne {
    _arguments \
        '--i-distance-matrix[DistanceMatrix The distance matrix on which t-SNE should be]' \
        '--p-number-of-dimensions[Range(2, None) Dimensions to reduce the distance matrix to.]' \
        '--p-perplexity[Provide the balance between local and global   Range(1, None) structure. Low values concentrate on local structure.]' \
        '--p-n-iter[Range(1, None) \[default: 1000\]]' \
        '--p-learning-rate[Range(10.0, None) Controls how much the weights are adjusted at each]' \
        '--p-early-exaggeration[Range(0, None) Affects the tightness of the shown clusters. Larger]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--o-tsne[The resulting t-SNE matrix.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity_umap {
    _arguments \
        '--i-distance-matrix[DistanceMatrix The distance matrix on which UMAP should be computed.]' \
        '--p-number-of-dimensions[Range(2, None) Dimensions to reduce the distance matrix to.]' \
        '--p-n-neighbors[Range(1, None) Provide the balance between local and global]' \
        '--p-min-dist[Controls the cluster size. Low values cause clumpier   Range(0, None) clusters. Higher values preserve a broad topological]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--o-umap[The resulting UMAP matrix.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_diversity-lib {
    local line state

    function _commands {
        local -a commands
        commands=(
            'alpha-passthrough:Alpha Passthrough (non-phylogenetic)'
            'beta-passthrough:Beta Passthrough (non-phylogenetic)'
            'beta-phylogenetic-passthrough:Beta Phylogenetic Passthrough'
            'bray-curtis:Bray-Curtis Dissimilarity'
            'faith-pd:Faith'\''s Phylogenetic Diversity'
            'jaccard:Jaccard Distance'
            'observed-features:Observed Features'
            'pielou-evenness:Pielou'\''s Evenness'
            'shannon-entropy:Shannon'\''s Entropy'
            'unweighted-unifrac:Unweighted Unifrac'
            'weighted-unifrac:Weighted Unifrac'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (alpha-passthrough)
            _qiime_diversity-lib_alpha-passthrough
            ;;

        (beta-passthrough)
            _qiime_diversity-lib_beta-passthrough
            ;;

        (beta-phylogenetic-passthrough)
            _qiime_diversity-lib_beta-phylogenetic-passthrough
            ;;

        (bray-curtis)
            _qiime_diversity-lib_bray-curtis
            ;;

        (faith-pd)
            _qiime_diversity-lib_faith-pd
            ;;

        (jaccard)
            _qiime_diversity-lib_jaccard
            ;;

        (observed-features)
            _qiime_diversity-lib_observed-features
            ;;

        (pielou-evenness)
            _qiime_diversity-lib_pielou-evenness
            ;;

        (shannon-entropy)
            _qiime_diversity-lib_shannon-entropy
            ;;

        (unweighted-unifrac)
            _qiime_diversity-lib_unweighted-unifrac
            ;;

        (weighted-unifrac)
            _qiime_diversity-lib_weighted-unifrac
            ;;

        esac
        ;;
     esac

}

function _qiime_diversity-lib_alpha-passthrough {
    _arguments \
        '--i-table[The feature table containing the samples for which a selected metric should be computed. \[required\]]' \
        '--o-vector[Vector containing per-sample values for the chosen metric. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity-lib_beta-passthrough {
    _arguments \
        '--i-table[The feature table containing the samples over which beta diversity should be computed. \[required\]]' \
        '--p-pseudocount[Range(1, None) A pseudocount to handle zeros for compositional]' \
        '--o-distance-matrix[DistanceMatrix The resulting distance matrix. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        '--o-distance-matrix[# ### example: to run on n cores, replace 1 here with your preferred integer]' \
        "*: :_files"

}

function _qiime_diversity-lib_beta-phylogenetic-passthrough {
    _arguments \
        '--i-table[The feature table containing the samples over which beta diversity should be computed. \[required\]]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that]' \
        {--p-variance-adjusted,--p-no-variance-adjusted}'[Perform variance adjustment based on Chang et al. BMC Bioinformatics 2011. Weights distances based on the proportion of the relative abundance represented between the samples at a given node under evaluation. \[default: False\]]' \
        '--p-alpha[This parameter is only used when the choice of metric is generalized_unifrac. The value of alpha controls importance of sample proportions. 1.0 is weighted normalized UniFrac. 0.0 is close to unweighted UniFrac, but only if the sample proportions are dichotomized. \[optional\]]' \
        {--p-bypass-tips,--p-no-bypass-tips}'[In a bifurcating tree, the tips make up about 50% of the nodes in a tree. By ignoring them, specificity can be traded for reduced compute time. This has the effect of collapsing the phylogeny, and is analogous (in concept) to moving from 99% to 97% OTUs \[default: False\]]' \
        '--o-distance-matrix[DistanceMatrix The resulting distance matrix. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        '--o-distance-matrix[# ### example: use '\''auto'\'' to run on all of host system'\''s available CPU cores]' \
        '--o-distance-matrix[# ### example: use bypass tips to trade specificity for reduced compute time]' \
        "*: :_files"

}

function _qiime_diversity-lib_bray-curtis {
    _arguments \
        '--i-table[The feature table containing the samples for which Bray-Curtis dissimilarity should be computed.]' \
        '--o-distance-matrix[DistanceMatrix Distance matrix for Bray-Curtis dissimilarity]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        '--o-distance-matrix[# ### example: use '\''auto'\'' to run on all of host system'\''s available CPU cores]' \
        "*: :_files"

}

function _qiime_diversity-lib_faith-pd {
    _arguments \
        '--i-table[The feature table containing the samples for which]' \
        '--i-table[The feature table containing the samples for which]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that   Phylogeny\[Rooted\] correspond to the feature identifiers in the table.]' \
        '--o-vector[Vector containing per-sample values for Faith'\''s Phylogenetic Diversity. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity-lib_jaccard {
    _arguments \
        '--i-table[The feature table containing the samples for which]' \
        '--i-table[The feature table containing the samples for which]' \
        '--o-distance-matrix[DistanceMatrix Distance matrix for Jaccard index \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        '--o-distance-matrix[# ### example: use '\''auto'\'' to run on all of host system'\''s available CPU cores]' \
        "*: :_files"

}

function _qiime_diversity-lib_observed-features {
    _arguments \
        '--i-table[The feature table containing the samples for which the]' \
        '--i-table[The feature table containing the samples for which the]' \
        '--o-vector[Vector containing per-sample counts of observed features. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity-lib_pielou-evenness {
    _arguments \
        '--i-table[The feature table containing the samples for which Pielou'\''s evenness should be computed. \[required\]]' \
        {--p-drop-undefined-samples,--p-no-drop-undefined-samples}'[Samples with fewer than two observed features produce undefined (NaN) values. If true, these samples are dropped from the output vector. \[default: False\]]' \
        '--o-vector[Vector containing per-sample values for Pielou'\''s Evenness. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity-lib_shannon-entropy {
    _arguments \
        '--i-table[The feature table containing the samples for which Shannon'\''s Entropy should be computed. \[required\]]' \
        {--p-drop-undefined-samples,--p-no-drop-undefined-samples}'[Samples with no observed features produce undefined (NaN) values. If true, these samples are dropped from the output vector. \[default: False\]]' \
        '--o-vector[Vector containing per-sample values for Shannon'\''s Entropy. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_diversity-lib_unweighted-unifrac {
    _arguments \
        '--i-table[The feature table containing the samples for which]' \
        '--i-table[The feature table containing the samples for which]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that   Phylogeny\[Rooted\] correspond to the feature identifiers in the table.]' \
        {--p-bypass-tips,--p-no-bypass-tips}'[In a bifurcating tree, the tips make up about 50% of the nodes in a tree. By ignoring them, specificity can be traded for reduced compute time. This has the effect of collapsing the phylogeny, and is analogous (in concept) to moving from 99% to 97% OTUs \[default: False\]]' \
        '--o-distance-matrix[DistanceMatrix Distance matrix for Unweighted Unifrac. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        '--o-distance-matrix[# ### example: to run on n cores, replace 1 here with your preferred integer]' \
        "*: :_files"

}

function _qiime_diversity-lib_weighted-unifrac {
    _arguments \
        '--i-table[The feature table containing the samples for which Weighted Unifrac should be computed. \[required\]]' \
        '--i-phylogeny[Phylogenetic tree containing tip identifiers that]' \
        {--p-bypass-tips,--p-no-bypass-tips}'[In a bifurcating tree, the tips make up about 50% of the nodes in a tree. By ignoring them, specificity can be traded for reduced compute time. This has the effect of collapsing the phylogeny, and is analogous (in concept) to moving from 99% to 97% OTUs \[default: False\]]' \
        '--o-distance-matrix[DistanceMatrix Distance matrix for Unweighted Unifrac. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        '--o-distance-matrix[# ### example: to run on n cores, replace 1 here with your preferred integer]' \
        "*: :_files"

}


function _qiime_emperor {
    local line state

    function _commands {
        local -a commands
        commands=(
            'biplot:Visualize and Interact with Principal Coordinates Analysis'
            'plot:Visualize and Interact with Principal Coordinates Analysis'
            'procrustes-plot:Visualize and Interact with a procrustes plot'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (biplot)
            _qiime_emperor_biplot
            ;;

        (plot)
            _qiime_emperor_plot
            ;;

        (procrustes-plot)
            _qiime_emperor_procrustes-plot
            ;;

        esac
        ;;
     esac

}

function _qiime_emperor_biplot {
    _arguments \
        {--p-ignore-missing-samples,--p-no-ignore-missing-samples}'[This will suppress the error raised when the coordinates matrix contains samples that are not present in the metadata. Samples without metadata are included by setting all metadata values to: "This sample has no metadata". This flag is only applied if at least one sample is present in both the coordinates matrix and the metadata. \[default: False\]]' \
        {--p-invert,--p-no-invert}'[If specified, the point and arrow coordinates will be swapped. \[default: False\]]' \
        '--p-number-of-features[INTEGER]' \
        '--m-sample-metadata-file[(multiple The sample metadata]' \
        '--m-feature-metadata-file[(multiple The feature metadata (useful to manipulate the arrows]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_emperor_plot {
    _arguments \
        '--i-pcoa[The principal coordinates matrix to be plotted.]' \
        {--p-ignore-missing-samples,--p-no-ignore-missing-samples}'[This will suppress the error raised when the coordinates matrix contains samples that are not present in the metadata. Samples without metadata are included by setting all metadata values to: "This sample has no metadata". This flag is only applied if at least one sample is present in both the coordinates matrix and the metadata. \[default: False\]]' \
        {--p-ignore-pcoa-features,--p-no-ignore-pcoa-features}'[Biplot arrows cannot be visualized using this method. If you want to visualize biplot arrows use the `biplot` method. Enabling this setting will ignore any PCoA features that are present, otherwise, if PCoA features are detected an error will be raised. \[default: False\]]' \
        '--m-metadata-file[(multiple The sample metadata.]' \
        '--p-custom-axes[List\[Str\] Numeric sample metadata columns that should be]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_emperor_procrustes-plot {
    _arguments \
        '--i-m2-stats[The M^2 value of the procrustes analysis & its associated p value. \[optional\]]' \
        '--i-reference-pcoa[PCoAResults The reference ordination matrix to be plotted.]' \
        '--i-other-pcoa[PCoAResults The "other" ordination matrix to be plotted (the one]' \
        {--p-ignore-missing-samples,--p-no-ignore-missing-samples}'[This will suppress the error raised when the coordinates matrix contains samples that are not present in the metadata. Samples without metadata are included by setting all metadata values to: "This sample has no metadata". This flag is only applied if at least one sample is present in both the coordinates matrix and the metadata. \[default: False\]]' \
        '--m-metadata-file[(multiple The sample metadata.]' \
        '--p-custom-axes[List\[Str\] Numeric sample metadata columns that should be]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_feature-classifier {
    local line state

    function _commands {
        local -a commands
        commands=(
            'blast:BLAST+ local alignment search.'
            'classify-consensus-blast:BLAST+ consensus taxonomy classifier'
            'classify-consensus-vsearch:VSEARCH-based consensus taxonomy classifier'
            'classify-sklearn:Pre-fitted sklearn-based taxonomy classifier'
            'extract-reads:Extract reads from reference sequences.'
            'find-consensus-annotation:Find consensus among multiple annotations.'
            'fit-classifier-naive-bayes:Train the naive_bayes classifier'
            'fit-classifier-sklearn:Train an almost arbitrary scikit-learn'
            'vsearch-global:VSEARCH global alignment search'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (blast)
            _qiime_feature-classifier_blast
            ;;

        (classify-consensus-blast)
            _qiime_feature-classifier_classify-consensus-blast
            ;;

        (classify-consensus-vsearch)
            _qiime_feature-classifier_classify-consensus-vsearch
            ;;

        (classify-sklearn)
            _qiime_feature-classifier_classify-sklearn
            ;;

        (extract-reads)
            _qiime_feature-classifier_extract-reads
            ;;

        (find-consensus-annotation)
            _qiime_feature-classifier_find-consensus-annotation
            ;;

        (fit-classifier-naive-bayes)
            _qiime_feature-classifier_fit-classifier-naive-bayes
            ;;

        (fit-classifier-sklearn)
            _qiime_feature-classifier_fit-classifier-sklearn
            ;;

        (vsearch-global)
            _qiime_feature-classifier_vsearch-global
            ;;

        esac
        ;;
     esac

}

function _qiime_feature-classifier_blast {
    _arguments \
        '--i-query[Query sequences. \[required\]]' \
        '--i-reference-reads[Reference sequences. \[required\]]' \
        '--p-maxaccepts[Maximum number of hits to keep for each query.]' \
        '--p-perc-identity[Reject match if percent identity to query is lower.]' \
        '--p-query-cov[Reject match if query alignment coverage per high-scoring pair is lower. Note: this uses blastn'\''s qcov_hsp_perc parameter, and may not behave identically to the query-cov parameter used by classify-consensus-vsearch. \[default: 0.8\]]' \
        '--p-strand[Align against reference sequences in forward ("plus"), reverse ("minus"), or both directions ("both"). \[default: '\''both'\''\]]' \
        '--p-evalue[BLAST expectation value (E) threshold for saving hits. \[default: 0.001\]]' \
        {--p-output-no-hits,--p-no-output-no-hits}'[Report both matching and non-matching queries. WARNING: always use the default setting for this option unless if you know what you are doing! If you set this option to False, your sequences and feature table will need to be filtered to exclude unclassified sequences, otherwise you may run into errors downstream from missing feature IDs. Set to FALSE to mirror default BLAST search.]' \
        '--o-search-results[FeatureData\[BLAST6\] Top hits for each query. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_classify-consensus-blast {
    _arguments \
        '--i-query[Query sequences. \[required\]]' \
        '--i-reference-reads[Reference sequences. \[required\]]' \
        '--i-reference-taxonomy[reference taxonomy labels. \[required\]]' \
        '--p-maxaccepts[Maximum number of hits to keep for each query.]' \
        '--p-perc-identity[Reject match if percent identity to query is lower.]' \
        '--p-query-cov[Reject match if query alignment coverage per high-scoring pair is lower. Note: this uses blastn'\''s qcov_hsp_perc parameter, and may not behave identically to the query-cov parameter used by classify-consensus-vsearch. \[default: 0.8\]]' \
        '--p-strand[Align against reference sequences in forward ("plus"), reverse ("minus"), or both directions ("both"). \[default: '\''both'\''\]]' \
        '--p-evalue[BLAST expectation value (E) threshold for saving hits. \[default: 0.001\]]' \
        {--p-output-no-hits,--p-no-output-no-hits}'[Report both matching and non-matching queries. WARNING: always use the default setting for this option unless if you know what you are doing! If you set this option to False, your sequences and feature table will need to be filtered to exclude unclassified sequences, otherwise you may run into errors downstream from missing feature IDs. Set to FALSE to mirror default BLAST search.]' \
        '--p-min-consensus[Range(0.5, 1.0, inclusive_start=False,]' \
        '--p-unassignable-label[Annotation given to sequences without any hits.]' \
        '--o-classification[Taxonomy classifications of query sequences.]' \
        '--o-search-results[FeatureData\[BLAST6\] Top hits for each query. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_classify-consensus-vsearch {
    _arguments \
        '--i-query[Query Sequences. \[required\]]' \
        '--i-reference-reads[Reference sequences. \[required\]]' \
        '--i-reference-taxonomy[Reference taxonomy labels. \[required\]]' \
        '--p-perc-identity[Reject match if percent identity to query is lower.]' \
        '--p-query-cov[Reject match if query alignment coverage per high-scoring pair is lower. \[default: 0.8\]]' \
        '--p-strand[Align against reference sequences in forward ("plus") or both directions ("both").]' \
        {--p-search-exact,--p-no-search-exact}'[Search for exact full-length matches to the query sequences. Only 100% exact matches are reported and this command is much faster than the default. If True, the perc-identity, query-cov, maxaccepts, and maxrejects settings are ignored. Note: query and reference reads must be trimmed to the exact same DNA locus (e.g., primer site) because only exact matches will be reported. \[default: False\]]' \
        {--p-top-hits-only,--p-no-top-hits-only}'[Only the top hits between the query and reference sequence sets are reported. For each query, the top hit is the one presenting the highest percentage of identity. Multiple equally scored top hits will be used for consensus taxonomic assignment if maxaccepts is greater than 1. \[default: False\]]' \
        {--p-output-no-hits,--p-no-output-no-hits}'[Report both matching and non-matching queries. WARNING: always use the default setting for this option unless if you know what you are doing! If you set this option to False, your sequences and feature table will need to be filtered to exclude unclassified sequences, otherwise you may run into errors downstream from missing feature IDs.]' \
        '--p-weak-id[Show hits with percentage of identity of at least N, without terminating the search. A normal search stops as soon as enough hits are found (as defined by maxaccepts, maxrejects, and perc-identity). As weak-id reports weak hits that are not deduced from maxaccepts, high perc-identity values can be used, hence preserving both speed and sensitivity. Logically, weak-id must be smaller than the value indicated by perc-identity, otherwise this option will be ignored. \[default: 0.0\]]' \
        '--p-threads[Number of threads to use for job parallelization.]' \
        '--p-min-consensus[Range(0.5, 1.0, inclusive_start=False,]' \
        '--p-unassignable-label[Annotation given to sequences without any hits.]' \
        '--o-classification[Taxonomy classifications of query sequences.]' \
        '--o-search-results[FeatureData\[BLAST6\] Top hits for each query. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_classify-sklearn {
    _arguments \
        '--i-reads[The feature data to be classified. \[required\]]' \
        '--i-classifier[TaxonomicClassifier The taxonomic classifier for classifying the reads.]' \
        '--p-n-jobs[The maximum number of concurrently worker processes. If -1 all CPUs are used. If 1 is given, no parallel computing code is used at all, which is useful for debugging. For n-jobs below -1, (n_cpus + 1 + n-jobs) are used. Thus for n-jobs = -2, all CPUs but one are used. \[default: 1\]]' \
        '--p-pre-dispatch["all" or expression, as in "3*n_jobs". The number of batches (of tasks) to be pre-dispatched.]' \
        '--p-read-orientation[Direction of reads with respect to reference sequences. same will cause reads to be classified unchanged; reverse-complement will cause reads to be reversed and complemented prior to classification. "auto" will autodetect orientation based on the confidence estimates for the first 100 reads.]' \
        '--o-classification[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_extract-reads {
    _arguments \
        '--i-sequences[\[required\]]' \
        '--p-f-primer[forward primer sequence (5'\'' -> 3'\''). \[required\]]' \
        '--p-r-primer[reverse primer sequence (5'\'' -> 3'\''). Do not use reverse-complemented primer sequence. \[required\]]' \
        '--p-trim-right[trim-right nucleotides are removed from the 3'\'' end if trim-right is positive. Applied before trunc-len and trim-left. \[default: 0\]]' \
        '--p-trunc-len[read is cut to trunc-len if trunc-len is positive. Applied after trim-right but before trim-left.]' \
        '--p-trim-left[trim-left nucleotides are removed from the 5'\'' end if trim-left is positive. Applied after trim-right and trunc-len. \[default: 0\]]' \
        '--p-identity[minimum combined primer match identity threshold.]' \
        '--p-min-length[Minimum amplicon length. Shorter amplicons are]' \
        '--p-max-length[Maximum amplicon length. Longer amplicons are]' \
        '--p-n-jobs[Number of seperate processes to run.]' \
        '--p-read-orientation[Orientation of primers relative to the sequences: "forward" searches for primer hits in the forward direction, "reverse" searches reverse-complement, and "both" searches both directions.]' \
        '--o-reads[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_find-consensus-annotation {
    _arguments \
        '--i-search-results[Search results in BLAST6 output format \[required\]]' \
        '--i-reference-taxonomy[reference taxonomy labels. \[required\]]' \
        '--p-unassignable-label[Annotation given when no consensus is found.]' \
        '--o-consensus-taxonomy[Consensus taxonomy and scores. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_fit-classifier-naive-bayes {
    _arguments \
        '--i-reference-reads[\[required\]]' \
        '--i-reference-taxonomy[\[required\]]' \
        '--i-class-weight[\[optional\]]' \
        '--p-classify--alpha[\[default: 0.001\]]' \
        '--p-classify--chunk-size[\[default: 20000\]]' \
        {--p-classify--fit-prior,--p-no-classify--fit-prior}'[\[default: False\]]' \
        {--p-feat-ext--alternate-sign,--p-no-feat-ext--alternate-sign}'[\[default: False\]]' \
        {--p-feat-ext--binary,--p-no-feat-ext--binary}'[\[default: False\]]' \
        {--p-verbose,--p-no-verbose}'[\[default: False\]]' \
        '--p-classify--class-prior[\[default: '\''null'\''\]]' \
        '--p-feat-ext--analyzer[\[default: '\''char_wb'\''\]]' \
        '--p-feat-ext--preprocessor[\[default: '\''null'\''\]]' \
        '--p-feat-ext--stop-words[\[default: '\''null'\''\]]' \
        '--p-feat-ext--strip-accents[\[default: '\''null'\''\]]' \
        '--p-feat-ext--tokenizer[\[default: '\''null'\''\]]' \
        '--p-feat-ext--decode-error[\[default: '\''strict'\''\]]' \
        '--p-feat-ext--encoding[\[default: '\''utf-8'\''\]]' \
        '--p-feat-ext--input[\[default: '\''content'\''\]]' \
        {--p-feat-ext--lowercase,--p-no-feat-ext--lowercase}'[\[default: True\]]' \
        '--p-feat-ext--n-features[\[default: 8192\]]' \
        '--p-feat-ext--ngram-range[\[default: '\''\[7, 7\]'\''\]]' \
        '--p-feat-ext--norm[\[default: '\''l2'\''\]]' \
        '--p-feat-ext--token-pattern[\[default: '\''(?u)\\b\\w\\w+\\b'\''\]]' \
        '--o-classifier[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_fit-classifier-sklearn {
    _arguments \
        '--i-reference-reads[\[required\]]' \
        '--i-reference-taxonomy[\[required\]]' \
        '--i-class-weight[\[optional\]]' \
        '--p-classifier-specification[\[required\]]' \
        '--o-classifier[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-classifier_vsearch-global {
    _arguments \
        '--i-query[Query Sequences. \[required\]]' \
        '--i-reference-reads[Reference sequences. \[required\]]' \
        '--p-perc-identity[Reject match if percent identity to query is lower.]' \
        '--p-query-cov[Reject match if query alignment coverage per high-scoring pair is lower. \[default: 0.8\]]' \
        '--p-strand[Align against reference sequences in forward ("plus") or both directions ("both").]' \
        {--p-search-exact,--p-no-search-exact}'[Search for exact full-length matches to the query sequences. Only 100% exact matches are reported and this command is much faster than the default. If True, the perc-identity, query-cov, maxaccepts, and maxrejects settings are ignored. Note: query and reference reads must be trimmed to the exact same DNA locus (e.g., primer site) because only exact matches will be reported. \[default: False\]]' \
        {--p-top-hits-only,--p-no-top-hits-only}'[Only the top hits between the query and reference sequence sets are reported. For each query, the top hit is the one presenting the highest percentage of identity. Multiple equally scored top hits will be used for consensus taxonomic assignment if maxaccepts is greater than 1. \[default: False\]]' \
        {--p-output-no-hits,--p-no-output-no-hits}'[Report both matching and non-matching queries. WARNING: always use the default setting for this option unless if you know what you are doing! If you set this option to False, your sequences and feature table will need to be filtered to exclude unclassified sequences, otherwise you may run into errors downstream from missing feature IDs.]' \
        '--p-weak-id[Show hits with percentage of identity of at least N, without terminating the search. A normal search stops as soon as enough hits are found (as defined by maxaccepts, maxrejects, and perc-identity). As weak-id reports weak hits that are not deduced from maxaccepts, high perc-identity values can be used, hence preserving both speed and sensitivity. Logically, weak-id must be smaller than the value indicated by perc-identity, otherwise this option will be ignored. \[default: 0.0\]]' \
        '--p-threads[Number of threads to use for job parallelization.]' \
        '--o-search-results[FeatureData\[BLAST6\] Top hits for each query. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_feature-table {
    local line state

    function _commands {
        local -a commands
        commands=(
            'core-features:Identify core features in table'
            'filter-features:Filter features from table'
            'filter-features-conditionally:Filter features from a table based on'
            'filter-samples:Filter samples from table'
            'filter-seqs:Filter features from sequences'
            'group:Group samples or features by a metadata'
            'heatmap:Generate a heatmap representation of a'
            'merge:Combine multiple tables'
            'merge-seqs:Combine collections of feature sequences'
            'merge-taxa:Combine collections of feature taxonomies'
            'presence-absence:Convert to presence/absence'
            'rarefy:Rarefy table'
            'relative-frequency:Convert to relative frequencies'
            'rename-ids:Renames sample or feature ids in a table'
            'subsample:Subsample table'
            'summarize:Summarize table'
            'tabulate-seqs:View sequence associated with each feature'
            'transpose:Transpose a feature table.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (core-features)
            _qiime_feature-table_core-features
            ;;

        (filter-features)
            _qiime_feature-table_filter-features
            ;;

        (filter-features-conditionally)
            _qiime_feature-table_filter-features-conditionally
            ;;

        (filter-samples)
            _qiime_feature-table_filter-samples
            ;;

        (filter-seqs)
            _qiime_feature-table_filter-seqs
            ;;

        (group)
            _qiime_feature-table_group
            ;;

        (heatmap)
            _qiime_feature-table_heatmap
            ;;

        (merge)
            _qiime_feature-table_merge
            ;;

        (merge-seqs)
            _qiime_feature-table_merge-seqs
            ;;

        (merge-taxa)
            _qiime_feature-table_merge-taxa
            ;;

        (presence-absence)
            _qiime_feature-table_presence-absence
            ;;

        (rarefy)
            _qiime_feature-table_rarefy
            ;;

        (relative-frequency)
            _qiime_feature-table_relative-frequency
            ;;

        (rename-ids)
            _qiime_feature-table_rename-ids
            ;;

        (subsample)
            _qiime_feature-table_subsample
            ;;

        (summarize)
            _qiime_feature-table_summarize
            ;;

        (tabulate-seqs)
            _qiime_feature-table_tabulate-seqs
            ;;

        (transpose)
            _qiime_feature-table_transpose
            ;;

        esac
        ;;
     esac

}

function _qiime_feature-table_core-features {
    _arguments \
        '--i-table[The feature table to use in core features calculations. \[required\]]' \
        '--p-min-fraction[The minimum fraction of samples that a feature must be observed in for that feature to be considered a core feature. \[default: 0.5\]]' \
        '--p-max-fraction[The maximum fraction of samples that a feature must be observed in for that feature to be considered a core feature. \[default: 1.0\]]' \
        '--p-steps[The number of steps to take between `min-fraction` and]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_filter-features {
    _arguments \
        '--i-table[The feature table from which features should be filtered. \[required\]]' \
        '--p-min-frequency[The minimum total frequency that a feature must have to be retained. \[default: 0\]]' \
        '--p-max-frequency[The maximum total frequency that a feature can have to be retained. If no value is provided this will default to infinity (i.e., no maximum frequency filter will be applied). \[optional\]]' \
        '--p-min-samples[The minimum number of samples that a feature must be observed in to be retained. \[default: 0\]]' \
        '--p-max-samples[The maximum number of samples that a feature can be observed in to be retained. If no value is provided this will default to infinity (i.e., no maximum sample filter will be applied). \[optional\]]' \
        '--p-where[SQLite WHERE clause specifying feature metadata criteria that must be met to be included in the filtered feature table. If not provided, all features in `metadata` that are also in the feature table will be retained. \[optional\]]' \
        {--p-exclude-ids,--p-no-exclude-ids}'[If true, the features selected by `metadata` or `where` parameters will be excluded from the filtered table instead of being retained. \[default: False\]]' \
        {--p-filter-empty-samples,--p-no-filter-empty-samples}'[If true, drop any samples where none of the retained features are present. \[default: True\]]' \
        '--m-metadata-file[(multiple Feature metadata used with `where` parameter when]' \
        '--o-filtered-table[The resulting feature table filtered by feature.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_filter-features-conditionally {
    _arguments \
        '--p-abundance[Range(0, 1) The minimum relative abundance for a feature to be]' \
        '--p-prevalence[Range(0, 1) The minimum portion of samples that a feature must]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_filter-samples {
    _arguments \
        '--p-min-frequency[The minimum total frequency that a sample must have to be retained. \[default: 0\]]' \
        '--p-max-frequency[The maximum total frequency that a sample can have to be retained. If no value is provided this will default to infinity (i.e., no maximum frequency filter will be applied). \[optional\]]' \
        '--p-min-features[The minimum number of features that a sample must have to be retained. \[default: 0\]]' \
        '--p-max-features[The maximum number of features that a sample can have to be retained. If no value is provided this will default to infinity (i.e., no maximum feature filter will be applied). \[optional\]]' \
        '--p-where[SQLite WHERE clause specifying sample metadata criteria that must be met to be included in the filtered feature table. If not provided, all samples in `metadata` that are also in the feature table will be retained. \[optional\]]' \
        {--p-exclude-ids,--p-no-exclude-ids}'[If true, the samples selected by `metadata` or `where` parameters will be excluded from the filtered table instead of being retained. \[default: False\]]' \
        {--p-filter-empty-features,--p-no-filter-empty-features}'[If true, features which are not present in any retained samples are dropped. \[default: True\]]' \
        '--m-metadata-file[(multiple Sample metadata used with `where` parameter when]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        '--p-where[IN ("left palm", "right palm")'\'' \]' \
        '--p-where[IN ("left palm", "right palm")'\'' \]' \
        '--o-filtered-table[# ### example: filter to subject1 gut]' \
        '--o-filtered-table[# ### example: filter to gut or abx]' \
        '--o-filtered-table[# ### example: filter to subject1 not gut]' \
        '--o-filtered-table[# ### example: filter min features]' \
        '--o-filtered-table[# ### example: filter min frequency]' \
        "*: :_files"

}

function _qiime_feature-table_filter-seqs {
    _arguments \
        '--i-data[The sequences from which features should be filtered.]' \
        '--i-table[Table containing feature ids used for id-based filtering. \[optional\]]' \
        '--p-where[SQLite WHERE clause specifying feature metadata criteria that must be met to be included in the filtered feature table. If not provided, all features in `metadata` that are also in the sequences will be retained. \[optional\]]' \
        {--p-exclude-ids,--p-no-exclude-ids}'[If true, the features selected by the `metadata` (with or without the `where` parameter) or `table` parameter will be excluded from the filtered sequences instead of being retained. \[default: False\]]' \
        '--m-metadata-file[(multiple Feature metadata used for id-based filtering, with]' \
        '--o-filtered-data[The resulting filtered sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_group {
    _arguments \
        '--i-table[The table to group samples or features on. \[required\]]' \
        '--p-axis[Along which axis to group. Each ID in the given axis must exist in `metadata`. \[required\]]' \
        {--m-metadata-file,--m-metadata-column}'[A column defining the groups. Each unique value will become a new ID for the table on the given `axis`.]' \
        '--p-mode[How to combine samples or features within a group. `sum` will sum the frequencies across all samples or features within a group; `mean-ceiling` will take the ceiling of the mean of these frequencies; `median-ceiling` will take the ceiling of the median of these frequencies. \[required\]]' \
        '--o-grouped-table[A table that has been grouped along the given `axis`. IDs on that axis are replaced by values in the `metadata` column. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_heatmap {
    _arguments \
        '--i-table[The feature table to visualize. \[required\]]' \
        '--m-sample-metadata-file[METADATA]' \
        '--m-sample-metadata-column[Annotate the sample IDs with these sample metadata values. When metadata is present and `cluster`='\''feature'\'', samples will be sorted by the metadata values. \[optional\]]' \
        '--m-feature-metadata-file[METADATA]' \
        '--m-feature-metadata-column[Annotate the feature IDs with these feature metadata values. When metadata is present and `cluster`='\''sample'\'', features will be sorted by the metadata values. \[optional\]]' \
        {--p-normalize,--p-no-normalize}'[Normalize the feature table by adding a psuedocount of 1 and then taking the log10 of the table.]' \
        '--p-title[Optional custom plot title. \[optional\]]' \
        '--p-cluster[Specify which axes to cluster. \[default: '\''both'\''\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_merge {
    _arguments \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_merge-seqs {
    _arguments \
        '--i-data[The collection of feature sequences to be merged.]' \
        '--o-merged-data[The resulting collection of feature sequences containing all feature sequences provided. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_merge-taxa {
    _arguments \
        '--i-data[The collection of feature taxonomies to be merged.]' \
        '--o-merged-data[The resulting collection of feature taxonomies containing all feature taxonomies provided.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_presence-absence {
    _arguments \
        '--i-table[The feature table to be converted into presence/absence abundances. \[required\]]' \
        '--o-presence-absence-table[The resulting presence/absence feature table.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_rarefy {
    _arguments \
        '--i-table[The feature table to be rarefied. \[required\]]' \
        {--p-with-replacement,--p-no-with-replacement}'[Rarefy with replacement by sampling from the multinomial distribution instead of rarefying without replacement. \[default: False\]]' \
        '--p-sampling-depth[Range(1, None) The total frequency that each sample should be]' \
        '--o-rarefied-table[The resulting rarefied feature table. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_relative-frequency {
    _arguments \
        '--i-table[The feature table to be converted into relative frequencies. \[required\]]' \
        '--o-relative-frequency-table[The resulting relative frequency feature table.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_rename-ids {
    _arguments \
        {--m-metadata-file,--m-metadata-column}'[A metadata column defining the new ids. Each original id must map to a new unique id. If strict mode is used, then every id in the original table must have a new id.]' \
        '--p-axis[Along which axis to rename the ids. \[default: '\''sample'\''\]]' \
        {--p-strict,--p-no-strict}'[Whether the naming needs to be strict (each id in the table must have a new id). Otherwise, only the ids described in `metadata` will be renamed and the others will keep their original id names. \[default: False\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_subsample {
    _arguments \
        '--i-table[The feature table to be sampled. \[required\]]' \
        '--p-subsampling-depth[INTEGER]' \
        '--p-axis[The axis to sample over. If "sample" then samples will be randomly selected to be retained. If "feature" then a random set of features will be selected to be retained. \[required\]]' \
        '--o-sampled-table[The resulting subsampled feature table. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_summarize {
    _arguments \
        '--i-table[The feature table to be summarized. \[required\]]' \
        '--i-table[The feature table to be summarized. \[required\]]' \
        '--m-sample-metadata-file[(multiple The sample metadata.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_tabulate-seqs {
    _arguments \
        '--i-data[The feature sequences to be tabulated. \[required\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_feature-table_transpose {
    _arguments \
        '--i-table[The feature table to be transposed. \[required\]]' \
        '--o-transposed-feature-table[The resulting transposed feature table. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_fragment-insertion {
    local line state

    function _commands {
        local -a commands
        commands=(
            'classify-otus-experimental:Experimental: Obtain taxonomic lineages, by'
            'filter-features:Filter fragments in tree from table.'
            'sepp:Insert fragment sequences using SEPP into'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (classify-otus-experimental)
            _qiime_fragment-insertion_classify-otus-experimental
            ;;

        (filter-features)
            _qiime_fragment-insertion_filter-features
            ;;

        (sepp)
            _qiime_fragment-insertion_sepp
            ;;

        esac
        ;;
     esac

}

function _qiime_fragment-insertion_classify-otus-experimental {
    _arguments \
        '--i-representative-sequences[The sequences used for a '\''sepp'\'' run to produce the '\''tree'\''. \[required\]]' \
        '--i-tree[The tree resulting from inserting fragments into a]' \
        '--i-reference-taxonomy[Reference taxonomic table that maps every OTU-ID into a taxonomic lineage string. \[required\]]' \
        '--o-classification[Taxonomic lineages for inserted fragments. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_fragment-insertion_filter-features {
    _arguments \
        '--i-table[A feature-table which needs to filtered down to those fragments that are contained in the tree, e.g. result of a Deblur or DADA2 run. \[required\]]' \
        '--i-tree[The tree resulting from inserting fragments into a]' \
        '--o-filtered-table[The input table minus those fragments that were not part of the tree. This feature-table can be used for downstream analyses like phylogenetic alpha- or betadiversity computation. \[required\]]' \
        '--o-removed-table[Those fragments that got removed from the input table, because they were not part of the tree. This table is mainly used for quality control, e.g. to inspect the ratio of removed reads per sample from the input table. You can ignore this table for downstream analyses.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_fragment-insertion_sepp {
    _arguments \
        '--i-representative-sequences[The sequences to insert into the reference tree.]' \
        '--i-reference-database[The reference database to insert the representative sequences into. \[required\]]' \
        '--p-alignment-subset-size[Each placement subset is further broken into subsets of at most these many sequences and a separate HMM is trained on each subset. \[default: 1000\]]' \
        '--p-placement-subset-size[The tree is divided into subsets such that each subset includes at most these many subsets. The placement step places the fragment on only one subset, determined based on alignment scores. Further reading: https://github.com/smirarab/sepp/blob/master/tutorial/s epp-tutorial.md#sample-datasets-default-parameters.]' \
        '--p-threads[The number of threads to use. \[default: 1\]]' \
        {--p-debug,--p-no-debug}'[Collect additional run information to STDOUT for debugging. Temporary directories will not be removed if run fails. \[default: False\]]' \
        '--o-tree[The tree with inserted feature data.]' \
        '--o-placements[Placements Information about the feature placements within the]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_gneiss {
    local line state

    function _commands {
        local -a commands
        commands=(
            'assign-ids:Assigns ids on internal nodes in the tree,'
            'correlation-clustering:Hierarchical clustering using feature'
            'dendrogram-heatmap:Dendrogram heatmap.'
            'gradient-clustering:Hierarchical clustering using gradient'
            'ilr-hierarchical:Isometric Log-ratio Transform applied to a'
            'ilr-phylogenetic:Isometric Log-ratio Transform applied to a'
            'ilr-phylogenetic-differential:Differentially abundant Phylogenetic Log'
            'ilr-phylogenetic-ordination:Ordination through a phylogenetic Isometric'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (assign-ids)
            _qiime_gneiss_assign-ids
            ;;

        (correlation-clustering)
            _qiime_gneiss_correlation-clustering
            ;;

        (dendrogram-heatmap)
            _qiime_gneiss_dendrogram-heatmap
            ;;

        (gradient-clustering)
            _qiime_gneiss_gradient-clustering
            ;;

        (ilr-hierarchical)
            _qiime_gneiss_ilr-hierarchical
            ;;

        (ilr-phylogenetic)
            _qiime_gneiss_ilr-phylogenetic
            ;;

        (ilr-phylogenetic-differential)
            _qiime_gneiss_ilr-phylogenetic-differential
            ;;

        (ilr-phylogenetic-ordination)
            _qiime_gneiss_ilr-phylogenetic-ordination
            ;;

        esac
        ;;
     esac

}

function _qiime_gneiss_assign-ids {
    _arguments \
        '--i-input-table[The input table of counts. \[required\]]' \
        '--i-input-tree[Phylogeny\[Rooted\] The input tree with potential missing ids. \[required\]]' \
        '--o-output-table[A table with features matching the tree tips.]' \
        '--o-output-tree[Hierarchy A tree with uniquely identifying ids. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_gneiss_correlation-clustering {
    _arguments \
        '--i-table[The feature table containing the samples in which the columns will be clustered. \[required\]]' \
        '--p-pseudocount[The value to add to zero counts in the feature table. \[default: 0.5\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_gneiss_dendrogram-heatmap {
    _arguments \
        '--i-table[The feature table that will be plotted as a heatmap. This table is assumed to have strictly positive values. \[required\]]' \
        '--i-tree[A hierarchy of feature identifiers where each]' \
        {--m-metadata-file,--m-metadata-column}'[Categorical metadata column to group the samples.]' \
        '--p-pseudocount[The pseudocount to add to avoid division by zero.]' \
        '--p-ndim[Number of dimensions to highlight. \[default: 10\]]' \
        '--p-method[Specifies how the data should be normalized for display.Options include '\''log'\'' or '\''clr'\'' (default='\''clr'\''). \[default: '\''clr'\''\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_gneiss_gradient-clustering {
    _arguments \
        '--i-table[The feature table containing the samples in which the]' \
        '--i-table[The feature table containing the samples in which the]' \
        {--m-gradient-file,--m-gradient-column}'[Contains gradient values to sort the features and samples. \[required\]]' \
        {--p-weighted,--p-no-weighted}'[Specifies if abundance or presence/absence information should be used to perform the clustering.]' \
        {--p-ignore-missing-samples,--p-no-ignore-missing-samples}'[\[default: False\]]' \
        '--o-clustering[Hierarchy A hierarchy of feature identifiers where each tip]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_gneiss_ilr-hierarchical {
    _arguments \
        '--i-table[The feature table containing the samples in which the ilr transform will be performed. \[required\]]' \
        '--i-tree[A hierarchy of feature identifiers that defines the]' \
        '--p-pseudocount[The value to add to zero counts in the feature table. \[default: 0.5\]]' \
        '--o-balances[The resulting balances from the ilr transform.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_gneiss_ilr-phylogenetic {
    _arguments \
        '--i-table[The feature table containing the samples in which the ilr transform will be performed. \[required\]]' \
        '--i-tree[A rooted phylogeny of feature identifiers that]' \
        '--p-pseudocount[The value to add to zero counts in the feature table. \[default: 0.5\]]' \
        '--o-balances[The resulting balances from the ilr transform.]' \
        '--o-hierarchy[Hierarchy from bifurcated phylogeny]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_gneiss_ilr-phylogenetic-differential {
    _arguments \
        '--i-differential[The differential abundance results in which will be ilr transformed. \[required\]]' \
        '--i-tree[A rooted phylogeny of feature identifiers that defines]' \
        '--o-ilr-differential[Per clade differential abundance results. \[required\]]' \
        '--o-bifurcated-tree[Phylogeny\[Rooted\] Bifurcating phylogeny. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_gneiss_ilr-phylogenetic-ordination {
    _arguments \
        '--i-table[The feature table containing the samples in which the ilr transform will be performed. \[required\]]' \
        '--i-tree[A rooted phylogeny of feature identifiers that]' \
        '--p-pseudocount[The value to add to zero counts in the feature]' \
        '--p-top-k-var[The top k most variable balances. \[default: 10\]]' \
        '--p-clades[The names of clades to focus on (overrides]' \
        '--o-bifurcated-tree[Phylogeny\[Rooted\] Bifurcating phylogeny \[required\]]' \
        '--o-clade-metadata[Metadata specifying clade membership. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_longitudinal {
    local line state

    function _commands {
        local -a commands
        commands=(
            'anova:ANOVA test'
            'feature-volatility:Feature volatility analysis'
            'first-differences:Compute first differences or difference from'
            'first-distances:Compute first distances or distance from baseline'
            'linear-mixed-effects:Linear mixed effects modeling'
            'maturity-index:Microbial maturity index prediction.'
            'nmit:Nonparametric microbial interdependence test'
            'pairwise-differences:Paired difference testing and boxplots'
            'pairwise-distances:Paired pairwise distance testing and boxplots'
            'plot-feature-volatility:Plot longitudinal feature volatility and'
            'volatility:Generate interactive volatility plot'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (anova)
            _qiime_longitudinal_anova
            ;;

        (feature-volatility)
            _qiime_longitudinal_feature-volatility
            ;;

        (first-differences)
            _qiime_longitudinal_first-differences
            ;;

        (first-distances)
            _qiime_longitudinal_first-distances
            ;;

        (linear-mixed-effects)
            _qiime_longitudinal_linear-mixed-effects
            ;;

        (maturity-index)
            _qiime_longitudinal_maturity-index
            ;;

        (nmit)
            _qiime_longitudinal_nmit
            ;;

        (pairwise-differences)
            _qiime_longitudinal_pairwise-differences
            ;;

        (pairwise-distances)
            _qiime_longitudinal_pairwise-distances
            ;;

        (plot-feature-volatility)
            _qiime_longitudinal_plot-feature-volatility
            ;;

        (volatility)
            _qiime_longitudinal_volatility
            ;;

        esac
        ;;
     esac

}

function _qiime_longitudinal_anova {
    _arguments \
        '--p-formula[R-style formula specifying the model. All terms must be present in the sample metadata or metadata-transformable artifacts and can be continuous or categorical metadata columns. Formulae will be in the format "a ~ b + c", where "a" is the metric (dependent variable) and "b" and "c" are independent covariates. Use "+" to add a variable; "+ a:b" to add an interaction between variables a and b; "*" to include a variable and all interactions; and "-" to subtract a particular term (e.g., an interaction term). See https://patsy.readthedocs.io/en/latest/formulas.html for full documentation of valid formula operators. Always enclose formulae in quotes to avoid unpleasant surprises. \[required\]]' \
        '--p-sstype[Type of sum of squares calculation to perform (I, II, or III). \[default: '\''II'\''\]]' \
        '--m-metadata-file[(multiple Sample metadata containing formula terms.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_feature-volatility {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        '--p-state-column[Metadata containing collection time (state) values for each sample. Must contain exclusively numeric values. \[required\]]' \
        '--p-individual-id-column[Metadata column containing IDs for individual subjects. \[optional\]]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-importance-threshold[VALUE Float % Range(0, None,]' \
        '--m-metadata-file[(multiple Sample metadata file containing]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--o-filtered-table[Feature table containing only important features.]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--o-volatility-plot[Interactive volatility plot visualization. \[required\]]' \
        '--o-accuracy-results[Accuracy results visualization. \[required\]]' \
        '--o-sample-estimator[Trained sample regressor. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_first-differences {
    _arguments \
        '--i-table[Feature table to optionally use for computing first differences. \[optional\]]' \
        '--p-state-column[Metadata column containing state (time) variable information. \[required\]]' \
        '--p-individual-id-column[Metadata column containing IDs for individual subjects. \[required\]]' \
        '--p-metric[Numerical metadata or artifact column to test.]' \
        '--p-replicate-handling[Choose how replicate samples are handled. If replicates are detected, "error" causes method to fail; "drop" will discard all replicated samples; "random" chooses one representative at random from among replicates. \[default: '\''error'\''\]]' \
        '--p-baseline[A value listed in the state-column metadata column against which all other states should be compared. Toggles calculation of static differences instead of first differences (which are calculated if no value is given for baseline). If a "baseline" value is provided, sample differences at each state are compared against the baseline state, instead of the previous state. Must be a value listed in the state-column. \[optional\]]' \
        '--m-metadata-file[(multiple Sample metadata file containing]' \
        '--o-first-differences[Series of first differences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_first-distances {
    _arguments \
        '--i-distance-matrix[DistanceMatrix Matrix of distances between pairs of samples.]' \
        '--p-state-column[Metadata column containing state (time) variable information. \[required\]]' \
        '--p-individual-id-column[Metadata column containing IDs for individual subjects. \[required\]]' \
        '--p-baseline[A value listed in the state-column metadata column against which all other states should be compared. Toggles calculation of static distances instead of first distances (which are calculated if no value is given for baseline). If a "baseline" value is provided, sample distances at each state are compared against the baseline state, instead of the previous state. Must be a value listed in the state-column.]' \
        '--p-replicate-handling[Choose how replicate samples are handled. If replicates are detected, "error" causes method to fail; "drop" will discard all replicated samples; "random" chooses one representative at random from among replicates. \[default: '\''error'\''\]]' \
        '--m-metadata-file[(multiple Sample metadata file containing]' \
        '--o-first-distances[Series of first distances. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_linear-mixed-effects {
    _arguments \
        '--i-table[Feature table containing metric. \[optional\]]' \
        '--p-state-column[Metadata column containing state (time) variable information. \[required\]]' \
        '--p-individual-id-column[Metadata column containing IDs for individual subjects. \[required\]]' \
        '--p-metric[Dependent variable column name. Must be a column name located in the metadata or feature table files.]' \
        '--p-group-columns[Comma-separated list (without spaces) of metadata columns to use as independent covariates used to determine mean structure of "metric". \[optional\]]' \
        '--p-random-effects[Comma-separated list (without spaces) of metadata columns to use as independent covariates used to determine the variance and covariance structure (random effects) of "metric". To add a random slope, the same value passed to "state-column" should be passed here. A random intercept for each individual is set by default and does not need to be passed here. \[optional\]]' \
        {--p-lowess,--p-no-lowess}'[Estimate locally weighted scatterplot smoothing. Note that this will eliminate confidence interval plotting. \[default: False\]]' \
        '--p-ci[Size of the confidence interval for the regression]' \
        '--p-formula[R-style formula to use for model specification. A formula must be used if the "metric" parameter is None. Note that the metric and group columns specified in the formula will override metric and group columns that are passed separately as parameters to this method. Formulae will be in the format "a ~ b + c", where "a" is the metric (dependent variable) and "b" and "c" are independent covariates. Use "+" to add a variable; "+ a:b" to add an interaction between variables a and b; "*" to include a variable and all interactions; and "-" to subtract a particular term (e.g., an interaction term). See https://patsy.readthedocs.io/en/latest/formulas.html for full documentation of valid formula operators. Always enclose formulae in quotes to avoid unpleasant surprises. \[optional\]]' \
        '--m-metadata-file[(multiple arguments Sample metadata file containing]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_maturity-index {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        '--p-state-column[Numeric metadata column containing sampling time (state) data to use as prediction target. \[required\]]' \
        '--p-group-by[Categorical metadata column to use for plotting and significance testing between main treatment groups.]' \
        '--p-control[Value of group-by to use as control group. The regression model will be trained using only control group data, and the maturity scores of other groups consequently will be assessed relative to this group.]' \
        '--p-individual-id-column[Optional metadata column containing IDs for individual subjects. Adds individual subject (spaghetti) vectors to volatility charts if a column name is provided. \[optional\]]' \
        '--p-step[If optimize-feature-selection is True, step is the percentage of features to remove at each iteration.]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        {--p-optimize-feature-selection,--p-no-optimize-feature-selection}'[Automatically optimize input feature selection using recursive feature elimination. \[default: False\]]' \
        {--p-stratify,--p-no-stratify}'[Evenly stratify training and test data among metadata categories. If True, all values in column must match at least two samples. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--m-metadata-file[(multiple]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--p-test-size[Range(0.0, 1.0) Fraction of input samples to exclude from training]' \
        '--p-feature-count[Range(0, None) Filter feature table to include top N most important]' \
        '--o-sample-estimator[Trained sample estimator. \[required\]]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--o-predictions[Predicted target values for each input sample.]' \
        '--o-model-summary[Summarized parameter and (if enabled) feature selection information for the trained estimator.]' \
        '--o-accuracy-results[Accuracy results visualization. \[required\]]' \
        '--o-maz-scores[Microbiota-for-age z-score predictions. \[required\]]' \
        '--o-clustermap[Heatmap of important feature abundance at each time point in each group. \[required\]]' \
        '--o-volatility-plots[Interactive volatility plots of MAZ and maturity scores, target (column) predictions, and the sample metadata. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_nmit {
    _arguments \
        '--i-table[Feature table to use for microbial interdependence test. \[required\]]' \
        '--p-individual-id-column[Metadata column containing IDs for individual subjects. \[required\]]' \
        '--p-corr-method[The temporal correlation test to be applied.]' \
        '--p-dist-method[Temporal distance method, see numpy.linalg.norm for details. \[default: '\''fro'\''\]]' \
        '--m-metadata-file[(multiple Sample metadata file containing individual-id-column.]' \
        '--o-distance-matrix[DistanceMatrix The resulting distance matrix. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_pairwise-differences {
    _arguments \
        '--i-table[Feature table to optionally use for paired comparisons. \[optional\]]' \
        '--p-metric[Numerical metadata or artifact column to test.]' \
        '--p-state-column[Metadata column containing state (e.g., Time) across which samples are paired. \[required\]]' \
        '--p-state-1[Baseline state column value. \[required\]]' \
        '--p-state-2[State column value to pair with baseline. \[required\]]' \
        '--p-individual-id-column[Metadata column containing subject IDs to use for pairing samples. WARNING: if replicates exist for an individual ID at either state-1 or state-2, that subject will be dropped and reported in standard output by default. Set replicate_handling="random" to instead randomly select one member. \[required\]]' \
        '--p-group-column[Metadata column on which to separate groups for comparison \[optional\]]' \
        {--p-parametric,--p-no-parametric}'[Perform parametric (ANOVA and t-tests) or non-parametric (Kruskal-Wallis, Wilcoxon, and Mann-Whitney U tests) statistical tests.]' \
        '--p-replicate-handling[Choose how replicate samples are handled. If replicates are detected, "error" causes method to fail; "drop" will discard all replicated samples; "random" chooses one representative at random from among replicates. \[default: '\''error'\''\]]' \
        '--m-metadata-file[(multiple Sample metadata file containing]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_pairwise-distances {
    _arguments \
        '--i-distance-matrix[DistanceMatrix Matrix of distances between pairs of samples.]' \
        '--p-group-column[Metadata column on which to separate groups for comparison \[required\]]' \
        '--p-state-column[Metadata column containing state (e.g., Time) across which samples are paired. \[required\]]' \
        '--p-state-1[Baseline state column value. \[required\]]' \
        '--p-state-2[State column value to pair with baseline. \[required\]]' \
        '--p-individual-id-column[Metadata column containing subject IDs to use for pairing samples. WARNING: if replicates exist for an individual ID at either state-1 or state-2, that subject will be dropped and reported in standard output by default. Set replicate_handling="random" to instead randomly select one member. \[required\]]' \
        {--p-parametric,--p-no-parametric}'[Perform parametric (ANOVA and t-tests) or non-parametric (Kruskal-Wallis, Wilcoxon, and Mann-Whitney U tests) statistical tests.]' \
        '--p-replicate-handling[Choose how replicate samples are handled. If replicates are detected, "error" causes method to fail; "drop" will discard all replicated samples; "random" chooses one representative at random from among replicates. \[default: '\''error'\''\]]' \
        '--m-metadata-file[(multiple Sample metadata file containing]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_plot-feature-volatility {
    _arguments \
        '--i-table[Feature table containing features found in importances. \[required\]]' \
        '--i-importances[Feature importance scores. \[required\]]' \
        '--p-state-column[Metadata column containing state (time) variable information. \[required\]]' \
        '--p-individual-id-column[Metadata column containing IDs for individual subjects. \[optional\]]' \
        '--p-default-group-column[The default metadata column on which to separate groups for comparison (all categorical metadata columns will be available in the visualization).]' \
        '--p-yscale[y-axis scaling strategy to apply. \[default: '\''linear'\''\]]' \
        '--p-importance-threshold[VALUE Float % Range(0, None,]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--m-metadata-file[(multiple Sample metadata file containing]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_longitudinal_volatility {
    _arguments \
        '--i-table[Feature table containing metrics. \[optional\]]' \
        '--p-state-column[Metadata column containing state (time) variable information. \[required\]]' \
        '--p-individual-id-column[Metadata column containing IDs for individual subjects. \[optional\]]' \
        '--p-default-group-column[The default metadata column on which to separate groups for comparison (all categorical metadata columns will be available in the visualization).]' \
        '--p-default-metric[Numeric metadata or artifact column to test by default (all numeric metadata columns will be available in the visualization). \[optional\]]' \
        '--p-yscale[y-axis scaling strategy to apply. \[default: '\''linear'\''\]]' \
        '--m-metadata-file[(multiple Sample metadata file containing]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_metadata {
    local line state

    function _commands {
        local -a commands
        commands=(
            'distance-matrix:Create a distance matrix from a numeric Metadata column'
            'shuffle-groups:Shuffle values in a categorical sample metadata column.'
            'tabulate:Interactively explore Metadata in an HTML table'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (distance-matrix)
            _qiime_metadata_distance-matrix
            ;;

        (shuffle-groups)
            _qiime_metadata_shuffle-groups
            ;;

        (tabulate)
            _qiime_metadata_tabulate
            ;;

        esac
        ;;
     esac

}

function _qiime_metadata_distance-matrix {
    _arguments \
        {--m-metadata-file,--m-metadata-column}'[Numeric metadata column to compute pairwise Euclidean distances from \[required\]]' \
        '--o-distance-matrix[DistanceMatrix \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_metadata_shuffle-groups {
    _arguments \
        {--m-metadata-file,--m-metadata-column}'[Categorical metadata column to shuffle. \[required\]]' \
        '--p-n-columns[The number of shuffled metadata columns to create.]' \
        '--p-column-name-prefix[Prefix to use in naming the shuffled metadata columns. \[default: '\''shuffled.grouping.'\''\]]' \
        '--p-column-value-prefix[Prefix to use in naming the values in the shuffled metadata columns. \[default: '\''fake.group.'\''\]]' \
        '--o-shuffled-groups[Randomized metadata columns \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_metadata_tabulate {
    _arguments \
        '--p-page-size[The maximum number of Metadata records to display per page \[default: 100\]]' \
        '--m-input-file[(multiple The metadata to tabulate.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_phylogeny {
    local line state

    function _commands {
        local -a commands
        commands=(
            'align-to-tree-mafft-fasttree:Build a phylogenetic tree using fasttree and'
            'align-to-tree-mafft-iqtree:Build a phylogenetic tree using iqtree and'
            'align-to-tree-mafft-raxml:Build a phylogenetic tree using raxml and'
            'fasttree:Construct a phylogenetic tree with FastTree.'
            'filter-table:Remove features from table if they'\''re not'
            'filter-tree:Remove features from tree based on metadata'
            'iqtree:Construct a phylogenetic tree with IQ-TREE.'
            'iqtree-ultrafast-bootstrap:Construct a phylogenetic tree with IQ-TREE'
            'midpoint-root:Midpoint root an unrooted phylogenetic tree.'
            'raxml:Construct a phylogenetic tree with RAxML.'
            'raxml-rapid-bootstrap:Construct a phylogenetic tree with bootstrap'
            'robinson-foulds:Calculate Robinson-Foulds distance between'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (align-to-tree-mafft-fasttree)
            _qiime_phylogeny_align-to-tree-mafft-fasttree
            ;;

        (align-to-tree-mafft-iqtree)
            _qiime_phylogeny_align-to-tree-mafft-iqtree
            ;;

        (align-to-tree-mafft-raxml)
            _qiime_phylogeny_align-to-tree-mafft-raxml
            ;;

        (fasttree)
            _qiime_phylogeny_fasttree
            ;;

        (filter-table)
            _qiime_phylogeny_filter-table
            ;;

        (filter-tree)
            _qiime_phylogeny_filter-tree
            ;;

        (iqtree)
            _qiime_phylogeny_iqtree
            ;;

        (iqtree-ultrafast-bootstrap)
            _qiime_phylogeny_iqtree-ultrafast-bootstrap
            ;;

        (midpoint-root)
            _qiime_phylogeny_midpoint-root
            ;;

        (raxml)
            _qiime_phylogeny_raxml
            ;;

        (raxml-rapid-bootstrap)
            _qiime_phylogeny_raxml-rapid-bootstrap
            ;;

        (robinson-foulds)
            _qiime_phylogeny_robinson-foulds
            ;;

        esac
        ;;
     esac

}

function _qiime_phylogeny_align-to-tree-mafft-fasttree {
    _arguments \
        '--i-sequences[The sequences to be used for creating a fasttree based rooted phylogenetic tree. \[required\]]' \
        '--p-mask-max-gap-frequency[The maximum relative frequency of gap characters in a column for the column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive), where 0.0 retains only those columns without gap characters, and 1.0 retains all columns regardless of gap character frequency. This value is used when masking the aligned sequences.]' \
        '--p-mask-min-conservation[The minimum relative frequency of at least one non-gap character in a column for that column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive). For example, if a value of 0.4 is provided, a column will only be retained if it contains at least one character that is present in at least 40% of the sequences. This value is used when masking the aligned sequences.]' \
        {--p-parttree,--p-no-parttree}'[This flag is required if the number of sequences being aligned are larger than 1000000. Disabled by default. \[default: False\]]' \
        '--o-alignment[The aligned sequences. \[required\]]' \
        '--o-masked-alignment[The masked alignment. \[required\]]' \
        '--o-tree[The unrooted phylogenetic tree.]' \
        '--o-rooted-tree[Phylogeny\[Rooted\] The rooted phylogenetic tree. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_align-to-tree-mafft-iqtree {
    _arguments \
        '--i-sequences[The sequences to be used for creating a iqtree based rooted phylogenetic tree. \[required\]]' \
        {--p-fast,--p-no-fast}'[Fast search to resemble FastTree. \[default: False\]]' \
        '--p-alrt[Single branch test method. Number of bootstrap   Range(1000, None) replicates to perform an SH-like approximate]' \
        '--p-stop-iter[Number of unsuccessful iterations to stop. If not   Range(1, None) set, program defaults will be used. See IQ-TREE]' \
        '--p-perturb-nni-strength[Range(0.01, 1.0) Perturbation strength for randomized NNI. If not]' \
        '--p-mask-max-gap-frequency[The maximum relative frequency of gap characters in a column for the column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive), where 0.0 retains only those columns without gap characters, and 1.0 retains all columns regardless of gap character frequency. This value is used when masking the aligned sequences.]' \
        '--p-mask-min-conservation[The minimum relative frequency of at least one non-gap character in a column for that column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive). For example, if a value of 0.4 is provided, a column will only be retained if it contains at least one character that is present in at least 40% of the sequences. This value is used when masking the aligned sequences.]' \
        '--p-seed[Random number seed for the iqtree parsimony starting tree. This allows you to reproduce tree results. If not supplied then one will be randomly chosen. \[optional\]]' \
        '--o-alignment[The aligned sequences. \[required\]]' \
        '--o-masked-alignment[The masked alignment. \[required\]]' \
        '--o-tree[The unrooted phylogenetic tree.]' \
        '--o-rooted-tree[Phylogeny\[Rooted\] The rooted phylogenetic tree. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_align-to-tree-mafft-raxml {
    _arguments \
        '--i-sequences[The sequences to be used for creating a iqtree based rooted phylogenetic tree. \[required\]]' \
        '--p-mask-max-gap-frequency[The maximum relative frequency of gap characters in a column for the column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive), where 0.0 retains only those columns without gap characters, and 1.0 retains all columns regardless of gap character frequency. This value is used when masking the aligned sequences.]' \
        '--p-mask-min-conservation[The minimum relative frequency of at least one non-gap character in a column for that column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive). For example, if a value of 0.4 is provided, a column will only be retained if it contains at least one character that is present in at least 40% of the sequences. This value is used when masking the aligned sequences.]' \
        {--p-parttree,--p-no-parttree}'[This flag is required if the number of sequences being aligned are larger than 1000000. Disabled by default. NOTE: if using this option, it is recomended that only the CAT-based substitution models of RAxML be considered for this pipeline.]' \
        '--p-seed[Random number seed for the parsimony starting tree. This allows you to reproduce tree results. If not supplied then one will be randomly chosen.]' \
        '--p-raxml-version[Select a specific CPU optimization of RAxML to use. The SSE3 versions will run approximately 40% faster than the standard version. The AVX2 version will run 10-30% faster than the SSE3 version.]' \
        '--o-alignment[The aligned sequences. \[required\]]' \
        '--o-masked-alignment[The masked alignment. \[required\]]' \
        '--o-tree[The unrooted phylogenetic tree.]' \
        '--o-rooted-tree[Phylogeny\[Rooted\] The rooted phylogenetic tree. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_fasttree {
    _arguments \
        '--i-alignment[Aligned sequences to be used for phylogenetic reconstruction. \[required\]]' \
        '--o-tree[The resulting phylogenetic tree.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_filter-table {
    _arguments \
        '--i-tree[Tree where tip identifiers are the feature identifiers that should be retained in the table. \[required\]]' \
        '--i-table[Feature table that features should be filtered from.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_filter-tree {
    _arguments \
        '--i-tree[Tree that should be filtered \[required\]]' \
        '--p-where[SQLite WHERE clause specifying sample metadata criteria that must be met to be included in the filtered feature table. If not provided, all samples in `metadata` that are also in the feature table will be retained. \[optional\]]' \
        '--m-metadata-file[(multiple Feature metadata to use with the '\''where'\'' statement or]' \
        '--o-filtered-tree[The resulting phylogenetic tree. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_iqtree {
    _arguments \
        '--i-alignment[Aligned sequences to be used for phylogenetic reconstruction. \[required\]]' \
        '--p-seed[Random number seed. If not set, program defaults]' \
        '--p-n-runs[Number of indepedent runs. Multiple independent]' \
        '--p-n-init-pars-trees[Range(1, None) Number of initial parsimony trees. If not set,]' \
        '--p-n-top-init-trees[Range(1, None) Number of top initial trees. If not set, program]' \
        '--p-n-best-retain-trees[Range(1, None) Number of best trees retained during search. If not]' \
        '--p-n-iter[Fix number of iterations to stop. If not set,]' \
        '--p-stop-iter[Number of unsuccessful iterations to stop. If not]' \
        '--p-perturb-nni-strength[Range(0.01, 1.0) Perturbation strength for randomized NNI. If not]' \
        '--p-spr-radius[Radius for parsimony SPR search. If not set,]' \
        {--p-allnni,--p-no-allnni}'[Perform more thorough NNI search. \[default: False\]]' \
        {--p-fast,--p-no-fast}'[Fast search to resemble FastTree. \[default: False\]]' \
        '--p-alrt[Single branch test method. Number of bootstrap]' \
        {--p-abayes,--p-no-abayes}'[Single branch test method. Approximate Bayes test.]' \
        '--p-lbp[Single branch test method. Number of bootstrap]' \
        {--p-safe,--p-no-safe}'[Safe likelihood kernel to avoid numerical]' \
        '--o-tree[The resulting phylogenetic tree.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_iqtree-ultrafast-bootstrap {
    _arguments \
        '--i-alignment[Aligned sequences to be used for phylogenetic reconstruction. \[required\]]' \
        '--p-seed[Random number seed. If not set, program defaults]' \
        '--p-n-runs[Number of indepedent runs. Multiple independent]' \
        '--p-bootstrap-replicates[Range(1000, None) The number of bootstrap searches to perform.]' \
        '--p-n-init-pars-trees[Range(1, None) Number of initial parsimony trees. If not set,]' \
        '--p-n-top-init-trees[Range(1, None) Number of top initial trees. If not set, program]' \
        '--p-n-best-retain-trees[Range(1, None) Number of best trees retained during search. If not]' \
        '--p-stop-iter[Number of unsuccessful iterations to stop. If not]' \
        '--p-perturb-nni-strength[Range(0.01, 1.0) Perturbation strength for randomized NNI. If not]' \
        '--p-spr-radius[Radius for parsimony SPR search. If not set,]' \
        '--p-n-max-ufboot-iter[Range(1, None) Maximum number of iterations. If not set, program]' \
        '--p-n-ufboot-steps[Range(1, None) Number of iterations for UFBoot stopping rule. If]' \
        '--p-min-cor-ufboot[Range(0.51, 0.99) Minimum correlation coefficient. If not set,]' \
        '--p-ep-break-ufboot[Range(0.01, 0.99) Epsilon value to break tie. If not set, program]' \
        {--p-allnni,--p-no-allnni}'[Perform more thorough NNI search. \[default: False\]]' \
        '--p-alrt[Single branch test method. Number of bootstrap]' \
        {--p-abayes,--p-no-abayes}'[Single branch test method. Performs an approximate]' \
        '--p-lbp[Single branch test method. Number of bootstrap]' \
        {--p-bnni,--p-no-bnni}'[Optimize UFBoot trees by NNI on bootstrap]' \
        {--p-safe,--p-no-safe}'[Safe likelihood kernel to avoid numerical]' \
        '--o-tree[The resulting phylogenetic tree.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_midpoint-root {
    _arguments \
        '--i-tree[The phylogenetic tree to be rooted. \[required\]]' \
        '--o-rooted-tree[Phylogeny\[Rooted\] The rooted phylogenetic tree. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_raxml {
    _arguments \
        '--i-alignment[Aligned sequences to be used for phylogenetic reconstruction. \[required\]]' \
        '--p-seed[Random number seed for the parsimony starting tree. This allows you to reproduce tree results. If not supplied then one will be randomly chosen.]' \
        '--p-n-searches[The number of independent maximum likelihood]' \
        '--p-n-threads[The number of threads to use for multithreaded]' \
        '--p-raxml-version[Select a specific CPU optimization of RAxML to use. The SSE3 versions will run approximately 40% faster than the standard version. The AVX2 version will run 10-30% faster than the SSE3 version.]' \
        '--o-tree[The resulting phylogenetic tree.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_raxml-rapid-bootstrap {
    _arguments \
        '--i-alignment[Aligned sequences to be used for phylogenetic reconstruction. \[required\]]' \
        '--p-seed[Random number seed for the parsimony starting tree. This allows you to reproduce tree results. If not supplied then one will be randomly chosen.]' \
        '--p-rapid-bootstrap-seed[Specify a random seed for rapid bootstrapping. This allows you to reproduce rapid bootstrap results. If not supplied then one will be randomly chosen.]' \
        '--p-bootstrap-replicates[INTEGER]' \
        '--p-n-threads[The number of threads to use for multithreaded]' \
        '--p-raxml-version[Select a specific CPU optimization of RAxML to use. The SSE3 versions will run approximately 40% faster than the standard version. The AVX2 version will run 10-30% faster than the SSE3 version.]' \
        '--o-tree[The resulting phylogenetic tree.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_phylogeny_robinson-foulds {
    _arguments \
        '--i-trees[Phylogenetic trees to compare with Robinson-Foulds. Rooting information and branch lengths are ignored by this metric. \[required\]]' \
        '--p-labels[Labels to use for the tree names in the distance]' \
        '--p-missing-tips[How to handle tips that are not shared between trees. "error" will raise an error if the set of tips is not identical between all input trees. "intersect-all" will remove tips that are not shared between all trees before computing distances beteen trees. \[default: '\''error'\''\]]' \
        '--o-distance-matrix[DistanceMatrix The distances between trees as a symmetric matrix.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_quality-control {
    local line state

    function _commands {
        local -a commands
        commands=(
            'bowtie2-build:Build bowtie2 index from reference sequences.'
            'evaluate-composition:Evaluate expected vs. observed taxonomic composition'
            'evaluate-seqs:Compare query (observed) vs. reference (expected)'
            'evaluate-taxonomy:Evaluate expected vs. observed taxonomic assignments'
            'exclude-seqs:Exclude sequences by alignment'
            'filter-reads:Filter demultiplexed sequences by alignment to'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (bowtie2-build)
            _qiime_quality-control_bowtie2-build
            ;;

        (evaluate-composition)
            _qiime_quality-control_evaluate-composition
            ;;

        (evaluate-seqs)
            _qiime_quality-control_evaluate-seqs
            ;;

        (evaluate-taxonomy)
            _qiime_quality-control_evaluate-taxonomy
            ;;

        (exclude-seqs)
            _qiime_quality-control_exclude-seqs
            ;;

        (filter-reads)
            _qiime_quality-control_filter-reads
            ;;

        esac
        ;;
     esac

}

function _qiime_quality-control_bowtie2-build {
    _arguments \
        '--i-sequences[Reference sequences used to build bowtie2 index.]' \
        '--p-n-threads[Number of threads to launch]' \
        '--o-database[Bowtie2 index.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_quality-control_evaluate-composition {
    _arguments \
        '--i-expected-features[Expected feature compositions \[required\]]' \
        '--i-observed-features[Observed feature compositions \[required\]]' \
        '--p-depth[Maximum depth of semicolon-delimited taxonomic ranks to test (e.g., 1 = root, 7 = species for the greengenes reference sequence database). \[default: 7\]]' \
        {--p-plot-tar,--p-no-plot-tar}'[Plot taxon accuracy rate (TAR) on score plot. TAR is the number of true positive features divided by the total number of observed features (TAR = true positives / (true positives + false positives)). \[default: True\]]' \
        {--p-plot-tdr,--p-no-plot-tdr}'[Plot taxon detection rate (TDR) on score plot. TDR is the number of true positive features divided by the total number of expected features (TDR = true positives / (true positives + false negatives)). \[default: True\]]' \
        {--p-plot-r-value,--p-no-plot-r-value}'[Plot expected vs. observed linear regression r value on score plot. \[default: False\]]' \
        {--p-plot-r-squared,--p-no-plot-r-squared}'[Plot expected vs. observed linear regression r-squared value on score plot. \[default: True\]]' \
        {--p-plot-bray-curtis,--p-no-plot-bray-curtis}'[Plot expected vs. observed Bray-Curtis dissimilarity scores on score plot. \[default: False\]]' \
        {--p-plot-jaccard,--p-no-plot-jaccard}'[Plot expected vs. observed Jaccard distances scores on score plot. \[default: False\]]' \
        {--p-plot-observed-features,--p-no-plot-observed-features}'[Plot observed features count on score plot.]' \
        {--p-plot-observed-features-ratio,--p-no-plot-observed-features-ratio}'[Plot ratio of observed:expected features on score plot. \[default: True\]]' \
        {--m-metadata-file,--m-metadata-column}'[Optional sample metadata that maps observed-features sample IDs to expected-features sample IDs. \[optional\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_quality-control_evaluate-seqs {
    _arguments \
        '--i-query-sequences[Sequences to test for exclusion \[required\]]' \
        '--i-reference-sequences[Reference sequences to align against feature sequences]' \
        {--p-show-alignments,--p-no-show-alignments}'[Option to plot pairwise alignments of query sequences and their top hits. \[default: False\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_quality-control_evaluate-taxonomy {
    _arguments \
        '--i-expected-taxa[Expected taxonomic assignments \[required\]]' \
        '--i-observed-taxa[Observed taxonomic assignments \[required\]]' \
        '--i-feature-table[Optional feature table containing relative frequency of each feature, used to weight accuracy scores by frequency. Must contain all features found in expected and/or observed taxa. Features found in the table but not the expected/observed taxa will be dropped prior to analysis. \[optional\]]' \
        '--p-depth[Maximum depth of semicolon-delimited taxonomic ranks to test (e.g., 1 = root, 7 = species for the greengenes reference sequence database). \[required\]]' \
        {--p-require-exp-ids,--p-no-require-exp-ids}'[Require that all features found in observed taxa must be found in expected taxa or raise error.]' \
        {--p-require-obs-ids,--p-no-require-obs-ids}'[Require that all features found in expected taxa must be found in observed taxa or raise error.]' \
        '--p-sample-id[Optional sample ID to use for extracting frequency data from feature table, and for labeling accuracy results. If no sample-id is provided, feature frequencies are derived from the sum of all samples present in the feature table. \[optional\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_quality-control_exclude-seqs {
    _arguments \
        '--i-query-sequences[Sequences to test for exclusion \[required\]]' \
        '--i-reference-sequences[Reference sequences to align against feature sequences \[required\]]' \
        '--p-perc-identity[Reject match if percent identity to reference is lower. Must be in range \[0.0, 1.0\] \[default: 0.97\]]' \
        '--p-evalue[BLAST expectation (E) value threshold for saving hits. Reject if E value is higher than threshold. This threshold is disabled by default. \[optional\]]' \
        '--p-perc-query-aligned[Percent of query sequence that must align to reference in order to be accepted as a hit.]' \
        '--p-threads[Number of jobs to execute. Only applies to vsearch]' \
        '--o-sequence-hits[Subset of feature sequences that align to reference sequences \[required\]]' \
        '--o-sequence-misses[Subset of feature sequences that do not align to reference sequences \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_quality-control_filter-reads {
    _arguments \
        '--i-database[Bowtie2Index \[required\]]' \
        '--p-n-threads[Number of alignment threads to launch.]' \
        '--p-mode[Bowtie2 alignment settings. See bowtie2 manual for more details. \[default: '\''local'\''\]]' \
        '--p-ref-gap-open-penalty[INTEGER]' \
        '--p-ref-gap-ext-penalty[INTEGER]' \
        {--p-exclude-seqs,--p-no-exclude-seqs}'[Exclude sequences that align to reference. Set this option to False to exclude sequences that do not align to the reference database. \[default: True\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_quality-filter {
    _arguments \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_sample-classifier {
    local line state

    function _commands {
        local -a commands
        commands=(
            'classify-samples:Train and test a cross-validated supervised'
            'classify-samples-from-dist:Run k-nearest-neighbors on a labeled distance'
            'classify-samples-ncv:Nested cross-validated supervised learning'
            'confusion-matrix:Make a confusion matrix from sample classifier'
            'fit-classifier:Fit a supervised learning classifier.'
            'fit-regressor:Fit a supervised learning regressor.'
            'heatmap:Generate heatmap of important features.'
            'metatable:Convert (and merge) positive numeric metadata'
            'predict-classification:Use trained classifier to predict target values'
            'predict-regression:Use trained regressor to predict target values'
            'regress-samples:Train and test a cross-validated supervised'
            'regress-samples-ncv:Nested cross-validated supervised learning'
            'scatterplot:Make 2D scatterplot and linear regression of'
            'split-table:Split a feature table into training and testing'
            'summarize:Summarize parameter and feature extraction'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (classify-samples)
            _qiime_sample-classifier_classify-samples
            ;;

        (classify-samples-from-dist)
            _qiime_sample-classifier_classify-samples-from-dist
            ;;

        (classify-samples-ncv)
            _qiime_sample-classifier_classify-samples-ncv
            ;;

        (confusion-matrix)
            _qiime_sample-classifier_confusion-matrix
            ;;

        (fit-classifier)
            _qiime_sample-classifier_fit-classifier
            ;;

        (fit-regressor)
            _qiime_sample-classifier_fit-regressor
            ;;

        (heatmap)
            _qiime_sample-classifier_heatmap
            ;;

        (metatable)
            _qiime_sample-classifier_metatable
            ;;

        (predict-classification)
            _qiime_sample-classifier_predict-classification
            ;;

        (predict-regression)
            _qiime_sample-classifier_predict-regression
            ;;

        (regress-samples)
            _qiime_sample-classifier_regress-samples
            ;;

        (regress-samples-ncv)
            _qiime_sample-classifier_regress-samples-ncv
            ;;

        (scatterplot)
            _qiime_sample-classifier_scatterplot
            ;;

        (split-table)
            _qiime_sample-classifier_split-table
            ;;

        (summarize)
            _qiime_sample-classifier_summarize
            ;;

        esac
        ;;
     esac

}

function _qiime_sample-classifier_classify-samples {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        {--m-metadata-file,--m-metadata-column}'[Categorical metadata column to use as prediction target. \[required\]]' \
        '--p-step[If optimize-feature-selection is True, step is the percentage of features to remove at each iteration.]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-optimize-feature-selection,--p-no-optimize-feature-selection}'[Automatically optimize input feature selection using recursive feature elimination. \[default: False\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-test-size[Range(0.0, 1.0) Fraction of input samples to exclude from training set]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--o-sample-estimator[Trained sample estimator. \[required\]]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--o-predictions[Predicted target values for each input sample.]' \
        '--o-model-summary[Summarized parameter and (if enabled) feature selection information for the trained estimator.]' \
        '--o-accuracy-results[Accuracy results visualization. \[required\]]' \
        '--o-probabilities[Predicted class probabilities for each input sample.]' \
        '--o-heatmap[A heatmap of the top 50 most important features from the table. \[required\]]' \
        '--o-training-targets[Series containing true target values of train samples]' \
        '--o-test-targets[Series containing true target values of test samples]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_classify-samples-from-dist {
    _arguments \
        '--i-distance-matrix[DistanceMatrix a distance matrix \[required\]]' \
        '--p-k[Number of nearest neighbors \[default: 1\]]' \
        '--p-cv[Number of k-fold cross-validations to perform.   Range(1, None) \[default: 5\]]' \
        '--p-n-jobs[Number of jobs to run in parallel.         \[default: 1\],--p-palette TEXT Choices('\''YellowOrangeBrown'\'', '\''YellowOrangeRed'\'',   '\''OrangeRed'\'', '\''PurpleRed'\'', '\''RedPurple'\'', '\''BluePurple'\'', '\''GreenBlue'\'', '\''PurpleBlue'\'', '\''YellowGreen'\'', '\''summer'\'', '\''copper'\'', '\''viridis'\'', '\''cividis'\'', '\''plasma'\'', '\''inferno'\'', '\''magma'\'', '\''sirocco'\'', '\''drifting'\'', '\''melancholy'\'', '\''enigma'\'', '\''eros'\'', '\''spectre'\'', '\''ambition'\'', '\''mysteriousstains'\'', '\''daydream'\'', '\''solano'\'', '\''navarro'\'', '\''dandelions'\'', '\''deepblue'\'', '\''verve'\'', '\''greyscale'\'')]' \
        {--m-metadata-file,--m-metadata-column}'[Categorical metadata column to use as prediction target. \[required\]]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--o-predictions[leave one out predictions for each sample \[required\]]' \
        '--o-accuracy-results[Accuracy results visualization. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_classify-samples-ncv {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        {--m-metadata-file,--m-metadata-column}'[Categorical metadata column to use as prediction target. \[required\]]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--o-predictions[Predicted target values for each input sample.]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--o-probabilities[Predicted class probabilities for each input sample.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_confusion-matrix {
    _arguments \
        '--i-predictions[Predicted values to plot on x axis. Should be predictions of categorical data produced by a sample classifier. \[required\]]' \
        '--i-probabilities[Predicted class probabilities for each input sample.]' \
        {--m-truth-file,--m-truth-column}'[Metadata column (true values) to plot on y axis.]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_fit-classifier {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        {--m-metadata-file,--m-metadata-column}'[Numeric metadata column to use as prediction target.]' \
        '--p-step[If optimize-feature-selection is True, step is the percentage of features to remove at each iteration.]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-optimize-feature-selection,--p-no-optimize-feature-selection}'[Automatically optimize input feature selection using recursive feature elimination. \[default: False\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--o-sample-estimator[Trained sample classifier. \[required\]]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_fit-regressor {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        {--m-metadata-file,--m-metadata-column}'[Numeric metadata column to use as prediction target.]' \
        '--p-step[If optimize-feature-selection is True, step is the percentage of features to remove at each iteration.]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-optimize-feature-selection,--p-no-optimize-feature-selection}'[Automatically optimize input feature selection using recursive feature elimination. \[default: False\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--o-sample-estimator[\[required\]]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_heatmap {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        '--i-importance[Feature importances. \[required\]]' \
        '--m-sample-metadata-file[METADATA]' \
        '--m-sample-metadata-column[Sample metadata column to use for sample labeling or grouping. \[optional\]]' \
        '--m-feature-metadata-file[METADATA]' \
        '--m-feature-metadata-column[Feature metadata (e.g., taxonomy) to use for labeling features in the heatmap. \[optional\]]' \
        '--p-importance-threshold[NUMBER]' \
        {--p-group-samples,--p-no-group-samples}'[Group samples by sample metadata. \[default: False\]]' \
        {--p-normalize,--p-no-normalize}'[Normalize the feature table by adding a psuedocount of 1 and then taking the log10 of the table.]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''ignore'\''\]]' \
        '--p-cluster[Specify which axes to cluster. \[default: '\''features'\''\]]' \
        '--p-feature-count[Range(0, None) Filter feature table to include top N most important]' \
        '--o-heatmap[Heatmap of important features. \[required\]]' \
        '--o-filtered-table[Filtered feature table containing data displayed in heatmap. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_metatable {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[optional\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''ignore'\''\]]' \
        {--p-drop-all-unique,--p-no-drop-all-unique}'[If True, columns that contain a unique value for every ID will be dropped. \[default: False\]]' \
        '--m-metadata-file[(multiple Metadata file to convert to feature table.]' \
        '--o-converted-table[Converted feature table \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_predict-classification {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        '--i-sample-estimator[Sample classifier trained with fit_classifier.]' \
        '--p-n-jobs[Number of jobs to run in parallel.   \[default: 1\]]' \
        '--o-predictions[Predicted target values for each input sample.]' \
        '--o-probabilities[Predicted class probabilities for each input sample.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_predict-regression {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        '--i-sample-estimator[Sample regressor trained with fit_regressor. \[required\]]' \
        '--p-n-jobs[Number of jobs to run in parallel.   \[default: 1\]]' \
        '--o-predictions[Predicted target values for each input sample.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_regress-samples {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        {--m-metadata-file,--m-metadata-column}'[Numeric metadata column to use as prediction target.]' \
        '--p-step[If optimize-feature-selection is True, step is the percentage of features to remove at each iteration.]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-optimize-feature-selection,--p-no-optimize-feature-selection}'[Automatically optimize input feature selection using recursive feature elimination. \[default: False\]]' \
        {--p-stratify,--p-no-stratify}'[Evenly stratify training and test data among metadata categories. If True, all values in column must match at least two samples. \[default: False\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-test-size[Range(0.0, 1.0) Fraction of input samples to exclude from training set]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--o-sample-estimator[Trained sample estimator. \[required\]]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--o-predictions[Predicted target values for each input sample.]' \
        '--o-model-summary[Summarized parameter and (if enabled) feature selection information for the trained estimator.]' \
        '--o-accuracy-results[Accuracy results visualization. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_regress-samples-ncv {
    _arguments \
        '--i-table[Feature table containing all features that should be used for target prediction. \[required\]]' \
        {--m-metadata-file,--m-metadata-column}'[Numeric metadata column to use as prediction target.]' \
        '--p-cv[Number of k-fold cross-validations to perform.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        '--p-n-jobs[Number of jobs to run in parallel. \[default: 1\]]' \
        {--p-stratify,--p-no-stratify}'[Evenly stratify training and test data among metadata categories. If True, all values in column must match at least two samples. \[default: False\]]' \
        {--p-parameter-tuning,--p-no-parameter-tuning}'[Automatically tune hyperparameters using random grid search. \[default: False\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-n-estimators[Range(1, None) Number of trees to grow for estimation. More trees]' \
        '--o-predictions[Predicted target values for each input sample.]' \
        '--o-feature-importance[Importance of each input feature to model accuracy.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_scatterplot {
    _arguments \
        '--i-predictions[Predicted values to plot on y axis. Must be predictions of numeric data produced by a sample regressor. \[required\]]' \
        {--m-truth-file,--m-truth-column}'[Metadata column (true values) to plot on x axis.]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_split-table {
    _arguments \
        {--m-metadata-file,--m-metadata-column}'[Numeric metadata column to use as prediction target.]' \
        '--p-random-state[Seed used by random number generator. \[optional\]]' \
        {--p-stratify,--p-no-stratify}'[Evenly stratify training and test data among metadata categories. If True, all values in column must match at least two samples. \[default: True\]]' \
        '--p-missing-samples[How to handle missing samples in metadata. "error" will fail if missing samples are detected. "ignore" will cause the feature table and metadata to be filtered, so that only samples found in both files are retained. \[default: '\''error'\''\]]' \
        '--p-test-size[Range(0.0, 1.0) Fraction of input samples to exclude from training set]' \
        '--o-training-targets[Series containing true target values of train samples]' \
        '--o-test-targets[Series containing true target values of test samples]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_sample-classifier_summarize {
    _arguments \
        '--i-sample-estimator[ARTIFACT SampleEstimator\[Classifier | Regressor\] Sample estimator trained with fit_classifier or fit_regressor. \[required\]]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_taxa {
    local line state

    function _commands {
        local -a commands
        commands=(
            'barplot:Visualize taxonomy with an interactive bar plot'
            'collapse:Collapse features by their taxonomy at the specified level'
            'filter-seqs:Taxonomy-based feature sequence filter.'
            'filter-table:Taxonomy-based feature table filter.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (barplot)
            _qiime_taxa_barplot
            ;;

        (collapse)
            _qiime_taxa_collapse
            ;;

        (filter-seqs)
            _qiime_taxa_filter-seqs
            ;;

        (filter-table)
            _qiime_taxa_filter-table
            ;;

        esac
        ;;
     esac

}

function _qiime_taxa_barplot {
    _arguments \
        '--i-table[Feature table to visualize at various taxonomic levels. \[required\]]' \
        '--i-taxonomy[Taxonomic annotations for features in the provided feature table. All features in the feature table must have a corresponding taxonomic annotation. Taxonomic annotations that are not present in the feature table will be ignored. \[required\]]' \
        '--m-metadata-file[(multiple The sample metadata.]' \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_taxa_collapse {
    _arguments \
        '--i-table[Feature table to be collapsed. \[required\]]' \
        '--i-taxonomy[Taxonomic annotations for features in the provided feature table. All features in the feature table must have a corresponding taxonomic annotation. Taxonomic annotations that are not present in the feature table will be ignored. \[required\]]' \
        '--p-level[The taxonomic level at which the features should be collapsed. All ouput features will have exactly this many levels of taxonomic annotation. \[required\]]' \
        '--o-collapsed-table[The resulting feature table, where all features are now taxonomic annotations with the user-specified number of levels. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_taxa_filter-seqs {
    _arguments \
        '--i-sequences[Feature sequences to be filtered. \[required\]]' \
        '--i-taxonomy[Taxonomic annotations for features in the provided feature sequences. All features in the feature sequences must have a corresponding taxonomic annotation. Taxonomic annotations for features that are not present in the feature sequences will be ignored. \[required\]]' \
        '--p-include[One or more search terms that indicate which taxa should be included in the resulting sequences. If providing more than one term, terms should be delimited by the query-delimiter character. By default, all taxa will be included. \[optional\]]' \
        '--p-exclude[One or more search terms that indicate which taxa should be excluded from the resulting sequences. If providing more than one term, terms should be delimited by the query-delimiter character. By default, no taxa will be excluded. \[optional\]]' \
        '--p-query-delimiter[The string used to delimit multiple search terms provided to include or exclude. This parameter should only need to be modified if the default delimiter (a comma) is used in the provided taxonomic annotations. \[default: '\'','\''\]]' \
        '--p-mode[Mode for determining if a search term matches a taxonomic annotation. "contains" requires that the annotation has the term as a substring; "exact" requires that the annotation is a perfect match to a search term. \[default: '\''contains'\''\]]' \
        '--o-filtered-sequences[The taxonomy-filtered feature sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_taxa_filter-table {
    _arguments \
        '--i-table[Feature table to be filtered. \[required\]]' \
        '--i-taxonomy[Taxonomic annotations for features in the provided feature table. All features in the feature table must have a corresponding taxonomic annotation. Taxonomic annotations for features that are not present in the feature table will be ignored. \[required\]]' \
        '--p-include[One or more search terms that indicate which taxa should be included in the resulting table. If providing more than one term, terms should be delimited by the query-delimiter character. By default, all taxa will be included. \[optional\]]' \
        '--p-exclude[One or more search terms that indicate which taxa should be excluded from the resulting table. If providing more than one term, terms should be delimited by the query-delimiter character. By default, no taxa will be excluded. \[optional\]]' \
        '--p-query-delimiter[The string used to delimit multiple search terms provided to include or exclude. This parameter should only need to be modified if the default delimiter (a comma) is used in the provided taxonomic annotations.]' \
        '--p-mode[Mode for determining if a search term matches a taxonomic annotation. "contains" requires that the annotation has the term as a substring; "exact" requires that the annotation is a perfect match to a search term. \[default: '\''contains'\''\]]' \
        '--o-filtered-table[The taxonomy-filtered feature table. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}


function _qiime_vsearch {
    local line state

    function _commands {
        local -a commands
        commands=(
            'cluster-features-de-novo:De novo clustering of features.'
            'dereplicate-sequences:Dereplicate sequences.'
            'fastq-stats:Fastq stats with vsearch.'
            'merge-pairs:Merge paired-end reads.'
            'uchime-denovo:De novo chimera filtering with vsearch.'
            'uchime-ref:Reference-based chimera filtering with'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[Show the version and exit.]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (cluster-features-de-novo)
            _qiime_vsearch_cluster-features-de-novo
            ;;

        (dereplicate-sequences)
            _qiime_vsearch_dereplicate-sequences
            ;;

        (fastq-stats)
            _qiime_vsearch_fastq-stats
            ;;

        (merge-pairs)
            _qiime_vsearch_merge-pairs
            ;;

        (uchime-denovo)
            _qiime_vsearch_uchime-denovo
            ;;

        (uchime-ref)
            _qiime_vsearch_uchime-ref
            ;;

        esac
        ;;
     esac

}

function _qiime_vsearch_cluster-features-de-novo {
    _arguments \
        '--i-sequences[The sequences corresponding to the features in table. \[required\]]' \
        '--i-table[The feature table to be clustered. \[required\]]' \
        '--p-threads[The number of threads to use for computation. Passing 0 will launch one thread per CPU core.]' \
        '--o-clustered-table[The table following clustering of features.]' \
        '--o-clustered-sequences[Sequences representing clustered features.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_vsearch_dereplicate-sequences {
    _arguments \
        '--i-sequences[|   SampleData\[SequencesWithQuality\] | SampleData\[JoinedSequencesWithQuality\]]' \
        '--i-sequences[|   SampleData\[SequencesWithQuality\] | SampleData\[JoinedSequencesWithQuality\]]' \
        {--p-derep-prefix,--p-no-derep-prefix}'[Merge sequences with identical prefixes. If a sequence is identical to the prefix of two or more longer sequences, it is clustered with the shortest of them. If they are equally long, it is clustered with the most abundant. \[default: False\]]' \
        '--p-min-seq-length[Range(1, None) Discard sequences shorter than this integer.]' \
        '--p-min-unique-size[Range(1, None) Discard sequences with a post-dereplication]' \
        '--o-dereplicated-table[The table of dereplicated sequences. \[required\]]' \
        '--o-dereplicated-sequences[The dereplicated sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_vsearch_fastq-stats {
    _arguments \
        '--o-visualization[\[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_vsearch_merge-pairs {
    _arguments \
        '--i-demultiplexed-seqs[ARTIFACT SampleData\[PairedEndSequencesWithQuality\] The demultiplexed paired-end sequences to be merged.]' \
        '--p-truncqual[Truncate sequences at the first base with the]' \
        '--p-minlen[Sequences shorter than minlen after truncation are]' \
        '--p-maxns[Sequences with more than maxns N characters are]' \
        {--p-allowmergestagger,--p-no-allowmergestagger}'[Allow merging of staggered read pairs.]' \
        '--p-minovlen[Minimum length of the area of overlap between reads]' \
        '--p-maxdiffs[Maximum number of mismatches in the area of overlap]' \
        '--p-minmergelen[Range(0, None) Minimum length of the merged read to be retained.]' \
        '--p-maxmergelen[Range(0, None) Maximum length of the merged read to be retained.]' \
        '--p-maxee[Maximum number of expected errors in the merged read]' \
        '--p-threads[The number of threads to use for computation. Does]' \
        '--o-merged-sequences[The merged sequences. \[required\]]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_vsearch_uchime-denovo {
    _arguments \
        '--i-sequences[The feature sequences to be chimera-checked.]' \
        '--i-table[Feature table (used for computing total feature abundances). \[required\]]' \
        '--p-dn[No vote pseudo-count, corresponding to the]' \
        '--p-mindiffs[Minimum number of differences per segment.]' \
        '--p-mindiv[Minimum divergence from closest parent.]' \
        '--p-minh[Minimum score (h). Increasing this value tends to reduce the number of false positives and to decrease sensitivity. \[default: 0.28\]]' \
        '--p-xn[No vote weight, corresponding to the parameter beta in the scoring function. \[default: 8.0\]]' \
        '--o-chimeras[The chimeric sequences. \[required\]]' \
        '--o-nonchimeras[The non-chimeric sequences. \[required\]]' \
        '--o-stats[Summary statistics from chimera checking.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

function _qiime_vsearch_uchime-ref {
    _arguments \
        '--i-sequences[The feature sequences to be chimera-checked.]' \
        '--i-table[Feature table (used for computing total feature abundances). \[required\]]' \
        '--i-reference-sequences[The non-chimeric reference sequences. \[required\]]' \
        '--p-dn[No vote pseudo-count, corresponding to the]' \
        '--p-mindiffs[Minimum number of differences per segment.]' \
        '--p-mindiv[Minimum divergence from closest parent.]' \
        '--p-minh[Minimum score (h). Increasing this value tends to reduce the number of false positives and to decrease sensitivity. \[default: 0.28\]]' \
        '--p-xn[No vote weight, corresponding to the parameter beta in the scoring function. \[default: 8.0\]]' \
        '--p-threads[The number of threads to use for computation. Passing 0 will launch one thread per CPU core.]' \
        '--o-chimeras[The chimeric sequences. \[required\]]' \
        '--o-nonchimeras[The non-chimeric sequences. \[required\]]' \
        '--o-stats[Summary statistics from chimera checking.]' \
        '--output-dir[Output unspecified results to a directory]':file:_files \
        {--verbose,--quiet}'[Display verbose output to stdout and/or stderr during execution of this action. Or silence output if execution is successful (silence is golden).]' \
        '--example-data[Write example data and exit.]':file:_files \
        '--citations[Show citations and exit.]' \
        '--help[Show this message and exit.]' \
        "*: :_files"

}

_qiime "$@"


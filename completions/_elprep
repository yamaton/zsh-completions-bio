#compdef elprep

# Auto-generated with h2o


function _elprep {
    local line state

    function _commands {
        local -a commands
        commands=(
            'filter:filter'
            'split:split .sam/.bam files per chromosome so they can be processed without information loss'
            'merge:merge .sam/.bam files created by elprep split'
            'merge-optical-duplicates-metrics:merge intermediate metrics files created by the --mark-optical-duplicates-intermediate option'
            'sfm:filter and update .sam/.bam files and variant calling "per chromosome"'
            'vcf-to-elsites:convert a .vcf file to an .elsites file'
            'bed-to-elsites:convert a .bed file to an .elsites file'
            'fasta-to-elfasta:convert a .fasta file to an .elfasta file'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (filter)
            _elprep_filter
            ;;

        (split)
            _elprep_split
            ;;

        (merge)
            _elprep_merge
            ;;

        (merge-optical-duplicates-metrics)
            _elprep_merge-optical-duplicates-metrics
            ;;

        (sfm)
            _elprep_sfm
            ;;

        (vcf-to-elsites)
            _elprep_vcf-to-elsites
            ;;

        (bed-to-elsites)
            _elprep_bed-to-elsites
            ;;

        (fasta-to-elfasta)
            _elprep_fasta-to-elfasta
            ;;

        esac
        ;;
     esac

}

function _elprep_filter {
    _arguments \
        '--replace-reference-sequences[Replace the header of a .sam/.bam file by a new header. The new header is passed as a single argument following the command option. The format of the new header can either be a .dict file or another .sam/.bam file from which you wish to extract the new header.]':file:_files \
        '--filter-unmapped-reads[Removes all alignments in the input file that are unmapped. An alignment is determined unmapped when bit 0x4 of its FLAG is set, conforming to the SAM specification.]' \
        '--filter-unmapped-reads-strict[Removes all alignments in the input file that are unmapped. An alignment is determined unmapped when bit 0x4 of its FLAG is set, conforming to the SAM specification. Also removes alignments where the mapping position (POS) is 0 or where the reference sequence name (RNAME) is *. Such alignments are considered unmapped by the SAM specification, but some alignment programs may not mark the FLAG of those alignments as unmapped.]' \
        '--filter-mapping-quality[Remove all alignments with mapping quality lower than the given mapping quality.]' \
        '--filter-non-exact-mapping-reads[Removes all alignments where the mapping is not an exact match with the reference, albeit soft-clipping is allowed. This filter checks the CIGAR string and only allows occurences of M and S.]' \
        '--filter-non-exact-mapping-reads-strict[Removes all alignments where the mapping is not an exact match with reference or not a unique match. This filter checks for each read that the following optional fields are present with the following values: X0=1 (unique mapping), X1=0 (no suboptimal hit), XM=0 (no mismatch), XO=0 (no gap opening), XG=0 (no gap extension).]' \
        '--filter-non-overlapping-reads[Removes all reads where the mapping positions do not overlap with any region specified in the bed file. Specifically, either the start or end of the read'\''s mapping position must be contained in an interval, or the read is removed from the output.]':file:_files \
        '--replace-read-group[Replace or add read groups to the alignments in the input file. This command option takes a single argument, a string of the form "ID:group1 LB:lib1 PL:illumina PU:unit1 SM:sample1" where the names following ID:, PL:, PU:, etc. can be any user-chosen name conforming to the SAM specification. See SAM Format Specification Section 1.3 for details: The string passed here can be any string conforming to a header line for tag @RG, omitting the tag @RG itself, and using whitespace as separators for the line instead of TABs.]' \
        '--mark-duplicates[Mark the duplicate reads in the input file by setting bit 0x400 of their FLAG conforming to the SAM specification. For details on the algorithm and comparison to other tools, please consult our publication list.]' \
        '--mark-optical-duplicates[Emsire optical duplicate marking is performed and a metrics file is generated that contains read statistics such as number of unmapped reads, secondary reads, duplicate reads, optical duplicates, library size estimate, etc. For details on the algorithm and comparison to other tools, please consult our publication list.]':file:_files \
        '--optical-duplicates-pixel-distance[Specify the pixel distance that is used for optical duplicate marking. This option is only usable in conjunction with --mark-optical-duplicates. The default value for the pixel distance is 100. In general, a pixel distance of 100 is recommended for data generated using unpatterned flowcells (e.g. HiSeq2500) and a pixel distance of 2500 is recommended for patterned flowcells (e.g. NovaSeq/HiSeq4000).]' \
        '--remove-duplicates[Remove all reads marked as duplicates. Duplicate reads are reads where their FLAG'\''s bit 0x400 is set conforming the SAM specification.]' \
        '--remove-optional-fields[Remove for each alignment either all optional fields or all optional fields specified in the given list. The list of optional fields to remove has to be of the form "tag1, tag2, ..." where tag1, tag2, etc are the tags of the optional fields that need to be deleted.]' \
        '--keep-optional-fields[Remove for each alignment either none of its optional fields, or all optional fields except those specified in the given list. The list of optional fields to keep has to be of the form "tag1, tag2, ..." where tag1, tag2, etc are the tags of the optional fields that need to be kept in the output.]' \
        '--clean-sam[Fix alignments in two ways:]' \
        '--bqsr[Perform base quality score recalibration. The recal-file is used for logging the recalibration tables computed during base recalibration. This file is compatible with MultiQC for visualisation.]':file:_files \
        '--reference[Pass a reference file for base quality score recalibration (--bqsr). The reference file must be in the .elfasta format, specific to elPrep.]':file:_files \
        '--known-sites[Pass a number of known polymorphic sites that will be excluded during base recalibration (--bqsr) . The list is a list of files in the .elsites format, specific to elPrep. For example:]' \
        '--known-sites[You can create .elsites files from .vcf or .bed files using the vcf-to-elsites and bed-to-elsites parameters respectively. For example:]' \
        '--sqq[Indicate to use static quantized quality scores to a given number of levels during base quality score recalibration (--bqsr). This list should be of the form "\[nr, nr, nr\]". The default value is \[\].]' \
        '--max-cycle[Specify the maximum cycle value during base quality score recalibration (--bqsr). The default value is 500.]' \
        '--target-regions[Restrict which reads the base recalibration operates on by passing a .bed file that lists which genomic regions to consider. When this option is used, the reads that fall out of the specified regions are removed from the output .bam file. The option is for example used when processing exomes.]':file:_files \
        '--bqsr-tablename-prefix[Determine the prefix for the table names when logging the recalibration tables. The default value ensures that the output is compatible with MultiQC. It is normally not necessary to set this option.]' \
        '--mark-optical-duplicates-intermediate[Used in the context of filtering files created using the elprep split command. It is used internally by the elprep sfm command, but can be used when writing your own split/filter/merge scripts.]':file:_files \
        '--bqsr-tables-only[Used in the context of filtering files created using the elprep split command. It is used internally by the elprep sfm command, but can be used when writing your own split/filter/merge scripts.]':file:_files \
        '--bqsr-apply[Used when filtering files created by the elprep split command. It is used internally by the elprep sfm command, and can be used when writing your own split/filter/merge scripts.]':file:_files \
        '--haplotypecaller[This option performs variant calling for detecting germline SNPS and indels. The vcf-file is used for storing the vcf output. This file can be in gzipped format.]':file:_files \
        '--reference[Pass a reference file for variant calling (--haplotypecaller). The reference file must be in the .elfasta format, specific to elPrep.]' \
        '--reference-confidence[Set the mode for emitting reference confidence scores when performing variant calling (--haplotypecaller). There are three options to choose from:]' \
        '--sample-name[The elPrep haplotypecaller (--haplotypecaller) only works for single samples. In case the input .bam file contains multiple samples, the --sample-name option can be used to select the sample reads on which to operate on.]' \
        '--activity-profile[Output the activity profile calculated by the haplotypecaller to the given file in IGV format.]':file:_files \
        '--activity-regions[Output the assembly regions calculated by haplotypecaller to the speficied file in IGV format .]':file:_files \
        '--assembly-region-padding[Specfy the number of additional bases to include around each assembly region for variant calling.]' \
        '--target-regions[By default, the haplotypecaller scans the full genome for variants. Use this option to restrict the variant caller to specific regions by passing a .bed file. It is for example used when processing exomes.]':file:_files \
        '--sorting-order[This command option determines the order of the alignments in the output file. The command option must be followed by one of five possible orders:]' \
        '--nr-of-threads[Sets the number of threads that elPrep uses during execution. The default number of threads is equal to the number of cpu threads.]' \
        '--timed[Time the different phases of the execution of the elprep command, e.g. time spent on reading from file into memory, filtering, sorting, etc.]' \
        '--log-path[Specify a path where elPrep can store log files. The default path is the logs folder in your home path (~/logs).]':file:_files \
        "*: :_files"

}

function _elprep_split {
    _arguments \
        '-output-prefix[The split command groups entries in the sequence dictionary. The purpose of this grouping is to create groups of which the lengths of the entries (LN tags) add up to roughly the same size.]' \
        '--output-type[This command option sets the format of the split files. By default, elprep uses the same format as the input file for the split files.]' \
        '--nr-of-threads[This command option sets the number of threads that elPrep uses during execution for parsing/outputting .sam/.bam data. The default number of threads is equal to the number of cpu threads.]' \
        '--single-end[When this command option is set, the elprep split command will treat the data as single-end data. When the option is not used, the elprep split command will treat the data as paired-end data.]' \
        '--log-path[Sets the path for writing a log file.]':file:_files \
        '--contig-group-size[The elprep split command groups the sequence dictionary entries for deciding how to split up the input data. The --contig-group-size options allows configuring a specific group size. See the description of --contig-group-size for the elprep sfm command for more details.]' \
        "*: :_files"

}

function _elprep_merge {
    _arguments \
        '-nr-of-threads[Set the number of threads that elPrep uses during execution for parsing/outputting .sam/.bam data. The default number of threads is equal to the number of cpu threads.]' \
        '--single-end[Treat the data as single-end data. When this option is not used, elprep merge assumes the data is paired-end, expecting the data is merging to be generated by the elprep split command accordingly.]' \
        '--log-path[Sets the path for writing a log file.]':file:_files \
        "*: :_files"

}

function _elprep_merge-optical-duplicates-metrics {
    _arguments \
        '-nr-of-threads[Set the number of threads that elPrep uses during execution for parsing/outputting .sam/.bam data. The default number of threads is equal to the number of cpu threads.]' \
        '--remove-duplicates[Pass this option if the metrics were generated for a file for which the duplicates were removed. This information will be included in the merged metrics file.]' \
        "*: :_files"

}

function _elprep_sfm {
    _arguments \
        '-intermediate-files-output-type[Set the format of the split files. By default, elprep uses the same format as the input file for the split files. Changing the intermediate file output type may improve either runtime (.sam) or reduce peak disk usage (.bam).]' \
        '--tmp-path[Specify a path where elPrep can store temporary files that are created (and deleted) by the split and merge commands that are silently called by the elprep sfm command. The default path is the folder from where you call elprep sfm.]' \
        '--single-end[Indicate the sfm command is processing single-end data. This information is important for the split/merge tools to operate correcly. For more details, see the description of the elprep split and elprep merge commands.]' \
        '--contig-group-size[Passed to the split tool.]' \
        "*: :_files"

}

function _elprep_vcf-to-elsites {
    _arguments \
        '--log-path[Sets the path for writing a log file.]':file:_files \
        "*: :_files"

}

function _elprep_bed-to-elsites {
    _arguments \
        '--log-path[Sets the path for writing a log file.]':file:_files \
        "*: :_files"

}

function _elprep_fasta-to-elfasta {
    _arguments \
        '--log-path[Sets the path for writing a log file.]':file:_files \
        "*: :_files"

}

_elprep "$@"


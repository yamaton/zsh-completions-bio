#compdef prefetch

# Auto-generated with h2o

function _prefetch {
    _arguments \
        {-T,--type}'[Specify file type to download. Default: sra]' \
        {-t,--transport}'[Transport: one of: fasp; http; both \[default\]. (fasp only; http only; first try fasp (ascp), use http if cannot download using fasp).]' \
        '--location[Location of data.]' \
        {-N,--min-size}'[Minimum file size to download in KB (inclusive).]' \
        {-X,--max-size}'[Maximum file size to download in KB (exclusive). Default: 20G]' \
        {-f,--force}'[Force object download: one of: no, yes, all, ALL. no \[default\]: skip download if the object if found and complete; yes: download it even if it is found and is complete; all: ignore lock files (stale locks or it is being downloaded by another process use at your own risk!); ALL: ignore lock files, restart download from beginning.]' \
        {-r,--resume}'[Resume partial downloads: one of: no, yes \[default\].]' \
        {-C,--verify}'[Verify after download: one of: no, yes \[default\].]' \
        {-p,--progress}'[Show progress.]' \
        {-H,--heartbeat}'[Time period in minutes to display download progress. (0: no progress), default: 1]' \
        '--eliminate-quals[Don'\''t download QUALITY column.]' \
        {-c,--check-all}'[Double-check all refseqs.]' \
        {-S,--check-rs}'[Check for refseqs in downloaded files: one of: no, yes, smart \[default\]. Smart: skip check for large encrypted non-sra files.]' \
        {-o,--order}'[Kart prefetch order when downloading kart: one of: kart, size. (in kart order, by file size: smallest first), default: size.]' \
        {-R,--rows}'[Kart rows to download (default all). Row list should be ordered.]' \
        '--perm[PATH to jwt cart file.]':file:_files \
        '--ngc[PATH to ngc file.]':file:_files \
        '--cart[To read kart file.]':file:_files \
        {-a,--ascp-path}'[Path to ascp program and   private key file (asperaweb_id_dsa.putty)]':file:_files \
        '--ascp-options[Arbitrary options to pass to ascp command line.]' \
        {-o,--output-file}'[Write file to FILE when downloading single file.]':file:_files \
        {-O,--output-directory}'[Save files to DIRECTORY/]':file:_files \
        {-h,--help}'[Output brief explanation for the program.]' \
        {-V,--version}'[Display the version of the program then quit.]' \
        {-L,--log-level}'[Logging level as number or enum string. One of (fatal|sys|int|err|warn|info|debug) or (0-6) Current/default is warn.]' \
        {-v,--verbose}'[Increase the verbosity of the program status messages. Use multiple times for more verbosity. Negates quiet.]' \
        {-q,--quiet}'[Turn off all status messages for the program. Negated by verbose.]' \
        '--option-file[Read more options and parameters from the file.]':file:_files \
        "*: :_files"

}

_prefetch "$@"


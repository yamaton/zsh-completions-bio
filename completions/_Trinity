#compdef Trinity

# Auto-generated with h2o

function _Trinity {
    _arguments \
        '--seqType[type of reads: ('\''fa'\'' or '\''fq'\'')]' \
        '--max_memory[suggested max memory to use by Trinity where limiting can be enabled. (jellyfish, sorting, etc) provided in Gb of RAM, ie. '\''--max_memory 10G'\'']' \
        '--left[left reads, one or more file names (separated by commas, no spaces)]' \
        '--right[right reads, one or more file names (separated by commas, no spaces)]' \
        '--single[single reads, one or more file names, comma-delimited (note, if single file contains pairs, can use flag: --run_as_paired )]' \
        '--samples_file[tab-delimited text file indicating biological replicate relationships.]' \
        '--include_supertranscripts[yield supertranscripts fasta and gtf files as outputs.]' \
        '--SS_lib_type[Strand-specific RNA-Seq read orientation.   if paired: RF or FR, if single: F or R. (dUTP method = RF) See web documentation.]' \
        '--CPU[number of CPUs to use, default: 2]' \
        '--min_contig_length[minimum assembled contig length to report   (def=200)]' \
        '--long_reads[fasta file containing error-corrected or circular consensus (CCS) pac bio reads (** note: experimental parameter **, this functionality continues to be under development]' \
        '--genome_guided_bam[genome guided mode, provide path to coordinate-sorted bam file.   (see genome-guided param section under --show_full_usage_info)]' \
        '--long_reads_bam[long reads to include for genome-guided Trinity   (bam file consists of error-corrected or circular consensus (CCS) pac bio read aligned to the genome)]' \
        '--jaccard_clip[option, set if you have paired reads and   you expect high gene density with UTR overlap (use FASTQ input file format for reads). (note: jaccard_clip is an expensive operation, so avoid using it unless necessary due to finding excessive fusion transcripts w/o it.)]' \
        '--trimmomatic[run Trimmomatic to quality trim reads   see '\''--quality_trimming_params'\'' under full usage info for tailored settings.]' \
        '--output[name of directory for output (will be   created if it doesn'\''t already exist) default: (your current working directory) note: must include '\''trinity'\'' in the name as a safety precaution! )]' \
        '--full_cleanup[only retain the Trinity fasta file, rename as ${output_dir}.Trinity.fasta]' \
        '--cite[show the Trinity literature citation]' \
        '--verbose[provide additional job status info during the run.]' \
        '--version[reports Trinity version (Trinity-v2.13.2) and exits.]' \
        '--show_full_usage_info[show the many many more options available for running Trinity (expert usage).]' \
        '--no_super_reads[turn off super-reads mode]' \
        '--prep[Only prepare files (high I/O usage) and stop before kmer counting.]' \
        '--no_cleanup[retain all intermediate input files.]' \
        '--no_version_check[dont run a network check to determine if software updates are available.]' \
        '--no_symlink[dont symlink, just copy files instead (sets env var NO_SYMLINK=TRUE)]' \
        '--monitoring[use collectl to monitor all steps of Trinity]' \
        '--monitor_sec[number of seconds for each interval of runtime monitoring (default: 60)]' \
        '--no_distributed_trinity_exec[do not run Trinity phase 2 (assembly of partitioned reads), and stop after generating command list.]' \
        '--workdir[where Trinity phase-2 assembly computation takes place (defaults to --output setting). (can set this to a node-local drive or RAM disk)]' \
        '--min_kmer_cov[min count for K-mers to be assembled by   Inchworm (default: 1)]' \
        '--inchworm_cpu[number of CPUs to use for Inchworm, default is min(6, --CPU option)]' \
        '--no_run_inchworm[stop after running jellyfish, before inchworm. (phase 1, read clustering only)]' \
        '--max_reads_per_graph[maximum number of reads to anchor within   a single graph (default: 200000)]' \
        '--min_glue[min number of reads needed to glue two inchworm contigs   together. (default: 2)]' \
        '--max_chrysalis_cluster_size[max number of Inchworm contigs to be included in a single Chrysalis cluster. (default: 25)]' \
        '--no_bowtie[dont run bowtie to use pair info in chrysalis clustering.]' \
        '--no_run_chrysalis[stop after running inchworm, before chrysalis. (phase 1, read clustering only)]' \
        '--bfly_algorithm[assembly algorithm to use. Options: ORIGINAL PASAFLY]' \
        '--bfly_opts[additional parameters to pass through to butterfly   (see butterfly options: java -jar Butterfly.jar ). (note: only for expert or experimental use. Commonly used parameters are exposed through this Trinity menu here).]' \
        '--group_pairs_distance[maximum length expected between fragment pairs (default: 500)   (reads outside this distance are treated as single-end)]' \
        '--path_reinforcement_distance[minimum overlap of reads with growing transcript path (default: PE: 25, SE: 25) Set to 1 for the most lenient path extension requirements.]' \
        '--no_path_merging[all final transcript candidates are output (including SNP variations, however, some SNPs may be unphased)]' \
        '--min_per_id_same_path[min percent identity for two paths to be merged into single paths (default: 98)]' \
        '--max_diffs_same_path[max allowed differences encountered between path sequences to combine them (default: 2)]' \
        '--max_internal_gap_same_path[maximum number of internal consecutive gap characters allowed for paths to be merged into single paths. (default: 10)]' \
        '--bflyHeapSpaceMax[java max heap space setting for butterfly   (default: 10G) => yields command '\''java -Xmx10G -jar Butterfly.jar ... $bfly_opts'\'']' \
        '--bflyHeapSpaceInit[java initial heap space settings for   butterfly (default: 1G) => yields command '\''java -Xms1G -jar Butterfly.jar ... $bfly_opts'\'']' \
        '--bflyGCThreads[threads for garbage collection   (default: 2))]' \
        '--bflyCPU[CPUs to use (default will be normal   number of CPUs; e.g., 2)]' \
        '--bflyCalculateCPU[Calculate CPUs based on 80% of max_memory   divided by maxbflyHeapSpaceMax]' \
        '--bfly_jar[/path/to/Butterfly.jar, otherwise default   Trinity-installed version is used.]' \
        '--quality_trimming_params[defaults to: "ILLUMINACLIP:path/to/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:5 LEADING:5 TRAILING:5 MINLEN:25"]' \
        '--normalize_max_read_cov[defaults to 200]' \
        '--normalize_by_read_set[run normalization separate for each pair of fastq files,   then one final normalization that combines the individual normalized reads. Consider using this if RAM limitations are a consideration.]' \
        '--just_normalize_reads[stop after performing read normalization]' \
        '--no_normalize_reads[Do *not* run in silico normalization of reads. Defaults to max. read coverage of 200. see '\''--normalize_max_read_cov'\'' under full usage info for tailored settings. (Note, as of Sept 21, 2016, normalization is on by default) (*Turning off normalization is not recommended for most applications)]' \
        '--no_parallel_norm_stats[Do not try to run the high-mem normalization stats generator in parallel for paired-end fastqs.]' \
        '--genome_guided_max_intron[maximum allowed intron length (also maximum fragment span on genome)]' \
        '--genome_guided_min_coverage[minimum read coverage for identifying and expressed region of the genome. (default: 1)]' \
        '--genome_guided_min_reads_per_partition[default min of 10 reads per partition]' \
        '--grid_exec[your command-line utility for submitting jobs to the grid.   This should be a command line tool that accepts a single parameter: ${your_submission_tool} /path/to/file/containing/commands.txt and this submission tool should exit(0) upon successful completion of all commands.]' \
        '--grid_node_CPU[number of threads for each parallel process to leverage. (default: 1)]' \
        '--grid_node_max_memory[max memory targeted for each grid node. (default: 1G)]' \
        '--FORCE[ignore failed commands from earlier run, continue on.   (Note, this should only be used after you'\''ve already dealt with these failed commands directly as needed)]' \
        "*: :_files"

}

_Trinity "$@"


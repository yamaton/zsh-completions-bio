#compdef agat

# Auto-generated with h2o


function _agat {
    local line state

    function _commands {
        local -a commands
        commands=(
            'levels:Handle feature types and relationships'
            'config:Handle agat configuration used by _sp_ scripts'
            'help:print a help message'
            'commands:list sub-commands'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {--help,-h}'[Display the help]' \
        {--version,-v}'[Display the AGAT version]' \
        {--tools,-t}'[Display the AGAT tools available]' \
        {--info,-i}'[Display information on how AGAT works]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (levels)
            _agat_levels
            ;;

        (config)
            _agat_config
            ;;

        (help)
            _agat_help
            ;;

        (commands)
            _agat_commands
            ;;

        esac
        ;;
     esac

}

function _agat_levels {
    _arguments \
        '--help[-h]' \
        '--expose[-e]' \
        "*: :_files"

}

function _agat_config {
    _arguments \
        '--help[-h]' \
        '--expose[-e]' \
        '--verbose[progress_bar: To activate / deactivate the progress bar. \[Default activated\]]' \
        {--progress_bar,--no-progress_bar}'[log: To create a log file while parsing the input file to keep track of modification made by AGAT. \[Default activated\]]' \
        {--log,--no-log}'[debug: Extra verbosity for debugging. \[Default deactivated\]]' \
        {--debug,--no-debug}'[tabix: To sort the output in tabix format. \[Default deactivated\]]' \
        {--tabix,--no-tabix}'[merge_loci: To merge loci that overlap at CDS level in a single locus. \[Default deactivated\]]' \
        {--merge_loci,--no-merge_loci}'[throw_fasta: To throw the fasta embedded in the input file. \[Default deactivated\]]' \
        '--force_gff_input_version[output_format: Set the output format. Choice GFF or GTF. \[Default GFF\]]' \
        {--create_l3_for_l2_orphan,--no-create_l3_for_l2_orphan}'[locus_tag: Coma separated list of attribute tag to use to define locus. Will be used if no Parent/id GFF relationship exist or gene_id/transcript_id GTF tag. \[Default locus_tag, gene_id \]]' \
        '--locus_tag[prefix_new_id: Prefix to be used for ID of newly created feature. \[Default nbis\]]' \
        {--check_all_level3_locations,--no-check_all_level3_locations}'[check_cds: To check when stop codons are definied that they are part of the CDS. If not AGAT extends the CDS to include it. \[Default activated\]]' \
        {--check_cds,--no-check_cds}'[check_exons: To check that exons include all other l3 feature types that are included within exon (see feature_levels.yaml file e.g: cds:"exon"). \[Default activated\]]' \
        {--check_exons,--no-check_exons}'[check_utrs: To create UTRs if missing based on CDS and exon features. \[Default activated\]]' \
        "*: :_files"

}

function _agat_help {
    _arguments \
        "*: :_files"

}

function _agat_commands {
    _arguments \
        "*: :_files"

}

_agat "$@"


#compdef _mummer mummer

# Auto-generated with h2o


function _mummer {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-mum[compute maximal matches that are unique in both sequences]' \
        '-mumreference[compute maximal matches that are unique in the referencesequence but not necessarily in the query-sequence (default)]' \
        '-mumcand[same as -mumreference]' \
        '-maxmatch[compute all maximal matches regardless of their uniqueness]' \
        '-l[set the minimum length of a match if not set, the default value is 20]' \
        '-b[compute forward and reverse complement matches]' \
        '-F[force 4 column output format regardless of the number of reference sequence inputs]' \
        '-n[match only the characters a, c, g, or t]' \
        '-L[print length of query sequence in header of matches]' \
        '-r[compute only reverse complement matches]' \
        '-s[print first 53 characters of the matching substring]' \
        '-c[Report the query position of a reverse complement match relative to the forward strand of the query sequence]' \
        '-k[sampled suffix positions (one by default)]' \
        '-threads[number of threads to use for -maxmatch, only valid k > 1]' \
        '-qthreads[number of threads to use for queries]' \
        '-suflink[use suffix links (1=yes or 0=no) in the index and during search \[auto\]]' \
        '-child[use child table (1=yes or 0=no) in the index and during search \[auto\]]' \
        '-skip[sparsify the MEM-finding algorithm even more, performing jumps of skip*k \[auto (l-10)/k\] this is a performance parameter that trade-offs SA traversal with checking of right-maximal MEMs]' \
        '-kmer[use kmer table containing sa-intervals (speeds up searching first k characters) in the index and during search \[int value, auto\]]' \
        '-save[save index to file to use again later (string)]' \
        '-load[load index from file]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}


#compdef centrifuge

# Auto-generated with h2o

function _centrifuge {
    _arguments \
        '-x[Index filename prefix (minus trailing .X.cf).]' \
        '-1[Files with #1 mates, paired with files in <m2>. Could be gzip'\''ed (extension: .gz) or bzip2'\''ed (extension: .bz2).]':file:_files \
        '-2[Files with #2 mates, paired with files in <m1>. Could be gzip'\''ed (extension: .gz) or bzip2'\''ed (extension: .bz2).]':file:_files \
        '-U[Files with unpaired reads. Could be gzip'\''ed (extension: .gz) or bzip2'\''ed (extension: .bz2).]':file:_files \
        '--sample-sheet[A TSV file where each line represents a sample.]':file:_files \
        '--report-file[File for tabular report output (default: centrifuge_report.tsv)]' \
        '-S[File for classification output (default: stdout)]':file:_files \
        '-q[query input files are FASTQ .fq/.fastq (default)]' \
        '--qseq[query input files are in Illumina'\''s qseq format]' \
        '-f[query input files are (multi-)FASTA .fa/.mfa]' \
        '-r[query input files are raw one-sequence-per-line]' \
        '-c[<m1>, <m2>, <r> are sequences themselves, not files]' \
        {-s,--skip}'[skip the first <int> reads/pairs in the input (none)]' \
        {-u,--upto}'[stop after first <int> reads/pairs (no limit)]' \
        {-5,--trim5}'[trim <int> bases from 5'\''/left end of reads (0)]' \
        {-3,--trim3}'[trim <int> bases from 3'\''/right end of reads (0)]' \
        '--phred33[qualities are Phred+33 (default)]' \
        '--phred64[qualities are Phred+64]' \
        '--int-quals[qualities encoded as space-delimited integers]' \
        '--ignore-quals[treat all quality values as 30 on Phred scale (off)]' \
        '--nofw[do not align forward (original) version of read (off)]' \
        '--norc[do not align reverse-complement version of read (off)]' \
        '--min-hitlen[minimum length of partial hits (default 22, must be greater than 15)]' \
        '-k[report upto <int> distinct, primary assignments for each read or pair]' \
        '--host-taxids[comma-separated list of taxonomic IDs that will be preferred in classification]' \
        '--exclude-taxids[comma-separated list of taxonomic IDs that will be excluded in classification]' \
        '--out-fmt[define output format, either '\''tab'\'' or '\''sam'\'' (tab)]' \
        '--tab-fmt-cols[columns in tabular format, comma separated]' \
        {-t,--time}'[print wall-clock time taken by search phases]' \
        '--un[write unpaired reads that didn'\''t align to <path>]':file:_files \
        '--al[write unpaired reads that aligned at least once to <path>]':file:_files \
        '--un-conc[write pairs that didn'\''t align concordantly to <path>]':file:_files \
        '--al-conc[write pairs that aligned concordantly at least once to <path>]':file:_files \
        '--quiet[print nothing to stderr except serious errors]' \
        '--met-file[send metrics to file at <path> (off)]':file:_files \
        '--met-stderr[send metrics to stderr (off)]' \
        '--met[report internal counters & metrics every <int> secs (1)]' \
        {-p,--threads}'[number of alignment threads to launch (1)]' \
        '--mm[use memory-mapped I/O for index; many instances can share]' \
        '--qc-filter[filter out reads that are bad according to QSEQ filter]' \
        '--seed[seed for random number generator (0)]' \
        '--non-deterministic[seed rand. gen. arbitrarily instead of using read attributes]' \
        '--version[print version information and quit]' \
        {-h,--help}'[print this usage message]' \
        "*: :_files"

}

_centrifuge "$@"


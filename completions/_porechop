#compdef porechop

# Auto-generated with h2o

function _porechop {
    _arguments \
        {-i,--input}'[FASTA/FASTQ of input reads or a directory which will be recursively searched for FASTQ files (required)]' \
        {-o,--output}'[Filename for FASTA or FASTQ of trimmed reads (if not set, trimmed reads will be printed to stdout)]' \
        '--format[Output format for the reads - if auto, the format will be chosen based on the output filename or the input read format (default: auto)]' \
        {-v,--verbosity}'[Level of progress information: 0 = none, 1 = some, 2 = lots, 3 = full - output will go to stdout if reads are saved to a file and stderr if reads are printed to stdout (default: 1)]' \
        {-t,--threads}'[Number of threads to use for adapter alignment (default: 12)]' \
        {-b,--barcode_dir}'[Reads will be binned based on their barcode and saved to separate files in this directory (incompatible with --output)]':file:_files \
        '--barcode_threshold[A read must have at least this percent identity to a barcode to be binned (default: 75.0)]' \
        '--barcode_diff[If the difference between a read'\''s best barcode identity and its second-best barcode identity is less than this value, it will not be put in a barcode bin (to exclude cases which are too close to call) (default: 5.0)]' \
        '--require_two_barcodes[Reads will only be put in barcode bins if they have a strong match for the barcode on both their start and end (default: a read can be binned with a match at its start or end)]' \
        '--untrimmed[Bin reads but do not trim them (default: trim the reads)]' \
        '--discard_unassigned[Discard unassigned reads (instead of creating a "none" bin) (default: False)]' \
        '--adapter_threshold[An adapter set has to have at least this percent identity to be labelled as present and trimmed off (0 to 100) (default: 90.0)]' \
        '--check_reads[This many reads will be aligned to all possible adapters to determine which adapter sets are present (default: 10000)]' \
        '--scoring_scheme[Comma-delimited string of alignment scores: match, mismatch, gap open, gap extend (default: 3,-6,-5,-2)]' \
        '--end_size[The number of base pairs at each end of the read which will be searched for adapter sequences (default: 150)]' \
        '--min_trim_size[Adapter alignments smaller than this will be ignored (default: 4)]' \
        '--extra_end_trim[This many additional bases will be removed next to adapters found at the ends of reads (default: 2)]' \
        '--end_threshold[Adapters at the ends of reads must have at least this percent identity to be removed (0 to 100) (default: 75.0)]' \
        '--no_split[Skip splitting reads based on middle adapters (default: split reads when an adapter is found in the middle)]' \
        '--discard_middle[Reads with middle adapters will be discarded (default: reads with middle adapters are split) (required for reads to be used with Nanopolish, this option is on by default when outputting reads into barcode bins)]' \
        '--middle_threshold[Adapters in the middle of reads must have at least this percent identity to be found (0 to 100) (default: 90.0)]' \
        '--extra_middle_trim_good_side[This many additional bases will be removed next to middle adapters on their "good" side (default: 10)]' \
        '--extra_middle_trim_bad_side[This many additional bases will be removed next to middle adapters on their "bad" side (default: 100)]' \
        '--min_split_read_size[Post-split read pieces smaller than this many base pairs will not be outputted (default: 1000)]' \
        {-h,--help}'[Show this help message and exit]' \
        '--version[Show program'\''s version number and exit]' \
        "*: :_files"

}

_porechop "$@"

